🚀 Modular Iterative Agent-Based Feature Selection Examples
======================================================================
✅ API key loaded successfully

🔍 Example: Multi-Ticker Processing with SVM
==================================================
🤖 Using SVM model with kernel: rbf
   C: 1.0, Gamma: scale
   Epsilon: 0.1, Max iterations: 1000
Using device: cpu
✅ Claude API client initialized successfully!
🚀 Starting Multi-Ticker Iterative Agent-Based Feature Selection Process
================================================================================
Processing iterative tickers: ABCB, EIG, EYE, AAP, FSS, ABM, IART, SRPT, EXTR, SCSC, SLG, HL, ANDE, AROC
Available for validation: AAP, AAT, ABCB, ABG, ABM, ABR, ACAD, ACHC, ACIW, ACLS, ADMA, ADNT, ADUS, AEIS, AEO, AGO, AGYS, AHH, AIN, AIR, AKR, AL, ALEX, ALG, ALGT, ALKS, ALRM, AMN, AMPH, AMSF, AMWD, ANDE, ANGI, ANIP, AOSL, APAM, APLE, APOG, ARCB, ARI, AROC, ARR, ARWR, ASIX, ASTE, ATEN, ATGE, AVA, AWI, AWR, AXL, AZZ, BANC, BANF, BANR, BCC, BCPC, BDN, BFS, BHE, BJRI, BKE, BKU, BL, BLFS, BLMN, BMI, BOH, BOOT, BOX, BRC, BTU, BWA, BXMT, CABO, CAKE, CAL, CALM, CALX, CARG, CARS, CASH, CATY, CBRL, CBU, CC, CCOI, CCS, CE, CENT, CENTA, CENX, CEVA, CFFN, CHCO, CHEF, CLB, CNK, CNMD, CNS, CNXN, COHU, COLL, CORT, CPF, CPK, CPRX, CRI, CRK, CRVL, CSGS, CTRE, CTS, CUBI, CVBF, CVCO, CVI, CWT, CXW, CZR, DAN, DCOM, DEA, DEI, DFIN, DGII, DIOD, DLX, DNOW, DORM, DRH, DVAX, DXC, DXPE, DY, EAT, ECPG, EFC, EGBN, EIG, ENPH, ENR, ENVA, EPC, ESE, ETSY, EVTC, EXPI, EXTR, EYE, EZPW, FBK, FBNC, FBP, FCF, FCPT, FDP, FELE, FFBC, FHB, FIZZ, FMC, FORM, FOXF, FRPT, FSS, FUL, FULT, FUN, FWRD, GBX, GDEN, GEO, GES, GFF, GIII, GKOS, GNL, GNW, GOGO, GOLF, GPI, GRBK, GTY, GVA, HAFC, HASI, HBI, HCC, HCI, HCSG, HELE, HFWA, HI, HIW, HL, HLIT, HLX, HMN, HNI, HOPE, HP, HSII, HSTM, HTH, HTLD, HUBG, HWKN, HZO, IAC, IART, IBP, ICHR, ICUI, IDCC, IIIN, IIPR, INDB, INN, INSW, INVA, IOSP, IPAR, ITGR, ITRI, JBGS, JBLU, JBSS, JJSF, JOE, KAI, KALU, KAR, KFY, KLIC, KMT, KN, KOP, KREF, KRYS, KSS, KW, KWR, LCII, LEG, LGIH, LGND, LKFN, LMAT, LNC, LNN, LPG, LQDT, LRN, LTC, LXP, LZB, MAC, MAN, MARA, MATW, MATX, MC, MCRI, MCY, MD, MDU, MGEE, MGPI, MHO, MKTX, MMI, MMSI, MNRO, MPW, MRCY, MRTN, MSEX, MTH, MTRN, MTX, MWA, MXL, MYGN, MYRG, NAVI, NBHC, NBTB, NEO, NEOG, NGVT, NHC, NMIH, NOG, NPK, NPO, NSIT, NTCT, NWBI, NWL, NWN, NX, NXRT, OFG, OI, OII, OMCL, OSIS, OTTR, OUT, OXM, PAHC, PARR, PATK, PBH, PBI, PCRX, PDFS, PEB, PENN, PFBC, PFS, PI, PINC, PJT, PLAB, PLAY, PLUS, PLXS, PMT, POWL, PRA, PRAA, PRGS, PRK, PRLB, PSMT, PTEN, PTGX, PZZA, QDEL, QNST, QRVO, QTWO, RDN, RDNT, RES, REX, RGR, RHI, RHP, RNST, ROCK, ROG, RUN, RUSHA, RWT, SAFE, SABR, SAFT, SAH, SANM, SBCF, SBH, SBSI, SCHL, SCL, SCSC, SCVL, SEDG, SEE, SEM, SFBS, SFNC, SHAK, SHEN, SHO, SHOO, SIG, SKT, SKY, SKYW, SLG, SM, SMP, SMPL, SMTC, SNDR, SPSC, SPXC, SRPT, SSTK, STAA, STBA, STC, STRA, STRL, SUPN, SXC, SXI, SXT, TBBK, TDC, TDS, TDW, TFX, TGNA, TGTX, THRM, THS, TILE, TMP, TNC, TNDM, TPH, TR, TRIP, TRMK, TRN, TRNO, TRST, TRUP, TTMI, TWI, TWO, UCTT, UE, UFCS, UFPT, UHT, UNF, UNFI, UNIT, URBN, USNA, USPH, UTL, UVV, VBTX, VCEL, VCYT, VECO, VIAV, VICR, VIRT, VRTS, VSAT, VSH, WABC, WAFD, WD, WDFC, WEN, WERN, WGO, WOR, WRLD, WSC, WSFS, WSR, WWW, XHR, XNCR, YELP
================================================================================

================================================================================
PROCESSING TICKER 1/14: ABCB
================================================================================
🚀 Starting Iterative Agent-Based Feature Selection Process for ABCB
======================================================================
📊 Loading data from parquet file...
📊 Loading data for ABCB from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ABCB...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data integrity validation passed
✅ Data loaded successfully!
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
Features per timestep: 97
Lookback window: 4

🎯 Step 1: Running baseline model on validation set...

==================================================
Training Baseline (All 97 Features) (SVM)
==================================================
Training SVM model...

Baseline (All 97 Features) Performance:
MAE: 151524.8042
RMSE: 201678.1524
MAPE: 8.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 258
   • Highly important features (top 5%): 132

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0003, rank=1
   2. Feature_1_t3: importance=0.0001, rank=2
   3. Feature_0_t1: importance=0.0001, rank=3
   4. Feature_72_t0: importance=0.0001, rank=4
   5. Feature_75_t0: importance=0.0001, rank=5

📊 Baseline Performance: MAPE = 8.74%

🔄 Starting iterative improvement process...
Max iterations: 2
Min improvement threshold: 0.1%
Patience: 5 iterations without improvement

======================================================================
ITERATION 1
======================================================================
🤖 Calling Claude for iteration 1...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (most important features)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover
        
        # Get OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep options data which could be highly relevant for short interest prediction
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Keep shares outstanding
        raw_keep.append(data[t, 67])  # shares_outstanding
        
        # Get short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (daily short volume / daily total volume)
        # This is a key indicator of short selling pressure
        short_volume_ratio = np.zeros_like(short_volume)
        for i in range(len(short_volume)):
            den = max(abs(total_volume[i]), 1e-8)
            short_volume_ratio[i] = short_volume[i] / den
        
        # Average short volume ratio over the past 15 days
        avg_short_volume_ratio = np.mean(short_volume_ratio)
        eng.append(avg_short_volume_ratio)
        
        # 2. Recent trend in short volume ratio (last 5 days vs previous 10 days)
        recent_svr = np.mean(short_volume_ratio[-5:])
        previous_svr = np.mean(short_volume_ratio[:-5])
        den = max(abs(previous_svr), 1e-8)
        svr_trend = recent_svr / den - 1
        eng.append(svr_trend)
        
        # 3. Short interest to shares outstanding ratio
        # Indicates what percentage of the float is being shorted
        den = max(abs(data[t, 67]), 1e-8)
        short_interest_to_shares = data[t, 0] / den
        eng.append(short_interest_to_shares)
        
        # 4. Price momentum (5-day)
        # Strong price momentum can trigger short covering
        if len(close_prices) >= 5:
            price_momentum_5d = close_prices[-1] / max(abs(close_prices[-5]), 1e-8) - 1
        else:
            price_momentum_5d = 0
        eng.append(price_momentum_5d)
        
        # 5. Price volatility (standard deviation of returns)
        # High volatility often correlates with short interest changes
        if len(close_prices) > 1:
            returns = np.diff(close_prices) / np.maximum(np.abs(close_prices[:-1]), 1e-8)
            price_volatility = np.std(returns) if len(returns) > 0 else 0
        else:
            price_volatility = 0
        eng.append(price_volatility)
        
        # 6. Average True Range (ATR) - volatility indicator
        atr_values = []
        for i in range(1, len(ohlc)):
            tr1 = high_prices[i] - low_prices[i]
            tr2 = abs(high_prices[i] - close_prices[i-1])
            tr3 = abs(low_prices[i] - close_prices[i-1])
            true_range = max(tr1, tr2, tr3)
            atr_values.append(true_range)
        atr = np.mean(atr_values) if atr_values else 0
        eng.append(atr)
        
        # 7. RSI (Relative Strength Index) - 14 period
        # Extreme RSI values can indicate potential short squeeze or increased shorting
        if len(close_prices) >= 15:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain) if len(gain) > 0 else 0
            avg_loss = np.mean(loss) if len(loss) > 0 else 0
            den = max(abs(avg_loss), 1e-8)
            rs = avg_gain / den
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Neutral value when not enough data
        eng.append(rsi)
        
        # 8. Short interest to average daily volume ratio
        # Different from days to cover, focuses on short interest relative to volume
        den = max(abs(data[t, 1]), 1e-8)
        si_to_adv_ratio = data[t, 0] / den
        eng.append(si_to_adv_ratio)
        
        # 9. Recent volume trend (last 5 days vs previous 10 days)
        # Volume spikes can indicate short covering or increased shorting
        if len(total_volume) >= 15:
            recent_vol = np.mean(total_volume[-5:])
            previous_vol = np.mean(total_volume[:-5])
            den = max(abs(previous_vol), 1e-8)
            volume_trend = recent_vol / den - 1
        else:
            volume_trend = 0
        eng.append(volume_trend)
        
        # 10. Price to volume correlation
        # Measures if price movements are supported by volume
        if len(close_prices) >= 5 and len(total_volume) >= 5:
            price_returns = np.diff(close_prices[-5:]) / np.maximum(np.abs(close_prices[-6:-1]), 1e-8)
            volume_changes = np.diff(total_volume[-5:]) / np.maximum(np.abs(total_volume[-6:-1]), 1e-8)
            if len(price_returns) > 0 and len(volume_changes) > 0:
                # Safely calculate correlation
                price_vol_corr = np.mean(price_returns * volume_changes)
            else:
                price_vol_corr = 0
        else:
            price_vol_corr = 0
        eng.append(price_vol_corr)
        
        # 11. Options put-call ratio trend (current vs 15-day average)
        # Increasing put-call ratio might indicate bearish sentiment and potential increase in short interest
        put_call_ratio_trend = data[t, 64] / max(abs(data[t, 64]), 1e-8) - 1
        eng.append(put_call_ratio_trend)
        
        # 12. Bollinger Band Width - indicates potential volatility expansion/contraction
        if len(close_prices) >= 10:
            sma = np.mean(close_prices[-10:])
            std = np.std(close_prices[-10:])
            bb_width = (2 * std) / max(abs(sma), 1e-8)
        else:
            bb_width = 0
        eng.append(bb_width)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: index 14 is out of bounds for axis 0 with size 14
⚠️ Function execution failed (attempt 1/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    result = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (critical baseline features)
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        raw_keep.append(short_interest)  # Short interest
        raw_keep.append(avg_volume)      # Average daily volume
        raw_keep.append(days_to_cover)   # Days to cover
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values instead of all 60 values
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Extract options data
        put_call_ratio = data[t, 63]
        synthetic_short_cost = data[t, 64]
        implied_volatility = data[t, 65]
        shares_outstanding = data[t, 66]
        
        # Keep important options data
        raw_keep.append(put_call_ratio)
        raw_keep.append(implied_volatility)
        
        # Extract short volume and total volume data
        short_volume = data[t, 67:82]
        total_volume = data[t, 82:97]
        
        # Keep recent short volume and total volume
        raw_keep.append(short_volume[-1])  # Most recent short volume
        raw_keep.append(total_volume[-1])  # Most recent total volume
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Feature 1: Short interest to shares outstanding ratio
        # This shows what percentage of available shares are being shorted
        if shares_outstanding > 1e-8:
            si_to_shares = short_interest / max(shares_outstanding, 1e-8)
        else:
            si_to_shares = 0.0
        eng.append(si_to_shares)
        
        # Feature 2: Short volume ratio (recent)
        # Higher ratio indicates more selling pressure
        recent_short_ratio = np.mean(short_volume[-5:] / np.maximum(total_volume[-5:], 1e-8))
        eng.append(recent_short_ratio)
        
        # Feature 3: Short volume trend (slope over last 10 days)
        # Positive slope indicates increasing short selling activity
        if len(short_volume) >= 10:
            x = np.arange(10)
            y = short_volume[-10:]
            slope = np.polyfit(x, y, 1)[0] if np.any(y) else 0.0
            eng.append(slope)
        else:
            eng.append(0.0)
        
        # Feature 4: Price momentum (5-day)
        # Captures recent price trend direction and strength
        if len(close_prices) >= 5:
            momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1.0
            eng.append(momentum_5d)
        else:
            eng.append(0.0)
        
        # Feature 5: Price volatility (standard deviation of returns)
        # Higher volatility often correlates with higher short interest
        if len(close_prices) >= 5:
            returns = np.diff(close_prices[-6:]) / np.maximum(close_prices[-6:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0.0
            eng.append(volatility)
        else:
            eng.append(0.0)
        
        # Feature 6: Average true range (ATR) - volatility measure
        # Measures market volatility which can affect short selling decisions
        if len(close_prices) >= 2:
            true_ranges = []
            for i in range(1, min(14, len(close_prices))):
                tr1 = high_prices[-i] - low_prices[-i]
                tr2 = abs(high_prices[-i] - close_prices[-(i+1)])
                tr3 = abs(low_prices[-i] - close_prices[-(i+1)])
                true_ranges.append(max(tr1, tr2, tr3))
            atr = np.mean(true_ranges) if true_ranges else 0.0
            eng.append(atr)
        else:
            eng.append(0.0)
        
        # Feature 7: Short interest momentum
        # Rate of change in short interest, indicating acceleration/deceleration
        if t > 0 and data[t-1, 0] > 1e-8:
            si_momentum = (short_interest / max(data[t-1, 0], 1e-8)) - 1.0
            eng.append(si_momentum)
        else:
            eng.append(0.0)
        
        # Feature 8: Short interest to volume ratio
        # Indicates how many days of average volume the short interest represents
        si_to_volume = short_interest / max(avg_volume, 1e-8)
        eng.append(si_to_volume)
        
        # Feature 9: Relative strength index (RSI)
        # Overbought/oversold indicator that may correlate with short interest changes
        if len(close_prices) >= 14:
            delta = np.diff(close_prices[-15:])
            gain = np.sum(np.where(delta > 0, delta, 0))
            loss = np.sum(np.where(delta < 0, -delta, 0))
            
            if loss > 1e-8:
                rs = gain / max(loss, 1e-8)
                rsi = 100 - (100 / (1 + rs))
            else:
                rsi = 100.0 if gain > 0 else 50.0
            eng.append(rsi)
        else:
            eng.append(50.0)  # Neutral RSI value
        
        # Feature 10: Price to implied volatility ratio
        # Relates price level to expected volatility
        price_to_iv = close_prices[-1] / max(implied_volatility, 1e-8)
        eng.append(price_to_iv)
        
        # Feature 11: Short cost pressure
        # Combines synthetic short cost with put/call ratio
        short_pressure = synthetic_short_cost * put_call_ratio
        eng.append(short_pressure)
        
        # Feature 12: Bollinger Band width
        # Measures volatility expansion/contraction
        if len(close_prices) >= 20:
            sma20 = np.mean(close_prices[-20:])
            std20 = np.std(close_prices[-20:])
            bb_width = (2 * std20) / max(sma20, 1e-8)
            eng.append(bb_width)
        else:
            eng.append(0.0)
        
        # Feature 13: Short volume acceleration
        # Second derivative of short volume
        if len(short_volume) >= 3:
            short_vol_diff1 = short_volume[-1] - short_volume[-2]
            short_vol_diff2 = short_volume[-2] - short_volume[-3]
            short_accel = short_vol_diff1 - short_vol_diff2
            eng.append(short_accel)
        else:
            eng.append(0.0)
        
        # Feature 14: VWAP deviation
        # Distance of current price from volume-weighted average price
        if len(close_prices) >= 5 and np.sum(total_volume[-5:]) > 0:
            vwap = np.sum(close_prices[-5:] * total_volume[-5:]) / max(np.sum(total_volume[-5:]), 1e-8)
            vwap_dev = (close_prices[-1] / max(vwap, 1e-8)) - 1.0
            eng.append(vwap_dev)
        else:
            eng.append(0.0)
        
        # Feature 15: Short interest to days to cover ratio
        # Relates absolute short interest to relative coverage difficulty
        si_to_dtc = short_interest / max(days_to_cover, 1e-8)
        eng.append(si_to_dtc)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent width by padding or truncating
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        result[t] = row
    
    # Handle NaN and infinity values
    result = np.nan_to_num(result, nan=0.0, posinf=0.0, neginf=0.0)
    
    return result
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 1 (claude) (SVM)
==================================================
Training SVM model...

Iteration 1 (claude) Performance:
MAE: 149450.4856
RMSE: 207182.6348
MAPE: 8.70%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 75
   • Highly important features (top 5%): 56

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_4_t1: importance=0.0004, rank=1
   2. Feature_1_t3: importance=0.0004, rank=2
   3. Feature_2_t0: importance=0.0003, rank=3
   4. Feature_13_t1: importance=0.0003, rank=4
   5. Feature_22_t3: importance=0.0002, rank=5
💾 Saved code for iteration 1 to iteration_codes dictionary
📊 No significant improvement. Change: +0.04%

📈 Current best MAPE: 8.74%
🔄 Iterations without improvement: 1/5

======================================================================
ITERATION 2
======================================================================
🤖 Calling Claude for iteration 2...
Error calling Claude API: Error code: 500 - {'type': 'error', 'error': {'type': 'api_error', 'message': 'Internal server error'}, 'request_id': None}
❌ No response from Claude (attempt 1/5)
🔄 Retrying Claude API call...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    result = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Extract key raw features
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract options data
        put_call_ratio = data[t, 63]
        synthetic_short_cost = data[t, 64]
        implied_volatility = data[t, 65]
        shares_outstanding = data[t, 66]
        
        # Extract short volume and total volume data
        short_volume = data[t, 67:82]
        total_volume = data[t, 82:97]
        
        # Keep critical raw features based on importance analysis
        raw_keep.append(short_interest)  # Short interest (always keep)
        raw_keep.append(avg_volume)      # Average daily volume (always keep)
        raw_keep.append(days_to_cover)   # Days to cover (high importance)
        raw_keep.append(close_prices[-1])  # Most recent close price
        raw_keep.append(put_call_ratio)  # Options put/call ratio (high importance)
        raw_keep.append(implied_volatility)  # Implied volatility (high importance)
        raw_keep.append(short_volume[-1])  # Most recent short volume
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Feature 1: Short interest to shares outstanding ratio
        # This shows what percentage of available shares are being shorted
        si_to_shares = short_interest / max(shares_outstanding, 1e-8)
        eng.append(si_to_shares)
        
        # Feature 2: Short volume ratio (recent 5 days)
        # Higher ratio indicates more selling pressure
        recent_short_ratio = np.mean(short_volume[-5:] / np.maximum(total_volume[-5:], 1e-8))
        eng.append(recent_short_ratio)
        
        # Feature 3: Short volume trend (slope over last 10 days)
        # Positive slope indicates increasing short selling activity
        if len(short_volume) >= 10:
            x = np.arange(10)
            y = short_volume[-10:]
            slope = np.polyfit(x, y, 1)[0] if np.any(y) else 0.0
            eng.append(slope)
        else:
            eng.append(0.0)
        
        # Feature 4: Price momentum (5-day)
        # Captures recent price trend direction and strength
        if len(close_prices) >= 5:
            momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1.0
            eng.append(momentum_5d)
        else:
            eng.append(0.0)
        
        # Feature 5: Price volatility (standard deviation of returns)
        # Higher volatility often correlates with higher short interest
        if len(close_prices) >= 5:
            returns = np.diff(close_prices[-6:]) / np.maximum(close_prices[-6:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0.0
            eng.append(volatility)
        else:
            eng.append(0.0)
        
        # Feature 6: Short interest momentum
        # Rate of change in short interest, indicating acceleration/deceleration
        if t > 0 and data[t-1, 0] > 1e-8:
            si_momentum = (short_interest / max(data[t-1, 0], 1e-8)) - 1.0
            eng.append(si_momentum)
        else:
            eng.append(0.0)
        
        # Feature 7: Short interest to volume ratio
        # Indicates how many days of average volume the short interest represents
        si_to_volume = short_interest / max(avg_volume, 1e-8)
        eng.append(si_to_volume)
        
        # Feature 8: Relative strength index (RSI)
        # Overbought/oversold indicator that may correlate with short interest changes
        if len(close_prices) >= 14:
            delta = np.diff(close_prices[-15:])
            gain = np.sum(np.where(delta > 0, delta, 0))
            loss = np.sum(np.where(delta < 0, -delta, 0))
            
            if loss > 1e-8:
                rs = gain / max(loss, 1e-8)
                rsi = 100 - (100 / (1 + rs))
            else:
                rsi = 100.0 if gain > 0 else 50.0
            eng.append(rsi)
        else:
            eng.append(50.0)  # Neutral RSI value
        
        # Feature 9: Price to implied volatility ratio
        # Relates price level to expected volatility
        price_to_iv = close_prices[-1] / max(implied_volatility, 1e-8)
        eng.append(price_to_iv)
        
        # Feature 10: Short cost pressure
        # Combines synthetic short cost with put/call ratio
        short_pressure = synthetic_short_cost * put_call_ratio
        eng.append(short_pressure)
        
        # Feature 11: Short volume acceleration
        # Second derivative of short volume
        if len(short_volume) >= 3:
            short_vol_diff1 = short_volume[-1] - short_volume[-2]
            short_vol_diff2 = short_volume[-2] - short_volume[-3]
            short_accel = short_vol_diff1 - short_vol_diff2
            eng.append(short_accel)
        else:
            eng.append(0.0)
        
        # Feature 12: VWAP deviation
        # Distance of current price from volume-weighted average price
        if len(close_prices) >= 5 and np.sum(total_volume[-5:]) > 0:
            vwap = np.sum(close_prices[-5:] * total_volume[-5:]) / max(np.sum(total_volume[-5:]), 1e-8)
            vwap_dev = (close_prices[-1] / max(vwap, 1e-8)) - 1.0
            eng.append(vwap_dev)
        else:
            eng.append(0.0)
        
        # Feature 13: Short interest to days to cover ratio
        # Relates absolute short interest to relative coverage difficulty
        si_to_dtc = short_interest / max(days_to_cover, 1e-8)
        eng.append(si_to_dtc)
        
        # Feature 14: Price gap analysis
        # Identifies significant overnight price gaps which may trigger short covering
        if len(close_prices) >= 2 and len(open_prices) >= 1:
            overnight_gap = (open_prices[-1] / max(close_prices[-2], 1e-8)) - 1.0
            eng.append(overnight_gap)
        else:
            eng.append(0.0)
        
        # Feature 15: Short volume to total volume ratio change
        # Measures the acceleration in short selling relative to total volume
        if len(short_volume) >= 5 and len(total_volume) >= 5:
            recent_ratio = short_volume[-1] / max(total_volume[-1], 1e-8)
            past_ratio = np.mean(short_volume[-5:-1]) / max(np.mean(total_volume[-5:-1]), 1e-8)
            ratio_change = recent_ratio - past_ratio
            eng.append(ratio_change)
        else:
            eng.append(0.0)
        
        # Feature 16: High-Low range relative to average
        # Measures recent volatility expansion/contraction
        if len(high_prices) >= 5 and len(low_prices) >= 5:
            recent_ranges = high_prices[-5:] - low_prices[-5:]
            avg_range = np.mean(recent_ranges)
            latest_range = high_prices[-1] - low_prices[-1]
            range_ratio = latest_range / max(avg_range, 1e-8)
            eng.append(range_ratio)
        else:
            eng.append(0.0)
        
        # Feature 17: Short interest to implied volatility ratio
        # Relates short interest to market expectations of volatility
        si_to_iv = short_interest / max(implied_volatility, 1e-8)
        eng.append(si_to_iv)
        
        # Feature 18: Normalized short interest
        # Short interest normalized by historical range for better comparability
        if t >= 5:
            historical_si = [data[max(0, t-i), 0] for i in range(5)]
            si_min, si_max = min(historical_si), max(historical_si)
            si_range = si_max - si_min
            if si_range > 1e-8:
                norm_si = (short_interest - si_min) / si_range
            else:
                norm_si = 0.5  # Default to middle if no range
            eng.append(norm_si)
        else:
            eng.append(0.5)  # Default value when insufficient history
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent width by padding or truncating
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        result[t] = row
    
    # Handle NaN and infinity values
    result = np.nan_to_num(result, nan=0.0, posinf=0.0, neginf=0.0)
    
    return result
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 2 (claude) (SVM)
==================================================
Training SVM model...

Iteration 2 (claude) Performance:
MAE: 144567.6851
RMSE: 205461.7453
MAPE: 8.40%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 88
   • Highly important features (top 5%): 78

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_6_t3: importance=0.0002, rank=1
   2. Feature_19_t3: importance=0.0002, rank=2
   3. Feature_9_t0: importance=0.0002, rank=3
   4. Feature_0_t3: importance=0.0002, rank=4
   5. Feature_10_t3: importance=0.0002, rank=5
💾 Saved code for iteration 2 to iteration_codes dictionary
🎉 IMPROVEMENT! MAPE improved by 0.35%

📈 Current best MAPE: 8.40%
🔄 Iterations without improvement: 0/5

🎯 Final Evaluation on Test Set (Unseen Data)
======================================================================
Using train+validation data for final model training to maximize data usage
Combined train+val data shape: (142, 4, 97)
Test data shape: (36, 4, 97)

📊 BASELINE EVALUATION (Raw Features, Train+Val → Test):

==================================================
Training Baseline Final (Raw Features) (SVM)
==================================================
Training SVM model...

Baseline Final (Raw Features) Performance:
MAE: 129751.4220
RMSE: 162121.3225
MAPE: 12.17%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 283
   • Highly important features (top 5%): 167

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0002, rank=1
   2. Feature_63_t3: importance=0.0001, rank=2
   3. Feature_0_t3: importance=0.0001, rank=3
   4. Feature_0_t1: importance=0.0001, rank=4
   5. Feature_93_t3: importance=0.0001, rank=5
   Baseline MAPE: 12.17%
   Baseline MAE: 129751.4220
   Baseline RMSE: 162121.3225

🔧 BEST MODEL EVALUATION (Processed Features, Train+Val → Test):
Applying best feature engineering to all data...
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Processed train+val shape: (142, 4, 25)
Processed test shape: (36, 4, 25)

==================================================
Training Best Model Final (Processed Features) (SVM)
==================================================
Training SVM model...

Best Model Final (Processed Features) Performance:
MAE: 125057.8192
RMSE: 157919.2945
MAPE: 11.96%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 79
   • Highly important features (top 5%): 56

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_16_t1: importance=0.0005, rank=1
   2. Feature_1_t3: importance=0.0003, rank=2
   3. Feature_18_t1: importance=0.0002, rank=3
   4. Feature_12_t1: importance=0.0002, rank=4
   5. Feature_0_t3: importance=0.0002, rank=5

📊 Best Model Test Set Performance:
   MAPE: 11.96%
   MAE: 125057.8192
   RMSE: 157919.2945

🎯 IMPROVEMENT OVER BASELINE:
   Baseline MAPE: 12.17%
   Best Model MAPE: 11.96%
   Absolute Improvement: 0.21%
   Relative Improvement: 1.7%

======================================================================
ITERATION PERFORMANCE SUMMARY
======================================================================

📊 VALIDATION MAPE TREND:
--------------------------------------------------------------------------------
Iteration  Model                     Validation MAPE Improvement from Last
--------------------------------------------------------------------------------
0          Baseline                  8.74            N/A                 
1          Iteration 1               8.70            +0.04%              
2          Iteration 2               8.40            +0.35%              
--------------------------------------------------------------------------------
🏆 Best: Iteration 2 - MAPE: 8.40%
✅ Saved ABCB results to cache/ABCB_iterative_results_enhanced.pkl
✅ Summary report saved for ABCB

🎉 Process completed successfully for ABCB!

================================================================================
PROCESSING TICKER 2/14: EIG
================================================================================
🚀 Starting Iterative Agent-Based Feature Selection Process for EIG
======================================================================
📊 Loading data from parquet file...
📊 Loading data for EIG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for EIG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data integrity validation passed
✅ Data loaded successfully!
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
Features per timestep: 97
Lookback window: 4

🎯 Step 1: Running baseline model on validation set...

==================================================
Training Baseline (All 97 Features) (SVM)
==================================================
Training SVM model...

Baseline (All 97 Features) Performance:
MAE: 50127.5666
RMSE: 66222.9395
MAPE: 15.81%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 338
   • Highly important features (top 5%): 180

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_74_t3: importance=0.0004, rank=1
   2. Feature_2_t2: importance=0.0003, rank=2
   3. Feature_76_t2: importance=0.0003, rank=3
   4. Feature_65_t0: importance=0.0003, rank=4
   5. Feature_63_t0: importance=0.0002, rank=5

📊 Baseline Performance: MAPE = 15.81%

🔄 Starting iterative improvement process...
Max iterations: 2
Min improvement threshold: 0.1%
Patience: 5 iterations without improvement

======================================================================
ITERATION 1
======================================================================
🤖 Calling Claude for iteration 1...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Constructs features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (critical baseline features)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover
        
        # Keep synthetic short cost (high importance in baseline)
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        
        # Keep implied volatility (market sentiment indicator)
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Keep put/call ratio (important options market indicator)
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        
        # Extract OHLC data for the last 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent close price
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep shares outstanding (for relative measures)
        raw_keep.append(data[t, 67])  # shares_outstanding
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (recent trend)
        # Ratio of short volume to total volume (recent 5 days average)
        recent_short_ratio = np.mean(short_volume[-5:] / np.maximum(total_volume[-5:], 1e-8))
        eng.append(recent_short_ratio)
        
        # 2. Short Interest to Float Ratio
        # Normalize short interest by shares outstanding
        si_to_float = data[t, 0] / max(data[t, 67], 1e-8)
        eng.append(si_to_float)
        
        # 3. Price Momentum (5-day)
        # Captures recent price trend
        price_momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1.0
        eng.append(price_momentum_5d)
        
        # 4. Price Volatility (15-day)
        # Measures recent price volatility
        price_volatility = np.std(close_prices) / max(np.mean(close_prices), 1e-8)
        eng.append(price_volatility)
        
        # 5. Short Volume Trend
        # Rate of change in short volume over last 5 days
        short_vol_trend = (short_volume[-1] / max(short_volume[-5], 1e-8)) - 1.0
        eng.append(short_vol_trend)
        
        # 6. Short Interest to Volume Ratio
        # Relates short interest to trading volume
        si_to_volume = data[t, 0] / max(data[t, 1], 1e-8)
        eng.append(si_to_volume)
        
        # 7. Average True Range (ATR) - Volatility measure
        tr_values = []
        for i in range(1, len(close_prices)):
            hl = high_prices[i] - low_prices[i]
            hc = abs(high_prices[i] - close_prices[i-1])
            lc = abs(low_prices[i] - close_prices[i-1])
            tr = max(hl, hc, lc)
            tr_values.append(tr)
        atr = np.mean(tr_values) if tr_values else 0
        eng.append(atr)
        
        # 8. Short Volume Acceleration
        # Second derivative of short volume
        if len(short_volume) >= 3:
            short_vol_accel = ((short_volume[-1] - short_volume[-2]) - 
                              (short_volume[-2] - short_volume[-3]))
            short_vol_accel = short_vol_accel / max(short_volume[-3], 1e-8)
        else:
            short_vol_accel = 0
        eng.append(short_vol_accel)
        
        # 9. Relative Strength Index (RSI)
        # Momentum oscillator measuring speed and change of price movements
        delta = np.diff(close_prices)
        gain = np.sum(np.where(delta > 0, delta, 0))
        loss = np.sum(np.where(delta < 0, -delta, 0))
        
        if loss > 0:
            rs = gain / max(loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 100 if gain > 0 else 50  # Default to neutral if no movement
        eng.append(rsi)
        
        # 10. Options Implied Volatility to Historical Volatility Ratio
        # Compares market expectations to realized volatility
        hist_vol = price_volatility * 100  # Scale to percentage
        iv_to_hv_ratio = data[t, 66] / max(hist_vol, 1e-8)
        eng.append(iv_to_hv_ratio)
        
        # 11. Short Interest Change Rate
        # Rate of change in short interest if we have previous data
        si_change = 0
        if t > 0:
            si_change = (data[t, 0] / max(data[t-1, 0], 1e-8)) - 1.0
        eng.append(si_change)
        
        # 12. Price to Volume Ratio
        # Indicates how much price movement is generated by trading volume
        price_to_volume = close_prices[-1] / max(np.mean(total_volume[-5:]), 1e-8)
        eng.append(price_to_volume)
        
        # 13. Short Volume to Price Change Ratio
        # Relates short selling activity to price movements
        price_change = abs(close_prices[-1] - close_prices[-5]) if len(close_prices) >= 5 else 0
        short_vol_to_price_change = np.sum(short_volume[-5:]) / max(price_change, 1e-8)
        eng.append(short_vol_to_price_change)
        
        # 14. Bollinger Band Width
        # Measures volatility
        sma = np.mean(close_prices)
        std = np.std(close_prices)
        bb_width = (2 * std) / max(sma, 1e-8)
        eng.append(bb_width)
        
        # 15. Short Interest Velocity
        # Rate of change of short interest over time
        si_velocity = 0
        if t >= 2:
            si_velocity = (data[t, 0] - data[t-1, 0]) - (data[t-1, 0] - data[t-2, 0])
            si_velocity = si_velocity / max(data[t-2, 0], 1e-8)
        eng.append(si_velocity)
        
        # 16. Options Put/Call Ratio Change
        # Rate of change in put/call ratio
        pc_ratio_change = 0
        if t > 0:
            pc_ratio_change = (data[t, 64] / max(data[t-1, 64], 1e-8)) - 1.0
        eng.append(pc_ratio_change)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 1 (claude) (SVM)
==================================================
Training SVM model...

Iteration 1 (claude) Performance:
MAE: 48923.3923
RMSE: 64587.8904
MAPE: 15.37%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 89
   • Highly important features (top 5%): 84

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_8_t3: importance=0.0005, rank=1
   2. Feature_10_t2: importance=0.0005, rank=2
   3. Feature_5_t2: importance=0.0004, rank=3
   4. Feature_5_t3: importance=0.0004, rank=4
   5. Feature_14_t1: importance=0.0004, rank=5
💾 Saved code for iteration 1 to iteration_codes dictionary
🎉 IMPROVEMENT! MAPE improved by 0.45%

📈 Current best MAPE: 15.37%
🔄 Iterations without improvement: 0/5

======================================================================
ITERATION 2
======================================================================
🤖 Calling Claude for iteration 2...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Constructs features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (critical baseline features)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover - high importance in previous iteration
        
        # Keep synthetic short cost (high importance in baseline)
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        
        # Keep implied volatility (market sentiment indicator)
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Extract OHLC data for the last 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent close price
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep shares outstanding (for relative measures)
        raw_keep.append(data[t, 67])  # shares_outstanding
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Interest to Float Ratio - highly significant in previous iteration
        # Normalize short interest by shares outstanding
        si_to_float = data[t, 0] / max(data[t, 67], 1e-8)
        eng.append(si_to_float)
        
        # 2. Short Volume Ratio (recent trend) - improved with exponential weighting
        # Exponentially weighted ratio of short volume to total volume (recent days)
        weights = np.exp(np.linspace(-3, 0, 5))  # Exponential weights for last 5 days
        weights = weights / np.sum(weights)  # Normalize weights
        
        if len(short_volume) >= 5 and len(total_volume) >= 5:
            short_ratios = short_volume[-5:] / np.maximum(total_volume[-5:], 1e-8)
            weighted_short_ratio = np.sum(weights * short_ratios)
        else:
            weighted_short_ratio = short_volume[-1] / max(total_volume[-1], 1e-8)
        eng.append(weighted_short_ratio)
        
        # 3. Price Momentum (5-day) - high importance in previous iteration
        # Captures recent price trend
        price_momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1.0 if len(close_prices) >= 5 else 0
        eng.append(price_momentum_5d)
        
        # 4. Short Interest Change Rate - improved with smoothing
        # Rate of change in short interest if we have previous data
        si_change = 0
        if t > 0:
            si_change = (data[t, 0] / max(data[t-1, 0], 1e-8)) - 1.0
        eng.append(si_change)
        
        # 5. Short Volume Trend - improved with exponential weighting
        # Exponentially weighted rate of change in short volume
        if len(short_volume) >= 5:
            short_vol_changes = np.diff(short_volume[-5:]) / np.maximum(short_volume[-5:-1], 1e-8)
            weights_trend = np.exp(np.linspace(-2, 0, 4))
            weights_trend = weights_trend / np.sum(weights_trend)
            short_vol_trend = np.sum(weights_trend * short_vol_changes) if len(short_vol_changes) >= 4 else 0
        else:
            short_vol_trend = 0
        eng.append(short_vol_trend)
        
        # 6. Relative Strength Index (RSI) - high importance in previous iteration
        # Momentum oscillator measuring speed and change of price movements
        if len(close_prices) >= 10:  # Need sufficient data for meaningful RSI
            delta = np.diff(close_prices[-10:])
            gain = np.sum(np.where(delta > 0, delta, 0))
            loss = np.sum(np.where(delta < 0, -delta, 0))
            
            if loss > 0:
                rs = gain / max(loss, 1e-8)
                rsi = 100 - (100 / (1 + rs))
            else:
                rsi = 100 if gain > 0 else 50  # Default to neutral if no movement
        else:
            rsi = 50  # Default to neutral if insufficient data
        eng.append(rsi)
        
        # 7. Short Interest Velocity - improved with normalization
        # Rate of change of short interest over time, normalized by average SI
        si_velocity = 0
        if t >= 2:
            si_velocity = (data[t, 0] - data[t-1, 0]) - (data[t-1, 0] - data[t-2, 0])
            avg_si = (data[t, 0] + data[t-1, 0] + data[t-2, 0]) / 3
            si_velocity = si_velocity / max(avg_si, 1e-8)  # Normalize by average SI
        eng.append(si_velocity)
        
        # 8. Short Interest to Volume Ratio - high importance in previous iteration
        # Relates short interest to trading volume
        si_to_volume = data[t, 0] / max(data[t, 1], 1e-8)
        eng.append(si_to_volume)
        
        # 9. Bollinger Band Position - NEW
        # Position of price within Bollinger Bands (normalized)
        if len(close_prices) >= 10:
            sma = np.mean(close_prices[-10:])
            std = np.std(close_prices[-10:])
            bb_position = (close_prices[-1] - sma) / max(2 * std, 1e-8)  # Normalized position
            bb_position = max(min(bb_position, 1.0), -1.0)  # Clamp to [-1, 1]
        else:
            bb_position = 0
        eng.append(bb_position)
        
        # 10. Short Volume Acceleration - improved with smoothing
        # Second derivative of short volume with smoothing
        if len(short_volume) >= 5:
            # First differences (velocity)
            vel = np.diff(short_volume[-5:])
            # Second differences (acceleration) with smoothing
            accel = np.diff(vel)
            # Normalize by average short volume
            avg_short_vol = np.mean(short_volume[-5:])
            short_vol_accel = np.mean(accel) / max(avg_short_vol, 1e-8)
        else:
            short_vol_accel = 0
        eng.append(short_vol_accel)
        
        # 11. Options Implied Volatility to Historical Volatility Ratio - high importance
        # Compares market expectations to realized volatility
        if len(close_prices) >= 10:
            returns = np.diff(close_prices[-10:]) / np.maximum(close_prices[-11:-1], 1e-8)
            hist_vol = np.std(returns) * np.sqrt(252)  # Annualized
            iv_to_hv_ratio = data[t, 66] / max(hist_vol, 1e-8)
            iv_to_hv_ratio = min(iv_to_hv_ratio, 5.0)  # Cap extreme values
        else:
            iv_to_hv_ratio = 1.0
        eng.append(iv_to_hv_ratio)
        
        # 12. Short Volume to Total Volume Ratio Trend - NEW
        # Trend in the ratio of short volume to total volume
        if len(short_volume) >= 10 and len(total_volume) >= 10:
            short_ratios = short_volume[-10:] / np.maximum(total_volume[-10:], 1e-8)
            if len(short_ratios) >= 5:
                # Linear regression slope approximation
                x = np.arange(len(short_ratios))
                x_mean = np.mean(x)
                y_mean = np.mean(short_ratios)
                slope_num = np.sum((x - x_mean) * (short_ratios - y_mean))
                slope_den = np.sum((x - x_mean) ** 2)
                short_ratio_trend = slope_num / max(slope_den, 1e-8)
            else:
                short_ratio_trend = 0
        else:
            short_ratio_trend = 0
        eng.append(short_ratio_trend)
        
        # 13. Average True Range (ATR) Ratio - NEW, improved volatility measure
        # ATR normalized by price level
        tr_values = []
        for i in range(1, len(close_prices)):
            hl = high_prices[i] - low_prices[i]
            hc = abs(high_prices[i] - close_prices[i-1])
            lc = abs(low_prices[i] - close_prices[i-1])
            tr = max(hl, hc, lc)
            tr_values.append(tr)
        
        if tr_values:
            atr = np.mean(tr_values[-5:] if len(tr_values) >= 5 else tr_values)
            atr_ratio = atr / max(close_prices[-1], 1e-8)  # Normalize by price
        else:
            atr_ratio = 0
        eng.append(atr_ratio)
        
        # 14. Short Interest to Days to Cover Ratio - NEW
        # Relates short interest to days to cover
        si_to_dtc = data[t, 0] / max(data[t, 2], 1e-8)
        eng.append(si_to_dtc)
        
        # 15. Price Trend Strength - NEW
        # Measures consistency of price direction
        if len(close_prices) >= 10:
            price_changes = np.diff(close_prices[-10:])
            pos_changes = np.sum(price_changes > 0)
            neg_changes = np.sum(price_changes < 0)
            trend_strength = abs(pos_changes - neg_changes) / len(price_changes)
        else:
            trend_strength = 0
        eng.append(trend_strength)
        
        # 16. Options Put/Call Ratio Change - improved with smoothing
        # Rate of change in put/call ratio with smoothing
        pc_ratio_change = 0
        if t > 0:
            pc_ratio_change = (data[t, 64] / max(data[t-1, 64], 1e-8)) - 1.0
        eng.append(pc_ratio_change)
        
        # 17. Short Interest Momentum - NEW
        # Momentum of short interest over multiple periods
        si_momentum = 0
        if t >= 3:
            si_momentum = (data[t, 0] / max(data[t-3, 0], 1e-8)) - 1.0
        eng.append(si_momentum)
        
        # 18. Volatility of Short Volume - NEW
        # Measures the stability/volatility of short selling activity
        if len(short_volume) >= 5:
            short_vol_volatility = np.std(short_volume[-5:]) / max(np.mean(short_volume[-5:]), 1e-8)
        else:
            short_vol_volatility = 0
        eng.append(short_vol_volatility)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (9,) (10,) 
⚠️ Function execution failed (attempt 1/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Constructs features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (critical baseline features)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover - high importance in previous iteration
        
        # Keep synthetic short cost (high importance in baseline)
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        
        # Keep implied volatility (market sentiment indicator)
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Keep put/call ratio (important options market indicator)
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        
        # Extract OHLC data for the last 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent close price
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep shares outstanding (for relative measures)
        raw_keep.append(data[t, 67])  # shares_outstanding
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (recent trend)
        # Ratio of short volume to total volume (recent 5 days average)
        # High importance in previous iteration
        recent_short_ratio = np.mean(short_volume[-5:] / np.maximum(total_volume[-5:], 1e-8))
        eng.append(recent_short_ratio)
        
        # 2. Short Interest to Float Ratio
        # Normalize short interest by shares outstanding
        # Key fundamental metric for short squeeze potential
        si_to_float = data[t, 0] / max(data[t, 67], 1e-8)
        eng.append(si_to_float)
        
        # 3. Price Momentum (5-day)
        # Captures recent price trend - high importance in previous iteration
        price_momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1.0
        eng.append(price_momentum_5d)
        
        # 4. Price Volatility (15-day)
        # Measures recent price volatility - high importance in previous iteration
        price_volatility = np.std(close_prices) / max(np.mean(close_prices), 1e-8)
        eng.append(price_volatility)
        
        # 5. Short Volume Trend
        # Rate of change in short volume over last 5 days
        short_vol_trend = (short_volume[-1] / max(short_volume[-5], 1e-8)) - 1.0
        eng.append(short_vol_trend)
        
        # 6. Short Interest to Volume Ratio
        # Relates short interest to trading volume - key liquidity metric
        si_to_volume = data[t, 0] / max(data[t, 1], 1e-8)
        eng.append(si_to_volume)
        
        # 7. Relative Strength Index (RSI)
        # Momentum oscillator measuring speed and change of price movements
        # High importance in previous iteration
        delta = np.diff(close_prices)
        gain = np.sum(np.where(delta > 0, delta, 0))
        loss = np.sum(np.where(delta < 0, -delta, 0))
        
        if loss > 0:
            rs = gain / max(loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 100 if gain > 0 else 50  # Default to neutral if no movement
        eng.append(rsi)
        
        # 8. Short Interest Change Rate
        # Rate of change in short interest if we have previous data
        # Critical for detecting changes in short selling sentiment
        si_change = 0
        if t > 0:
            si_change = (data[t, 0] / max(data[t-1, 0], 1e-8)) - 1.0
        eng.append(si_change)
        
        # 9. Short Interest Velocity
        # Second derivative of short interest - acceleration of short interest changes
        # Helps identify inflection points in short selling activity
        si_velocity = 0
        if t >= 2:
            si_velocity = (data[t, 0] - data[t-1, 0]) - (data[t-1, 0] - data[t-2, 0])
            si_velocity = si_velocity / max(data[t-2, 0], 1e-8)
        eng.append(si_velocity)
        
        # 10. Options Put/Call Ratio Change
        # Rate of change in put/call ratio - indicates changing market sentiment
        pc_ratio_change = 0
        if t > 0:
            pc_ratio_change = (data[t, 64] / max(data[t-1, 64], 1e-8)) - 1.0
        eng.append(pc_ratio_change)
        
        # 11. Short Volume to Average Volume Ratio
        # Compares recent short volume to average trading volume
        # Indicates relative intensity of short selling
        short_vol_to_avg_vol = np.mean(short_volume[-5:]) / max(data[t, 1], 1e-8)
        eng.append(short_vol_to_avg_vol)
        
        # 12. Price Gap Analysis
        # Measures overnight price gaps - often significant for short interest changes
        price_gaps = 0
        if len(close_prices) >= 2 and len(open_prices) >= 2:
            gaps = np.abs(open_prices[1:] - close_prices[:-1])
            price_gaps = np.mean(gaps) / max(np.mean(close_prices), 1e-8)
        eng.append(price_gaps)
        
        # 13. Short Interest Concentration
        # Measures how concentrated short volume is in recent days
        # Higher values indicate more concentrated short selling
        short_concentration = 0
        if len(short_volume) >= 5:
            short_concentration = short_volume[-1] / max(np.sum(short_volume[-5:]), 1e-8)
        eng.append(short_concentration)
        
        # 14. Synthetic Short Cost Change
        # Rate of change in synthetic short cost - indicates changing cost of shorting
        synth_cost_change = 0
        if t > 0:
            synth_cost_change = (data[t, 65] / max(data[t-1, 65], 1e-8)) - 1.0
        eng.append(synth_cost_change)
        
        # 15. Implied Volatility Change
        # Rate of change in implied volatility - indicates changing market uncertainty
        iv_change = 0
        if t > 0:
            iv_change = (data[t, 66] / max(data[t-1, 66], 1e-8)) - 1.0
        eng.append(iv_change)
        
        # 16. Short Volume Acceleration
        # Second derivative of short volume - identifies acceleration in short selling
        short_vol_accel = 0
        if len(short_volume) >= 3:
            short_vol_accel = ((short_volume[-1] - short_volume[-2]) - 
                              (short_volume[-2] - short_volume[-3]))
            short_vol_accel = short_vol_accel / max(short_volume[-3], 1e-8)
        eng.append(short_vol_accel)
        
        # 17. VWAP Deviation
        # Deviation of current price from Volume Weighted Average Price
        # Indicates potential price pressure
        vwap = 0
        if len(close_prices) >= 5 and len(total_volume[-5:]) >= 5:
            vwap = np.sum(close_prices[-5:] * total_volume[-5:]) / max(np.sum(total_volume[-5:]), 1e-8)
            vwap_deviation = (close_prices[-1] / max(vwap, 1e-8)) - 1.0
        else:
            vwap_deviation = 0
        eng.append(vwap_deviation)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 2 (claude) (SVM)
==================================================
Training SVM model...

Iteration 2 (claude) Performance:
MAE: 48055.6225
RMSE: 63201.0948
MAPE: 15.22%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 94
   • Highly important features (top 5%): 91

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_12_t2: importance=0.0004, rank=1
   2. Feature_3_t3: importance=0.0004, rank=2
   3. Feature_17_t3: importance=0.0003, rank=3
   4. Feature_17_t2: importance=0.0003, rank=4
   5. Feature_10_t2: importance=0.0003, rank=5
💾 Saved code for iteration 2 to iteration_codes dictionary
🎉 IMPROVEMENT! MAPE improved by 0.14%

📈 Current best MAPE: 15.22%
🔄 Iterations without improvement: 0/5

🎯 Final Evaluation on Test Set (Unseen Data)
======================================================================
Using train+validation data for final model training to maximize data usage
Combined train+val data shape: (142, 4, 97)
Test data shape: (36, 4, 97)

📊 BASELINE EVALUATION (Raw Features, Train+Val → Test):

==================================================
Training Baseline Final (Raw Features) (SVM)
==================================================
Training SVM model...

Baseline Final (Raw Features) Performance:
MAE: 56505.4862
RMSE: 73103.6878
MAPE: 15.07%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 206
   • Highly important features (top 5%): 108

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_91_t0: importance=0.0006, rank=1
   2. Feature_74_t3: importance=0.0005, rank=2
   3. Feature_92_t0: importance=0.0003, rank=3
   4. Feature_0_t3: importance=0.0003, rank=4
   5. Feature_64_t2: importance=0.0003, rank=5
   Baseline MAPE: 15.07%
   Baseline MAE: 56505.4862
   Baseline RMSE: 73103.6878

🔧 BEST MODEL EVALUATION (Processed Features, Train+Val → Test):
Applying best feature engineering to all data...
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Processed train+val shape: (142, 4, 25)
Processed test shape: (36, 4, 25)

==================================================
Training Best Model Final (Processed Features) (SVM)
==================================================
Training SVM model...

Best Model Final (Processed Features) Performance:
MAE: 56460.1391
RMSE: 72563.9166
MAPE: 15.12%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 91
   • Highly important features (top 5%): 72

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_15_t1: importance=0.0010, rank=1
   2. Feature_12_t0: importance=0.0005, rank=2
   3. Feature_4_t2: importance=0.0004, rank=3
   4. Feature_22_t2: importance=0.0004, rank=4
   5. Feature_5_t2: importance=0.0004, rank=5

📊 Best Model Test Set Performance:
   MAPE: 15.12%
   MAE: 56460.1391
   RMSE: 72563.9166

🎯 IMPROVEMENT OVER BASELINE:
   Baseline MAPE: 15.07%
   Best Model MAPE: 15.12%
   Absolute Improvement: -0.05%
   Relative Improvement: -0.4%

======================================================================
ITERATION PERFORMANCE SUMMARY
======================================================================

📊 VALIDATION MAPE TREND:
--------------------------------------------------------------------------------
Iteration  Model                     Validation MAPE Improvement from Last
--------------------------------------------------------------------------------
0          Baseline                  15.81           N/A                 
1          Iteration 1               15.37           +0.45%              
2          Iteration 2               15.22           +0.14%              
--------------------------------------------------------------------------------
🏆 Best: Iteration 2 - MAPE: 15.22%
✅ Saved EIG results to cache/EIG_iterative_results_enhanced.pkl
✅ Summary report saved for EIG

🎉 Process completed successfully for EIG!

================================================================================
PROCESSING TICKER 3/14: EYE
================================================================================
🚀 Starting Iterative Agent-Based Feature Selection Process for EYE
======================================================================
📊 Loading data from parquet file...
📊 Loading data for EYE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error processing EYE: 'EYE'
⚠️ Skipping EYE and continuing with next ticker...

================================================================================
PROCESSING TICKER 4/14: AAP
================================================================================
🚀 Starting Iterative Agent-Based Feature Selection Process for AAP
======================================================================
📊 Loading data from parquet file...
📊 Loading data for AAP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error processing AAP: 'AAP'
⚠️ Skipping AAP and continuing with next ticker...

================================================================================
PROCESSING TICKER 5/14: FSS
================================================================================
🚀 Starting Iterative Agent-Based Feature Selection Process for FSS
======================================================================
📊 Loading data from parquet file...
📊 Loading data for FSS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FSS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data integrity validation passed
✅ Data loaded successfully!
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
Features per timestep: 97
Lookback window: 4

🎯 Step 1: Running baseline model on validation set...

==================================================
Training Baseline (All 97 Features) (SVM)
==================================================
Training SVM model...

Baseline (All 97 Features) Performance:
MAE: 83229.6548
RMSE: 110982.5317
MAPE: 11.08%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 267
   • Highly important features (top 5%): 132

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t2: importance=0.0011, rank=1
   2. Feature_82_t2: importance=0.0010, rank=2
   3. Feature_72_t2: importance=0.0010, rank=3
   4. Feature_74_t0: importance=0.0009, rank=4
   5. Feature_96_t3: importance=0.0008, rank=5

📊 Baseline Performance: MAPE = 11.08%

🔄 Starting iterative improvement process...
Max iterations: 2
Min improvement threshold: 0.1%
Patience: 5 iterations without improvement

======================================================================
ITERATION 1
======================================================================
🤖 Calling Claude for iteration 1...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (most important baseline features)
        raw_keep.append(data[t, 0])  # Short interest
        raw_keep.append(data[t, 1])  # Average daily volume
        raw_keep.append(data[t, 2])  # Days to cover
        
        # Keep options-related features which showed high importance
        raw_keep.append(data[t, 64])  # Put/call volume ratio
        raw_keep.append(data[t, 65])  # Synthetic short cost (high importance in baseline)
        raw_keep.append(data[t, 66])  # Average implied volatility
        
        # Keep shares outstanding (important for relative measures)
        raw_keep.append(data[t, 67])  # Shares outstanding
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (daily short volume / total volume)
        # This measures the proportion of daily trading that is short selling
        short_volume_ratio = np.zeros_like(short_volume)
        for i in range(len(short_volume)):
            denom = max(abs(total_volume[i]), 1e-8)
            short_volume_ratio[i] = short_volume[i] / denom
        
        # Average short volume ratio over the past 15 days
        avg_short_volume_ratio = np.mean(short_volume_ratio)
        eng.append(avg_short_volume_ratio)
        
        # 2. Recent price trend (5-day vs 15-day)
        recent_price_trend = np.mean(close_prices[-5:]) / max(np.mean(close_prices), 1e-8)
        eng.append(recent_price_trend)
        
        # 3. Price volatility (standard deviation of returns)
        returns = np.diff(close_prices) / np.maximum(close_prices[:-1], 1e-8)
        price_volatility = np.std(returns) if len(returns) > 1 else 0
        eng.append(price_volatility)
        
        # 4. Short interest to float ratio
        # Higher values indicate more shares are sold short relative to available float
        short_interest_to_float = data[t, 0] / max(data[t, 67], 1e-8)
        eng.append(short_interest_to_float)
        
        # 5. Short volume momentum (change in short volume over past week)
        short_vol_momentum = (np.mean(short_volume[-5:]) / max(np.mean(short_volume[:10]), 1e-8)) - 1
        eng.append(short_vol_momentum)
        
        # 6. Price momentum (recent 5-day return)
        price_momentum = (close_prices[-1] / max(close_prices[-6] if len(close_prices) >= 6 else close_prices[0], 1e-8)) - 1
        eng.append(price_momentum)
        
        # 7. Relative volume (recent volume vs average)
        relative_volume = np.mean(total_volume[-5:]) / max(np.mean(total_volume), 1e-8)
        eng.append(relative_volume)
        
        # 8. Short volume to average daily volume ratio
        # Measures how short volume compares to typical trading volume
        short_vol_to_avg_vol = np.mean(short_volume) / max(data[t, 1], 1e-8)
        eng.append(short_vol_to_avg_vol)
        
        # 9. High-Low range volatility
        hl_range = np.mean((high_prices - low_prices) / np.maximum(low_prices, 1e-8))
        eng.append(hl_range)
        
        # 10. RSI (Relative Strength Index) - simplified 14-period calculation
        if len(close_prices) >= 2:
            diff = np.diff(close_prices)
            gains = np.sum(np.where(diff > 0, diff, 0))
            losses = np.sum(np.where(diff < 0, -diff, 0))
            
            if losses > 1e-8:
                rs = gains / max(losses, 1e-8)
                rsi = 100 - (100 / (1 + rs))
            else:
                rsi = 100 if gains > 0 else 50
        else:
            rsi = 50
        eng.append(rsi)
        
        # 11. Options implied volatility to historical volatility ratio
        # Compares market expectations (implied vol) to realized volatility
        implied_to_historical_vol = data[t, 66] / max(price_volatility, 1e-8)
        eng.append(implied_to_historical_vol)
        
        # 12. Short interest change rate
        # If we have previous data point, calculate change rate
        if t > 0:
            prev_short_interest = data[t-1, 0]
            short_interest_change = (data[t, 0] / max(prev_short_interest, 1e-8)) - 1
        else:
            short_interest_change = 0
        eng.append(short_interest_change)
        
        # 13. Short cost to volatility ratio
        # Relates borrowing cost to volatility - expensive shorts in low vol environments are significant
        short_cost_to_vol = data[t, 65] / max(data[t, 66], 1e-8)
        eng.append(short_cost_to_vol)
        
        # 14. Days to cover trend
        if t > 0:
            prev_days_to_cover = data[t-1, 2]
            days_to_cover_change = (data[t, 2] / max(prev_days_to_cover, 1e-8)) - 1
        else:
            days_to_cover_change = 0
        eng.append(days_to_cover_change)
        
        # 15. Short volume concentration (ratio of max to mean)
        short_vol_concentration = np.max(short_volume) / max(np.mean(short_volume), 1e-8)
        eng.append(short_vol_concentration)
        
        # 16. Price to volume correlation
        if len(close_prices) > 1 and len(total_volume) > 1:
            # Use only the overlapping period
            min_len = min(len(close_prices), len(total_volume))
            price_vol_corr = np.corrcoef(close_prices[-min_len:], total_volume[-min_len:])[0, 1]
            price_vol_corr = 0 if np.isnan(price_vol_corr) else price_vol_corr
        else:
            price_vol_corr = 0
        eng.append(price_vol_corr)
        
        # 17. Short volume to put/call ratio
        # Relates actual shorting activity to options market sentiment
        short_vol_to_put_call = np.mean(short_volume) / max(data[t, 64], 1e-8)
        eng.append(short_vol_to_put_call)
        
        # 18. Recent price gap
        recent_gaps = np.abs(open_prices[1:] - close_prices[:-1]) / np.maximum(close_prices[:-1], 1e-8)
        avg_gap = np.mean(recent_gaps) if len(recent_gaps) > 0 else 0
        eng.append(avg_gap)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent size by padding or truncating
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaNs and infinities
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: index 14 is out of bounds for axis 0 with size 14
⚠️ Function execution failed (attempt 1/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    result = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        raw_keep.append(short_interest)
        raw_keep.append(avg_volume)
        raw_keep.append(days_to_cover)
        
        # Extract OHLC data
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values
        raw_keep.append(close_prices[-1])  # Most recent close
        
        # Extract other important raw features
        options_put_call_ratio = data[t, 64]
        options_synthetic_short_cost = data[t, 65]  # High importance from baseline
        options_avg_implied_volatility = data[t, 66]
        shares_outstanding = data[t, 67]
        
        # Keep high importance raw features
        raw_keep.append(options_synthetic_short_cost)
        raw_keep.append(options_avg_implied_volatility)
        
        # Extract short interest volume and total volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep specific high importance features from these arrays
        raw_keep.append(short_volume[-1])  # Most recent short volume
        raw_keep.append(total_volume[-1])  # Most recent total volume
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Feature 1: Short interest to shares outstanding ratio
        si_to_shares = short_interest / max(abs(shares_outstanding), 1e-8)
        eng.append(si_to_shares)
        
        # Feature 2: Short volume to total volume ratio (most recent day)
        short_ratio = short_volume[-1] / max(abs(total_volume[-1]), 1e-8)
        eng.append(short_ratio)
        
        # Feature 3: Average short volume to total volume ratio (15 days)
        avg_short_ratio = np.mean(short_volume) / max(abs(np.mean(total_volume)), 1e-8)
        eng.append(avg_short_ratio)
        
        # Feature 4: Price momentum (5-day)
        if len(close_prices) >= 5:
            momentum_5d = (close_prices[-1] / max(abs(close_prices[-5]), 1e-8)) - 1
        else:
            momentum_5d = 0
        eng.append(momentum_5d)
        
        # Feature 5: Price momentum (10-day)
        if len(close_prices) >= 10:
            momentum_10d = (close_prices[-1] / max(abs(close_prices[-10]), 1e-8)) - 1
        else:
            momentum_10d = 0
        eng.append(momentum_10d)
        
        # Feature 6: Volatility (standard deviation of returns)
        if len(close_prices) >= 2:
            returns = np.diff(close_prices) / np.maximum(np.abs(close_prices[:-1]), 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0
        else:
            volatility = 0
        eng.append(volatility)
        
        # Feature 7: Average True Range (ATR) - volatility indicator
        if len(close_prices) >= 2:
            tr_values = []
            for i in range(1, len(close_prices)):
                high_low = high_prices[i] - low_prices[i]
                high_close_prev = abs(high_prices[i] - close_prices[i-1])
                low_close_prev = abs(low_prices[i] - close_prices[i-1])
                tr = max(high_low, high_close_prev, low_close_prev)
                tr_values.append(tr)
            atr = np.mean(tr_values) if tr_values else 0
        else:
            atr = 0
        eng.append(atr)
        
        # Feature 8: Short interest growth rate
        si_growth = 0
        if t > 0 and abs(data[t-1, 0]) > 1e-8:
            si_growth = (short_interest / max(abs(data[t-1, 0]), 1e-8)) - 1
        eng.append(si_growth)
        
        # Feature 9: Short volume trend (slope of short volume over 15 days)
        if len(short_volume) >= 3:
            x = np.arange(len(short_volume))
            # Use polyfit with degree 1 (linear) to get the slope
            slope = np.polyfit(x, short_volume, 1)[0]
        else:
            slope = 0
        eng.append(slope)
        
        # Feature 10: Relative Strength Index (RSI)
        if len(close_prices) >= 14:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain)
            avg_loss = np.mean(loss)
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Neutral RSI when not enough data
        eng.append(rsi)
        
        # Feature 11: OHLC price range relative to close
        price_range = (high_prices[-1] - low_prices[-1]) / max(abs(close_prices[-1]), 1e-8)
        eng.append(price_range)
        
        # Feature 12: Days to cover change
        dtc_change = 0
        if t > 0 and abs(data[t-1, 2]) > 1e-8:
            dtc_change = (days_to_cover / max(abs(data[t-1, 2]), 1e-8)) - 1
        eng.append(dtc_change)
        
        # Feature 13: Short interest to average volume ratio
        si_to_volume = short_interest / max(abs(avg_volume), 1e-8)
        eng.append(si_to_volume)
        
        # Feature 14: Options implied volatility to historical volatility ratio
        if volatility > 1e-8:
            iv_to_hv = options_avg_implied_volatility / max(abs(volatility), 1e-8)
        else:
            iv_to_hv = 1.0
        eng.append(iv_to_hv)
        
        # Feature 15: Short cost to volatility ratio
        short_cost_to_vol = options_synthetic_short_cost / max(abs(options_avg_implied_volatility), 1e-8)
        eng.append(short_cost_to_vol)
        
        # Feature 16: Short interest acceleration
        si_accel = 0
        if t > 1 and abs(data[t-1, 0]) > 1e-8 and abs(data[t-2, 0]) > 1e-8:
            prev_growth = (data[t-1, 0] / max(abs(data[t-2, 0]), 1e-8)) - 1
            si_accel = si_growth - prev_growth
        eng.append(si_accel)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure row has exactly MAX_TOTAL elements
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        result[t] = row
    
    # Handle NaN and infinity values
    result = np.nan_to_num(result, nan=0.0, posinf=0.0, neginf=0.0)
    
    return result
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 1 (claude) (SVM)
==================================================
Training SVM model...

Iteration 1 (claude) Performance:
MAE: 92239.3324
RMSE: 115033.7136
MAPE: 12.36%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 86
   • Highly important features (top 5%): 63

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_9_t1: importance=0.0027, rank=1
   2. Feature_9_t2: importance=0.0022, rank=2
   3. Feature_17_t2: importance=0.0018, rank=3
   4. Feature_15_t3: importance=0.0015, rank=4
   5. Feature_15_t2: importance=0.0015, rank=5
💾 Saved code for iteration 1 to iteration_codes dictionary
📊 No significant improvement. Change: -1.28%

📈 Current best MAPE: 11.08%
🔄 Iterations without improvement: 1/5

======================================================================
ITERATION 2
======================================================================
🤖 Calling Claude for iteration 2...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    result = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Extract key raw features
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        # Always keep these critical raw features
        raw_keep.append(short_interest)
        raw_keep.append(avg_volume)
        raw_keep.append(days_to_cover)
        
        # Extract OHLC data
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent close price (more relevant than keeping all OHLC)
        raw_keep.append(close_prices[-1])  # Most recent close
        
        # Extract other important raw features
        options_put_call_ratio = data[t, 64]
        options_synthetic_short_cost = data[t, 65]  # High importance from baseline
        options_avg_implied_volatility = data[t, 66]
        shares_outstanding = data[t, 67]
        
        # Keep high importance raw features based on previous iterations
        raw_keep.append(options_synthetic_short_cost)
        
        # Extract short interest volume and total volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep specific high importance features from these arrays
        raw_keep.append(short_volume[-1])  # Most recent short volume
        raw_keep.append(total_volume[-1])  # Most recent total volume
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Feature 1: Short volume trend (slope of short volume over 15 days)
        # This was one of the top important features in previous iteration
        if len(short_volume) >= 3:
            x = np.arange(len(short_volume))
            slope = np.polyfit(x, short_volume, 1)[0]
            # Normalize by average short volume to make more comparable across stocks
            norm_slope = slope / max(abs(np.mean(short_volume)), 1e-8)
        else:
            norm_slope = 0
        eng.append(norm_slope)
        
        # Feature 2: Short cost to volatility ratio
        # This was one of the top important features in previous iteration
        short_cost_to_vol = options_synthetic_short_cost / max(abs(options_avg_implied_volatility), 1e-8)
        eng.append(short_cost_to_vol)
        
        # Feature 3: Short interest to shares outstanding ratio (improved)
        # Fundamental measure of how much of the float is being shorted
        si_to_shares = short_interest / max(abs(shares_outstanding), 1e-8)
        eng.append(si_to_shares)
        
        # Feature 4: Short volume to total volume ratio (most recent day)
        # Daily short selling pressure
        short_ratio = short_volume[-1] / max(abs(total_volume[-1]), 1e-8)
        eng.append(short_ratio)
        
        # Feature 5: Exponentially weighted short volume ratio (more weight to recent days)
        # Improved version that gives more weight to recent activity
        if len(short_volume) >= 5:
            weights = np.exp(np.linspace(0, 1, len(short_volume)))
            weights = weights / np.sum(weights)
            weighted_short_ratio = np.sum(weights * short_volume) / max(abs(np.sum(weights * total_volume)), 1e-8)
        else:
            weighted_short_ratio = short_ratio
        eng.append(weighted_short_ratio)
        
        # Feature 6: Short interest growth rate
        # Rate of change in short interest
        si_growth = 0
        if t > 0 and abs(data[t-1, 0]) > 1e-8:
            si_growth = (short_interest / max(abs(data[t-1, 0]), 1e-8)) - 1
        eng.append(si_growth)
        
        # Feature 7: Days to cover change
        # Change in the time it would take to cover all short positions
        dtc_change = 0
        if t > 0 and abs(data[t-1, 2]) > 1e-8:
            dtc_change = (days_to_cover / max(abs(data[t-1, 2]), 1e-8)) - 1
        eng.append(dtc_change)
        
        # Feature 8: Short interest acceleration (second derivative)
        # Acceleration of short interest changes
        si_accel = 0
        if t > 1 and abs(data[t-1, 0]) > 1e-8 and abs(data[t-2, 0]) > 1e-8:
            prev_growth = (data[t-1, 0] / max(abs(data[t-2, 0]), 1e-8)) - 1
            si_accel = si_growth - prev_growth
        eng.append(si_accel)
        
        # Feature 9: Price momentum relative to short interest
        # How price is moving relative to short interest changes
        price_momentum = 0
        if len(close_prices) >= 5 and t > 0 and abs(data[t-1, 0]) > 1e-8:
            price_change = (close_prices[-1] / max(abs(close_prices[-5]), 1e-8)) - 1
            si_change = (short_interest / max(abs(data[t-1, 0]), 1e-8)) - 1
            price_momentum = price_change - si_change
        eng.append(price_momentum)
        
        # Feature 10: Volatility-adjusted short interest
        # Short interest normalized by price volatility
        if len(close_prices) >= 5:
            returns = np.diff(close_prices[-5:]) / np.maximum(np.abs(close_prices[-6:-1]), 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0.01
            vol_adj_si = short_interest / max(abs(volatility * close_prices[-1] * shares_outstanding), 1e-8)
        else:
            vol_adj_si = short_interest / max(abs(shares_outstanding), 1e-8)
        eng.append(vol_adj_si)
        
        # Feature 11: Options implied volatility to put/call ratio
        # Relationship between expected volatility and options sentiment
        iv_to_pc = options_avg_implied_volatility / max(abs(options_put_call_ratio), 1e-8)
        eng.append(iv_to_pc)
        
        # Feature 12: Short interest to average daily volume ratio
        # How many days of average volume the short interest represents
        si_to_adv = short_interest / max(abs(avg_volume), 1e-8)
        eng.append(si_to_adv)
        
        # Feature 13: Short volume trend change
        # Acceleration in short volume trend
        sv_trend_change = 0
        if t > 0 and len(short_volume) >= 3 and len(data[t-1, 68:83]) >= 3:
            prev_short_volume = data[t-1, 68:83]
            x = np.arange(len(prev_short_volume))
            prev_slope = np.polyfit(x, prev_short_volume, 1)[0]
            curr_slope = np.polyfit(x, short_volume, 1)[0]
            sv_trend_change = curr_slope - prev_slope
            # Normalize
            sv_trend_change = sv_trend_change / max(abs(np.mean(short_volume)), 1e-8)
        eng.append(sv_trend_change)
        
        # Feature 14: Relative strength of short selling pressure
        # Compare recent short volume ratio to its historical average
        if len(short_volume) >= 10 and len(total_volume) >= 10:
            recent_ratio = np.mean(short_volume[-3:]) / max(abs(np.mean(total_volume[-3:])), 1e-8)
            historical_ratio = np.mean(short_volume[:-3]) / max(abs(np.mean(total_volume[:-3])), 1e-8)
            rel_strength = recent_ratio / max(abs(historical_ratio), 1e-8) - 1
        else:
            rel_strength = 0
        eng.append(rel_strength)
        
        # Feature 15: Price range volatility
        # Normalized price range over the last 5 days
        if len(close_prices) >= 5:
            price_range = (np.max(high_prices[-5:]) - np.min(low_prices[-5:])) / max(abs(close_prices[-1]), 1e-8)
        else:
            price_range = (high_prices[-1] - low_prices[-1]) / max(abs(close_prices[-1]), 1e-8)
        eng.append(price_range)
        
        # Feature 16: Short interest to options implied volatility ratio
        # Relationship between short interest and expected volatility
        si_to_iv = short_interest / max(abs(options_avg_implied_volatility * shares_outstanding), 1e-8)
        eng.append(si_to_iv)
        
        # Feature 17: Short volume consistency
        # Consistency of short selling (lower std dev means more consistent pressure)
        if len(short_volume) >= 5:
            short_vol_std = np.std(short_volume[-5:]) / max(abs(np.mean(short_volume[-5:])), 1e-8)
        else:
            short_vol_std = 0
        eng.append(short_vol_std)
        
        # Feature 18: Synthetic short cost momentum
        # Change in the cost of creating synthetic shorts
        synth_cost_momentum = 0
        if t > 0:
            prev_cost = data[t-1, 65]
            synth_cost_momentum = (options_synthetic_short_cost / max(abs(prev_cost), 1e-8)) - 1
        eng.append(synth_cost_momentum)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure row has exactly MAX_TOTAL elements
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        result[t] = row
    
    # Handle NaN and infinity values
    result = np.nan_to_num(result, nan=0.0, posinf=0.0, neginf=0.0)
    
    return result
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (15,) (14,) 
⚠️ Function execution failed (attempt 1/5)
🔄 Retrying function execution with error feedback...
Error calling Claude API: Error code: 529 - {'type': 'error', 'error': {'type': 'overloaded_error', 'message': 'Overloaded'}, 'request_id': None}
❌ No response from Claude (attempt 2/5)
🔄 Retrying Claude API call...
Error calling Claude API: Error code: 529 - {'type': 'error', 'error': {'type': 'overloaded_error', 'message': 'Overloaded'}, 'request_id': None}
❌ No response from Claude (attempt 3/5)
🔄 Retrying Claude API call...
Error calling Claude API: Error code: 529 - {'type': 'error', 'error': {'type': 'overloaded_error', 'message': 'Overloaded'}, 'request_id': None}
❌ No response from Claude (attempt 4/5)
🔄 Retrying Claude API call...
Error calling Claude API: Error code: 529 - {'type': 'error', 'error': {'type': 'overloaded_error', 'message': 'Overloaded'}, 'request_id': None}
❌ No response from Claude (attempt 5/5)
⚠️ All Claude API attempts failed, using fallback

🔧 Applying feature selection using fallback function...
Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 1: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 1 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 1}), (1, 'Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 1}), (2, 'Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 1})]
🔄 Retrying... (1/5)
Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 2: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 2 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 2}), (1, 'Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 2}), (2, 'Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 2})]
🔄 Retrying... (2/5)
Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 3: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 3 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 3}), (1, 'Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 3}), (2, 'Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 3})]
🔄 Retrying... (3/5)
Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 4: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 4 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 4}), (1, 'Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 4}), (2, 'Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 4})]
🔄 Retrying... (4/5)
Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 5: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 5 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 5}), (1, 'Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 5}), (2, 'Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 5})]
⚠️ All 5 attempts failed, using fallback function
🆘 Using fallback feature selection...
Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 1: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 1 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 1}), (1, 'Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 1}), (2, 'Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 1})]
🔄 Retrying... (1/5)
Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 2: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 2 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 2}), (1, 'Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 2}), (2, 'Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 2})]
🔄 Retrying... (2/5)
Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 3: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 3 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 3}), (1, 'Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 3}), (2, 'Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 3})]
🔄 Retrying... (3/5)
Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 4: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 4 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 4}), (1, 'Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 4}), (2, 'Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 4})]
🔄 Retrying... (4/5)
Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 5: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 5 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 5}), (1, 'Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 5}), (2, 'Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 5})]
⚠️ All 5 attempts failed, using fallback function
🆘 Using fallback feature selection...
Training data shape: (106, 4, 97) -> (106, 4, 15)
Validation data shape: (36, 4, 97) -> (36, 4, 15)
⚠️ Total errors encountered: 720
  Error 1: ValueError - cannot reshape array of size 95 into shape (15,4)
  Error 2: ValueError - cannot reshape array of size 95 into shape (15,4)
  Error 3: ValueError - cannot reshape array of size 95 into shape (15,4)

==================================================
Training Iteration 2 (fallback) (SVM)
==================================================
Training SVM model...

Iteration 2 (fallback) Performance:
MAE: 84322.0919
RMSE: 115356.1013
MAPE: 11.12%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 40
   • Highly important features (top 5%): 26

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0128, rank=1
   2. Feature_2_t2: importance=0.0038, rank=2
   3. Feature_1_t2: importance=0.0037, rank=3
   4. Feature_0_t2: importance=0.0035, rank=4
   5. Feature_2_t3: importance=0.0032, rank=5
📊 No significant improvement. Change: -0.04%

📈 Current best MAPE: 11.08%
🔄 Iterations without improvement: 2/5

🎯 Final Evaluation on Test Set (Unseen Data)
======================================================================
Using train+validation data for final model training to maximize data usage
Combined train+val data shape: (142, 4, 97)
Test data shape: (36, 4, 97)

📊 BASELINE EVALUATION (Raw Features, Train+Val → Test):

==================================================
Training Baseline Final (Raw Features) (SVM)
==================================================
Training SVM model...

Baseline Final (Raw Features) Performance:
MAE: 256206.1973
RMSE: 343577.1491
MAPE: 13.81%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 243
   • Highly important features (top 5%): 123

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0013, rank=1
   2. Feature_72_t0: importance=0.0008, rank=2
   3. Feature_2_t3: importance=0.0008, rank=3
   4. Feature_74_t0: importance=0.0008, rank=4
   5. Feature_77_t3: importance=0.0007, rank=5
   Baseline MAPE: 13.81%
   Baseline MAE: 256206.1973
   Baseline RMSE: 343577.1491
ℹ️ No feature engineering code available, using baseline for final evaluation

======================================================================
ITERATION PERFORMANCE SUMMARY
======================================================================

📊 VALIDATION MAPE TREND:
--------------------------------------------------------------------------------
Iteration  Model                     Validation MAPE Improvement from Last
--------------------------------------------------------------------------------
0          Baseline                  11.08           N/A                 
1          Iteration 1               12.36           -1.28%              
2          Iteration 2               11.12           -0.04%              
--------------------------------------------------------------------------------
🏆 Best: Iteration 2 - MAPE: 11.12%
✅ Saved FSS results to cache/FSS_iterative_results_enhanced.pkl
✅ Summary report saved for FSS

🎉 Process completed successfully for FSS!

================================================================================
PROCESSING TICKER 6/14: ABM
================================================================================
🚀 Starting Iterative Agent-Based Feature Selection Process for ABM
======================================================================
📊 Loading data from parquet file...
📊 Loading data for ABM from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ABM...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data integrity validation passed
✅ Data loaded successfully!
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
Features per timestep: 97
Lookback window: 4

🎯 Step 1: Running baseline model on validation set...

==================================================
Training Baseline (All 97 Features) (SVM)
==================================================
Training SVM model...

Baseline (All 97 Features) Performance:
MAE: 211435.4276
RMSE: 268102.6762
MAPE: 15.91%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 197
   • Highly important features (top 5%): 105

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t2: importance=0.0005, rank=1
   2. Feature_65_t0: importance=0.0003, rank=2
   3. Feature_63_t3: importance=0.0003, rank=3
   4. Feature_69_t0: importance=0.0002, rank=4
   5. Feature_65_t2: importance=0.0002, rank=5

📊 Baseline Performance: MAPE = 15.91%

🔄 Starting iterative improvement process...
Max iterations: 2
Min improvement threshold: 0.1%
Patience: 5 iterations without improvement

======================================================================
ITERATION 1
======================================================================
🤖 Calling Claude for iteration 1...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Construct features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        # Keep these important raw features
        raw_keep.append(short_interest)  # Short interest
        raw_keep.append(avg_volume)      # Average daily volume
        raw_keep.append(days_to_cover)   # Days to cover
        
        # Extract OHLC data
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Options data
        put_call_ratio = data[t, 64]
        synthetic_short_cost = data[t, 65]
        implied_volatility = data[t, 66]
        shares_outstanding = data[t, 67]
        
        # Keep important options data
        raw_keep.append(put_call_ratio)       # Put-call volume ratio
        raw_keep.append(synthetic_short_cost) # Synthetic short cost
        raw_keep.append(implied_volatility)   # Implied volatility
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep the most recent short volume and total volume
        raw_keep.append(short_volume[-1])  # Most recent short volume
        raw_keep.append(total_volume[-1])  # Most recent total volume
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Feature 1: Short interest to shares outstanding ratio
        # This measures what percentage of the float is being shorted
        si_to_shares = short_interest / max(abs(shares_outstanding), 1e-8)
        eng.append(si_to_shares)
        
        # Feature 2: Short volume to total volume ratio (recent average)
        # This indicates the proportion of trading that is short selling
        short_ratio = np.mean(short_volume / np.maximum(total_volume, 1e-8))
        eng.append(short_ratio)
        
        # Feature 3: Price momentum (5-day)
        # Captures recent price trend
        if len(close_prices) >= 5:
            momentum_5d = (close_prices[-1] / max(abs(close_prices[-5]), 1e-8)) - 1.0
        else:
            momentum_5d = 0.0
        eng.append(momentum_5d)
        
        # Feature 4: Price momentum (10-day)
        # Captures medium-term price trend
        if len(close_prices) >= 10:
            momentum_10d = (close_prices[-1] / max(abs(close_prices[-10]), 1e-8)) - 1.0
        else:
            momentum_10d = 0.0
        eng.append(momentum_10d)
        
        # Feature 5: Volatility (standard deviation of returns)
        # Measures price volatility
        if len(close_prices) >= 5:
            returns = np.diff(close_prices[-6:]) / np.maximum(close_prices[-6:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0.0
        else:
            volatility = 0.0
        eng.append(volatility)
        
        # Feature 6: Average true range (ATR)
        # Measures volatility incorporating gaps
        if len(close_prices) >= 2:
            true_ranges = []
            for i in range(1, min(10, len(close_prices))):
                tr1 = high_prices[-i] - low_prices[-i]
                tr2 = abs(high_prices[-i] - close_prices[-(i+1)])
                tr3 = abs(low_prices[-i] - close_prices[-(i+1)])
                true_ranges.append(max(tr1, tr2, tr3))
            atr = np.mean(true_ranges) if true_ranges else 0.0
        else:
            atr = 0.0
        eng.append(atr)
        
        # Feature 7: Short interest change rate
        # Measures how quickly short interest is changing
        if t > 0:
            prev_si = data[t-1, 0]
            si_change = (short_interest / max(abs(prev_si), 1e-8)) - 1.0
        else:
            si_change = 0.0
        eng.append(si_change)
        
        # Feature 8: Short volume trend
        # Measures if short volume is increasing or decreasing
        if len(short_volume) >= 5:
            short_vol_trend = (short_volume[-1] / max(abs(np.mean(short_volume[-5:-1])), 1e-8)) - 1.0
        else:
            short_vol_trend = 0.0
        eng.append(short_vol_trend)
        
        # Feature 9: RSI (Relative Strength Index)
        # Momentum oscillator measuring speed and change of price movements
        if len(close_prices) >= 14:
            delta = np.diff(close_prices[-15:])
            gain = np.sum(np.where(delta > 0, delta, 0))
            loss = np.sum(np.where(delta < 0, -delta, 0))
            avg_gain = gain / 14
            avg_loss = loss / 14
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50.0  # Neutral value when not enough data
        eng.append(rsi)
        
        # Feature 10: Price to volume ratio
        # Measures price movement relative to volume (liquidity indicator)
        price_to_volume = close_prices[-1] / max(abs(total_volume[-1]), 1e-8)
        eng.append(price_to_volume)
        
        # Feature 11: Days to cover change
        # Measures how the short covering time is changing
        if t > 0:
            prev_dtc = data[t-1, 2]
            dtc_change = (days_to_cover / max(abs(prev_dtc), 1e-8)) - 1.0
        else:
            dtc_change = 0.0
        eng.append(dtc_change)
        
        # Feature 12: Short cost to volatility ratio
        # Measures if the cost of shorting is justified by volatility
        short_cost_to_vol = synthetic_short_cost / max(abs(implied_volatility), 1e-8)
        eng.append(short_cost_to_vol)
        
        # Feature 13: Bollinger Band Width
        # Measures volatility based on standard deviation
        if len(close_prices) >= 10:
            sma = np.mean(close_prices[-10:])
            std = np.std(close_prices[-10:])
            bb_width = (2 * std) / max(abs(sma), 1e-8)
        else:
            bb_width = 0.0
        eng.append(bb_width)
        
        # Feature 14: VWAP (Volume Weighted Average Price)
        # Price that considers volume
        if len(close_prices) >= 5:
            vwap = np.sum(close_prices[-5:] * total_volume[-5:]) / max(np.sum(total_volume[-5:]), 1e-8)
        else:
            vwap = close_prices[-1]
        eng.append(vwap)
        
        # Feature 15: Price distance from VWAP
        # Measures how far current price is from VWAP
        price_to_vwap = (close_prices[-1] / max(abs(vwap), 1e-8)) - 1.0
        eng.append(price_to_vwap)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (15,) (14,) 
⚠️ Function execution failed (attempt 1/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Construct features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    # Constants
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Essential raw features to keep
        raw_keep = [
            data[t, 0],  # short interest
            data[t, 1],  # average daily volume
            data[t, 2],  # days to cover
            data[t, 64], # options_put_call_volume_ratio
            data[t, 65], # options_synthetic_short_cost - high importance from baseline
            data[t, 66]  # options_avg_implied_volatility
        ]
        
        # Get OHLC data for the last 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Get short interest volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        shares_outstanding = data[t, 67]
        
        # Add key OHLC summary statistics
        raw_keep.append(close_prices[-1])  # Latest close price
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Engineered features
        eng = []
        
        # 1. Short Volume Ratio (short volume / total volume)
        short_volume_ratio = np.zeros_like(short_volume)
        for i in range(len(short_volume)):
            denom = max(abs(total_volume[i]), 1e-8)
            short_volume_ratio[i] = short_volume[i] / denom
        
        # Mean short volume ratio (important indicator of short selling pressure)
        eng.append(np.mean(short_volume_ratio))
        
        # 2. Price momentum and volatility features
        if len(close_prices) >= 5:
            # 5-day price momentum
            momentum_5d = (close_prices[-1] / max(abs(close_prices[-5]), 1e-8)) - 1
            eng.append(momentum_5d)
            
            # 15-day price momentum
            momentum_15d = (close_prices[-1] / max(abs(close_prices[0]), 1e-8)) - 1
            eng.append(momentum_15d)
            
            # Price volatility (standard deviation of returns)
            returns = np.diff(close_prices) / np.maximum(close_prices[:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 1 else 0
            eng.append(volatility)
        else:
            # Placeholders if not enough data
            eng.extend([0.0, 0.0, 0.0])
        
        # 3. Short Interest to Float Ratio
        # Higher values indicate higher short selling pressure relative to available shares
        short_interest_to_float = data[t, 0] / max(abs(shares_outstanding), 1e-8)
        eng.append(short_interest_to_float)
        
        # 4. Relative Short Interest Change
        # How much short interest has changed recently
        if t > 0:
            rel_si_change = (data[t, 0] / max(abs(data[t-1, 0]), 1e-8)) - 1
        else:
            rel_si_change = 0.0
        eng.append(rel_si_change)
        
        # 5. Average True Range (ATR) - measure of volatility
        true_ranges = []
        for i in range(1, len(high_prices)):
            tr1 = high_prices[i] - low_prices[i]
            tr2 = abs(high_prices[i] - close_prices[i-1])
            tr3 = abs(low_prices[i] - close_prices[i-1])
            true_ranges.append(max(tr1, tr2, tr3))
        atr = np.mean(true_ranges) if true_ranges else 0
        eng.append(atr)
        
        # 6. RSI (Relative Strength Index)
        if len(close_prices) >= 14:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain)
            avg_loss = np.mean(loss)
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
        else:
            eng.append(50.0)  # Neutral RSI value as placeholder
        
        # 7. Short Volume Trend
        if len(short_volume) >= 5:
            short_vol_trend = np.mean(short_volume[-5:]) / max(abs(np.mean(short_volume[:5])), 1e-8) - 1
            eng.append(short_vol_trend)
        else:
            eng.append(0.0)
        
        # 8. Options-based features
        # Implied volatility to historical volatility ratio
        if volatility > 0:
            iv_to_hv_ratio = data[t, 66] / max(volatility, 1e-8)
            eng.append(iv_to_hv_ratio)
        else:
            eng.append(1.0)
        
        # 9. Short cost to volatility ratio
        short_cost_to_vol = data[t, 65] / max(data[t, 66], 1e-8)
        eng.append(short_cost_to_vol)
        
        # 10. Volume Trend
        if len(total_volume) >= 5:
            vol_trend = np.mean(total_volume[-5:]) / max(abs(np.mean(total_volume[:5])), 1e-8) - 1
            eng.append(vol_trend)
        else:
            eng.append(0.0)
        
        # 11. Price Range Ratio (High-Low spread relative to price)
        avg_range_ratio = np.mean((high_prices - low_prices) / np.maximum(close_prices, 1e-8))
        eng.append(avg_range_ratio)
        
        # 12. Days to Cover Change
        if t > 0:
            dtc_change = (data[t, 2] / max(abs(data[t-1, 2]), 1e-8)) - 1
        else:
            dtc_change = 0.0
        eng.append(dtc_change)
        
        # 13. Short Interest Acceleration (second derivative)
        if t >= 2:
            si_change_t = data[t, 0] - data[t-1, 0]
            si_change_t_1 = data[t-1, 0] - data[t-2, 0]
            si_acceleration = si_change_t - si_change_t_1
            eng.append(si_acceleration)
        else:
            eng.append(0.0)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent width by padding or truncating
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN and infinite values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: index 14 is out of bounds for axis 0 with size 14
⚠️ Function execution failed (attempt 2/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Construct features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    # Constants
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (highest importance)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        
        # Keep days to cover (important for short interest prediction)
        raw_keep.append(data[t, 2])  # days to cover
        
        # Keep options-related features (high importance in baseline)
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Extract short interest volume and total volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep shares outstanding
        raw_keep.append(data[t, 67])  # shares outstanding
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Price momentum and volatility features
        if len(close_prices) > 1:
            # Price momentum (5-day)
            price_momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8) - 1) if len(close_prices) >= 5 else 0
            eng.append(price_momentum_5d)
            
            # Price volatility (standard deviation of returns)
            returns = np.diff(close_prices) / np.maximum(close_prices[:-1], 1e-8)
            price_volatility = np.std(returns) if len(returns) > 0 else 0
            eng.append(price_volatility)
            
            # Average true range (ATR) - volatility indicator
            true_ranges = []
            for i in range(1, len(close_prices)):
                high_low = high_prices[i] - low_prices[i]
                high_close_prev = abs(high_prices[i] - close_prices[i-1])
                low_close_prev = abs(low_prices[i] - close_prices[i-1])
                true_ranges.append(max(high_low, high_close_prev, low_close_prev))
            atr = np.mean(true_ranges) if true_ranges else 0
            eng.append(atr)
        else:
            eng.extend([0, 0, 0])  # Placeholders if not enough data
        
        # 2. Volume-based features
        if len(short_volume) > 0 and len(total_volume) > 0:
            # Short volume ratio (recent 5 days)
            recent_short_vol = np.sum(short_volume[-5:]) if len(short_volume) >= 5 else np.sum(short_volume)
            recent_total_vol = np.sum(total_volume[-5:]) if len(total_volume) >= 5 else np.sum(total_volume)
            short_vol_ratio = recent_short_vol / max(recent_total_vol, 1e-8)
            eng.append(short_vol_ratio)
            
            # Short volume trend (change in short volume)
            if len(short_volume) >= 5:
                short_vol_trend = (np.mean(short_volume[-2:]) / max(np.mean(short_volume[-5:-2]), 1e-8) - 1)
            else:
                short_vol_trend = 0
            eng.append(short_vol_trend)
            
            # Volume trend (change in total volume)
            if len(total_volume) >= 5:
                vol_trend = (np.mean(total_volume[-2:]) / max(np.mean(total_volume[-5:-2]), 1e-8) - 1)
            else:
                vol_trend = 0
            eng.append(vol_trend)
        else:
            eng.extend([0, 0, 0])  # Placeholders
        
        # 3. Short interest relative to shares outstanding
        short_interest = data[t, 0]
        shares_out = data[t, 67]
        short_interest_ratio = short_interest / max(shares_out, 1e-8)
        eng.append(short_interest_ratio)
        
        # 4. Price-volume correlation
        if len(close_prices) > 5 and len(total_volume) > 5:
            # Use simple covariance instead of correlation coefficient for stability
            price_changes = np.diff(close_prices[-6:])
            volume_changes = np.diff(total_volume[-6:])
            if len(price_changes) > 0 and len(volume_changes) > 0:
                price_vol_cov = np.mean((price_changes - np.mean(price_changes)) * 
                                        (volume_changes - np.mean(volume_changes)))
                eng.append(price_vol_cov)
            else:
                eng.append(0)
        else:
            eng.append(0)
        
        # 5. Technical indicators
        if len(close_prices) >= 14:
            # RSI (Relative Strength Index)
            diff = np.diff(close_prices)
            gains = np.maximum(diff, 0)
            losses = np.maximum(-diff, 0)
            avg_gain = np.mean(gains[-14:])
            avg_loss = np.mean(losses[-14:])
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
            
            # MACD Line (12-26 day EMA difference)
            ema12 = np.mean(close_prices[-12:])
            ema26 = np.mean(close_prices[-14:])  # Using all available data as approximation
            macd = ema12 - ema26
            eng.append(macd)
        else:
            eng.extend([0, 0])  # Placeholders
        
        # 6. Options-based features
        put_call_ratio = data[t, 64]
        implied_vol = data[t, 66]
        synthetic_short_cost = data[t, 65]
        
        # Options sentiment indicator
        options_sentiment = (put_call_ratio * implied_vol) / max(synthetic_short_cost, 1e-8)
        eng.append(options_sentiment)
        
        # 7. Composite features
        # Short squeeze potential indicator
        days_to_cover = data[t, 2]
        short_squeeze_potential = days_to_cover * short_interest_ratio * price_momentum_5d
        eng.append(short_squeeze_potential)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent size
        if row.size < MAX_TOTAL:
            # Pad with zeros if needed
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            # Truncate if needed
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN and infinity values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 1 (claude) (SVM)
==================================================
Training SVM model...

Iteration 1 (claude) Performance:
MAE: 201003.1974
RMSE: 248858.1741
MAPE: 15.35%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 69
   • Highly important features (top 5%): 56

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_12_t0: importance=0.0006, rank=1
   2. Feature_7_t3: importance=0.0005, rank=2
   3. Feature_18_t3: importance=0.0005, rank=3
   4. Feature_17_t1: importance=0.0004, rank=4
   5. Feature_14_t0: importance=0.0004, rank=5
💾 Saved code for iteration 1 to iteration_codes dictionary
🎉 IMPROVEMENT! MAPE improved by 0.57%

📈 Current best MAPE: 15.35%
🔄 Iterations without improvement: 0/5

======================================================================
ITERATION 2
======================================================================
🤖 Calling Claude for iteration 2...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Construct features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    # Constants
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (highest importance)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        
        # Keep days to cover (important for short interest prediction)
        raw_keep.append(data[t, 2])  # days to cover
        
        # Keep options-related features (high importance in baseline)
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent close price and the most recent open price
        # These were among the top important features in iteration 1
        raw_keep.append(close_prices[-1])  # Most recent close price
        raw_keep.append(open_prices[-1])   # Most recent open price
        
        # Extract short interest volume and total volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep shares outstanding
        raw_keep.append(data[t, 67])  # shares outstanding
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Interest Relative Metrics (key for prediction)
        short_interest = data[t, 0]
        shares_out = data[t, 67]
        # Short interest as percentage of shares outstanding
        short_interest_ratio = short_interest / max(shares_out, 1e-8)
        eng.append(short_interest_ratio)
        
        # Short interest to average daily volume ratio (alternative days to cover calculation)
        # This provides a different perspective than the raw days to cover
        si_to_adv_ratio = short_interest / max(data[t, 1], 1e-8)
        eng.append(si_to_adv_ratio)
        
        # 2. Recent Short Volume Dynamics
        if len(short_volume) > 0 and len(total_volume) > 0:
            # Short volume ratio (recent 5 days) - improved calculation
            recent_short_vol = np.sum(short_volume[-5:]) if len(short_volume) >= 5 else np.sum(short_volume)
            recent_total_vol = np.sum(total_volume[-5:]) if len(total_volume) >= 5 else np.sum(total_volume)
            short_vol_ratio = recent_short_vol / max(recent_total_vol, 1e-8)
            eng.append(short_vol_ratio)
            
            # Short volume acceleration (second derivative)
            # Captures increasing/decreasing rate of short selling
            if len(short_volume) >= 6:
                short_vol_1 = np.mean(short_volume[-3:])
                short_vol_2 = np.mean(short_volume[-6:-3])
                short_vol_3 = np.mean(short_volume[:-6]) if len(short_volume) > 6 else short_vol_2
                
                # First derivative (velocity)
                short_vel_1 = short_vol_1 - short_vol_2
                short_vel_2 = short_vol_2 - short_vol_3
                
                # Second derivative (acceleration)
                short_accel = short_vel_1 - short_vel_2
                eng.append(short_accel)
            else:
                eng.append(0)
        else:
            eng.extend([0, 0])  # Placeholders
        
        # 3. Price Action and Volatility Features
        if len(close_prices) > 1:
            # Price momentum over different timeframes (3-day and 10-day)
            # Using two different timeframes captures both short and medium-term trends
            price_momentum_3d = (close_prices[-1] / max(close_prices[-3], 1e-8) - 1) if len(close_prices) >= 3 else 0
            price_momentum_10d = (close_prices[-1] / max(close_prices[-10], 1e-8) - 1) if len(close_prices) >= 10 else 0
            eng.append(price_momentum_3d)
            eng.append(price_momentum_10d)
            
            # Normalized price range (high-low) over the past 5 days
            # Captures recent volatility in a normalized way
            if len(close_prices) >= 5:
                max_price = np.max(high_prices[-5:])
                min_price = np.min(low_prices[-5:])
                avg_price = np.mean(close_prices[-5:])
                norm_range = (max_price - min_price) / max(avg_price, 1e-8)
                eng.append(norm_range)
            else:
                eng.append(0)
            
            # Gap analysis - overnight price jumps can signal significant events
            if len(open_prices) >= 2 and len(close_prices) >= 2:
                overnight_gaps = []
                for i in range(1, min(len(open_prices), len(close_prices))):
                    gap = (open_prices[i] / max(close_prices[i-1], 1e-8)) - 1
                    overnight_gaps.append(gap)
                avg_gap = np.mean(overnight_gaps) if overnight_gaps else 0
                eng.append(avg_gap)
            else:
                eng.append(0)
        else:
            eng.extend([0, 0, 0, 0])  # Placeholders
        
        # 4. Technical Indicators
        if len(close_prices) >= 14:
            # RSI (Relative Strength Index) - improved calculation
            diff = np.diff(close_prices)
            gains = np.maximum(diff, 0)
            losses = np.maximum(-diff, 0)
            
            # Use exponential weighting to give more importance to recent price movements
            weights = np.exp(np.linspace(0, 1, len(gains)))
            weights = weights / np.sum(weights)
            
            avg_gain = np.sum(gains * weights[:len(gains)])
            avg_loss = np.sum(losses * weights[:len(losses)])
            
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
            
            # Bollinger Band Width - measures volatility
            # Wider bands indicate higher volatility
            sma = np.mean(close_prices[-20:]) if len(close_prices) >= 20 else np.mean(close_prices)
            std = np.std(close_prices[-20:]) if len(close_prices) >= 20 else np.std(close_prices)
            bb_width = (2 * std) / max(sma, 1e-8)
            eng.append(bb_width)
        else:
            eng.extend([0, 0])  # Placeholders
        
        # 5. Volume-Price Relationship
        if len(close_prices) > 5 and len(total_volume) > 5:
            # On-Balance Volume (OBV) momentum
            # Measures buying/selling pressure through volume
            obv = 0
            for i in range(1, min(len(close_prices), len(total_volume))):
                if close_prices[i] > close_prices[i-1]:
                    obv += total_volume[i]
                elif close_prices[i] < close_prices[i-1]:
                    obv -= total_volume[i]
            
            # Normalize OBV by average volume
            norm_obv = obv / max(np.mean(total_volume), 1e-8)
            eng.append(norm_obv)
            
            # Volume-weighted price momentum
            # Gives more weight to price moves with higher volume
            if len(close_prices) >= 5 and len(total_volume) >= 5:
                price_changes = np.diff(close_prices[-5:])
                vol_weights = total_volume[-5+1:] / max(np.sum(total_volume[-5+1:]), 1e-8)
                vw_momentum = np.sum(price_changes * vol_weights)
                eng.append(vw_momentum)
            else:
                eng.append(0)
        else:
            eng.extend([0, 0])  # Placeholders
        
        # 6. Options Market Indicators
        put_call_ratio = data[t, 64]
        implied_vol = data[t, 66]
        synthetic_short_cost = data[t, 65]
        
        # Options market pressure indicator
        # High values suggest bearish sentiment with high volatility expectations
        options_pressure = put_call_ratio * implied_vol
        eng.append(options_pressure)
        
        # Cost-adjusted options sentiment
        # Adjusts the put/call ratio by the cost of shorting
        cost_adj_sentiment = put_call_ratio / max(synthetic_short_cost, 1e-8)
        eng.append(cost_adj_sentiment)
        
        # 7. Composite Indicators
        # Short squeeze potential - improved with volatility component
        short_squeeze_potential = days_to_cover * short_interest_ratio * (1 + implied_vol)
        eng.append(short_squeeze_potential)
        
        # Short interest change momentum
        # Captures acceleration in short interest changes
        if t >= 2:
            si_current = data[t, 0]
            si_prev = data[t-1, 0]
            si_prev2 = data[t-2, 0]
            
            si_change_current = si_current / max(si_prev, 1e-8) - 1
            si_change_prev = si_prev / max(si_prev2, 1e-8) - 1
            
            si_change_accel = si_change_current - si_change_prev
            eng.append(si_change_accel)
        else:
            eng.append(0)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent size
        if row.size < MAX_TOTAL:
            # Pad with zeros if needed
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            # Truncate if needed
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN and infinity values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: name 'days_to_cover' is not defined
⚠️ Function execution failed (attempt 1/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Construct features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    # Constants
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (highest importance)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        
        # Keep days to cover (important for short interest prediction)
        raw_keep.append(data[t, 2])  # days to cover
        
        # Keep options-related features (high importance in baseline)
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent close price (more informative than keeping all OHLC)
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Extract short interest volume and total volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep shares outstanding (important for relative measures)
        raw_keep.append(data[t, 67])  # shares outstanding
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short interest relative to shares outstanding (key ratio for short squeeze potential)
        short_interest = data[t, 0]
        shares_out = data[t, 67]
        short_interest_ratio = short_interest / max(shares_out, 1e-8)
        eng.append(short_interest_ratio)
        
        # 2. Recent short volume intensity (5-day)
        if len(short_volume) >= 5 and len(total_volume) >= 5:
            recent_short_vol = np.sum(short_volume[-5:])
            recent_total_vol = np.sum(total_volume[-5:])
            short_vol_ratio_5d = recent_short_vol / max(recent_total_vol, 1e-8)
            eng.append(short_vol_ratio_5d)
        else:
            eng.append(0)
        
        # 3. Short volume acceleration (comparing recent vs earlier periods)
        if len(short_volume) >= 10:
            recent_short_ratio = np.sum(short_volume[-5:]) / max(np.sum(total_volume[-5:]), 1e-8)
            earlier_short_ratio = np.sum(short_volume[-10:-5]) / max(np.sum(total_volume[-10:-5]), 1e-8)
            short_vol_acceleration = recent_short_ratio / max(earlier_short_ratio, 1e-8) - 1
            eng.append(short_vol_acceleration)
        else:
            eng.append(0)
        
        # 4. Price momentum features (multiple timeframes for better signal)
        if len(close_prices) >= 10:
            # 3-day momentum (short-term)
            momentum_3d = close_prices[-1] / max(close_prices[-3], 1e-8) - 1
            eng.append(momentum_3d)
            
            # 10-day momentum (medium-term)
            momentum_10d = close_prices[-1] / max(close_prices[-10], 1e-8) - 1
            eng.append(momentum_10d)
            
            # Momentum divergence (short vs medium term)
            momentum_divergence = momentum_3d - momentum_10d
            eng.append(momentum_divergence)
        else:
            eng.extend([0, 0, 0])
        
        # 5. Volatility measures (important for short interest dynamics)
        if len(close_prices) >= 5:
            # Normalized price range over last 5 days
            price_range_5d = (np.max(high_prices[-5:]) - np.min(low_prices[-5:])) / max(np.mean(close_prices[-5:]), 1e-8)
            eng.append(price_range_5d)
            
            # Volatility ratio (recent vs earlier)
            if len(close_prices) >= 10:
                recent_returns = np.diff(close_prices[-5:]) / np.maximum(close_prices[-6:-1], 1e-8)
                earlier_returns = np.diff(close_prices[-10:-5]) / np.maximum(close_prices[-11:-6], 1e-8)
                recent_vol = np.std(recent_returns) if len(recent_returns) > 0 else 0
                earlier_vol = np.std(earlier_returns) if len(earlier_returns) > 0 else 0
                vol_ratio = recent_vol / max(earlier_vol, 1e-8)
                eng.append(vol_ratio)
            else:
                eng.append(0)
        else:
            eng.extend([0, 0])
        
        # 6. Volume profile features
        if len(total_volume) >= 5:
            # Volume trend (recent vs average)
            recent_vol_avg = np.mean(total_volume[-3:])
            overall_vol_avg = np.mean(total_volume)
            volume_trend = recent_vol_avg / max(overall_vol_avg, 1e-8) - 1
            eng.append(volume_trend)
            
            # Volume volatility (standard deviation relative to mean)
            vol_volatility = np.std(total_volume) / max(np.mean(total_volume), 1e-8)
            eng.append(vol_volatility)
        else:
            eng.extend([0, 0])
        
        # 7. Technical indicators
        if len(close_prices) >= 14:
            # RSI (Relative Strength Index) - momentum oscillator
            diff = np.diff(close_prices)
            gains = np.maximum(diff, 0)
            losses = np.maximum(-diff, 0)
            avg_gain = np.mean(gains[-14:])
            avg_loss = np.mean(losses[-14:])
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
            
            # RSI divergence from price (indicates potential reversal)
            if len(close_prices) >= 15:
                price_change = (close_prices[-1] / max(close_prices[-5], 1e-8) - 1) * 100
                rsi_divergence = rsi - 50 - price_change  # Normalized comparison
                eng.append(rsi_divergence)
            else:
                eng.append(0)
        else:
            eng.extend([0, 0])
        
        # 8. Options-based composite features
        put_call_ratio = data[t, 64]
        implied_vol = data[t, 66]
        synthetic_short_cost = data[t, 65]
        
        # Options sentiment indicator (combining multiple options signals)
        options_sentiment = (put_call_ratio * implied_vol) / max(synthetic_short_cost, 1e-8)
        eng.append(options_sentiment)
        
        # 9. Short squeeze potential indicators
        days_to_cover = data[t, 2]
        
        # Composite short squeeze indicator
        short_squeeze_potential = days_to_cover * short_interest_ratio
        if len(close_prices) >= 5:
            # Add momentum component if available
            momentum_5d = close_prices[-1] / max(close_prices[-5], 1e-8) - 1
            short_squeeze_potential *= (1 + max(momentum_5d, 0))  # Amplify with positive momentum
        eng.append(short_squeeze_potential)
        
        # 10. Liquidity-adjusted short pressure
        avg_volume = data[t, 1]
        liquidity_adjusted_short = short_interest / max(avg_volume, 1e-8)
        eng.append(liquidity_adjusted_short)
        
        # 11. Options-volume relationship
        if len(total_volume) > 0:
            options_volume_ratio = put_call_ratio / max(np.mean(total_volume) / max(shares_out, 1e-8), 1e-8)
            eng.append(options_volume_ratio)
        else:
            eng.append(0)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent size
        if row.size < MAX_TOTAL:
            # Pad with zeros if needed
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            # Truncate if needed
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN and infinity values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (4,) (5,) 
⚠️ Function execution failed (attempt 2/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Construct features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    # Constants
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (highest importance)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        
        # Keep days to cover (important for short interest prediction)
        raw_keep.append(data[t, 2])  # days to cover
        
        # Keep options-related features (high importance in baseline)
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent close price
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Extract short interest volume and total volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep shares outstanding
        raw_keep.append(data[t, 67])  # shares outstanding
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Price momentum and volatility features
        # Price momentum (5-day) - improved calculation with safeguards
        if len(close_prices) >= 5:
            price_momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8) - 1)
            eng.append(price_momentum_5d)
            
            # Price momentum (10-day) - longer term trend
            if len(close_prices) >= 10:
                price_momentum_10d = (close_prices[-1] / max(close_prices[-10], 1e-8) - 1)
                eng.append(price_momentum_10d)
            else:
                eng.append(0)
        else:
            eng.append(0)
            eng.append(0)
        
        # Improved volatility calculation - Parkinson's volatility estimator
        # Uses high-low range which is more informative than just close prices
        if len(high_prices) >= 5 and len(low_prices) >= 5:
            ln_hl_ratio = np.log(high_prices[-5:] / np.maximum(low_prices[-5:], 1e-8))
            parkinson_vol = np.sqrt(np.sum(ln_hl_ratio**2) / (4 * np.log(2) * 5))
            eng.append(parkinson_vol)
        else:
            eng.append(0)
        
        # 2. Volume-based features - refined from previous iteration
        if len(short_volume) > 0 and len(total_volume) > 0:
            # Short volume ratio (recent 5 days)
            recent_short_vol = np.sum(short_volume[-5:]) if len(short_volume) >= 5 else np.sum(short_volume)
            recent_total_vol = np.sum(total_volume[-5:]) if len(total_volume) >= 5 else np.sum(total_volume)
            short_vol_ratio = recent_short_vol / max(recent_total_vol, 1e-8)
            eng.append(short_vol_ratio)
            
            # Short volume acceleration (rate of change of short volume)
            if len(short_volume) >= 10:
                short_vol_recent = np.mean(short_volume[-5:])
                short_vol_prev = np.mean(short_volume[-10:-5])
                short_vol_accel = (short_vol_recent / max(short_vol_prev, 1e-8) - 1)
                eng.append(short_vol_accel)
            else:
                eng.append(0)
            
            # Relative volume (current volume vs average) - indicates unusual activity
            if len(total_volume) >= 10:
                avg_volume = np.mean(total_volume[-10:])
                rel_volume = total_volume[-1] / max(avg_volume, 1e-8)
                eng.append(rel_volume)
            else:
                eng.append(0)
        else:
            eng.extend([0, 0, 0])
        
        # 3. Short interest relative to shares outstanding and trading metrics
        short_interest = data[t, 0]
        shares_out = data[t, 67]
        avg_daily_vol = data[t, 1]
        
        # Short interest ratio (% of float)
        short_interest_ratio = short_interest / max(shares_out, 1e-8)
        eng.append(short_interest_ratio)
        
        # Short interest to volume ratio - indicates how many days of volume equals short interest
        si_volume_ratio = short_interest / max(avg_daily_vol, 1e-8)
        eng.append(si_volume_ratio)
        
        # 4. Technical indicators - refined selection based on importance
        if len(close_prices) >= 14:
            # RSI (Relative Strength Index)
            diff = np.diff(close_prices)
            gains = np.maximum(diff, 0)
            losses = np.maximum(-diff, 0)
            avg_gain = np.mean(gains[-14:])
            avg_loss = np.mean(losses[-14:])
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
            
            # Bollinger Band Width - indicates volatility and potential breakouts
            sma20 = np.mean(close_prices[-14:])
            std20 = np.std(close_prices[-14:])
            bb_width = (2 * std20) / max(sma20, 1e-8)
            eng.append(bb_width)
            
            # Price position within Bollinger Bands (normalized)
            upper_band = sma20 + 2 * std20
            lower_band = sma20 - 2 * std20
            band_range = upper_band - lower_band
            price_position = (close_prices[-1] - lower_band) / max(band_range, 1e-8)
            eng.append(price_position)
        else:
            eng.extend([0, 0, 0])
        
        # 5. Options-based features - enhanced from previous iteration
        put_call_ratio = data[t, 64]
        implied_vol = data[t, 66]
        synthetic_short_cost = data[t, 65]
        
        # Options sentiment indicator
        options_sentiment = (put_call_ratio * implied_vol) / max(synthetic_short_cost, 1e-8)
        eng.append(options_sentiment)
        
        # Implied volatility to historical volatility ratio
        # High values indicate market expects more volatility than recent history
        if len(close_prices) >= 10:
            returns = np.diff(close_prices[-10:]) / np.maximum(close_prices[-11:-1], 1e-8)
            hist_vol = np.std(returns) * np.sqrt(252)  # Annualized
            iv_hv_ratio = implied_vol / max(hist_vol, 1e-8)
            eng.append(iv_hv_ratio)
        else:
            eng.append(0)
        
        # 6. Composite features - improved from previous iteration
        # Short squeeze potential indicator
        days_to_cover = data[t, 2]
        short_squeeze_potential = days_to_cover * short_interest_ratio
        if len(close_prices) >= 5:
            short_squeeze_potential *= (1 + price_momentum_5d)  # Amplify with recent momentum
        eng.append(short_squeeze_potential)
        
        # Liquidity risk indicator
        if len(total_volume) >= 5:
            avg_recent_vol = np.mean(total_volume[-5:])
            liquidity_risk = short_interest / max(avg_recent_vol, 1e-8) * short_interest_ratio
            eng.append(liquidity_risk)
        else:
            eng.append(0)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent size
        if row.size < MAX_TOTAL:
            # Pad with zeros if needed
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            # Truncate if needed
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN and infinity values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (9,) (10,) 
⚠️ Function execution failed (attempt 3/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Construct features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    # Constants
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (highest importance)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        
        # Keep days to cover (important for short interest prediction)
        raw_keep.append(data[t, 2])  # days to cover
        
        # Keep options-related features (high importance in baseline)
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent close price (more informative than keeping all OHLC)
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Extract short interest volume and total volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep shares outstanding (needed for relative measures)
        raw_keep.append(data[t, 67])  # shares outstanding
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short interest relative to shares outstanding (high importance from previous iteration)
        short_interest = data[t, 0]
        shares_out = data[t, 67]
        short_interest_ratio = short_interest / max(shares_out, 1e-8)
        eng.append(short_interest_ratio)
        
        # 2. Price momentum features (multiple timeframes for better signal)
        # 3-day momentum (short-term)
        price_momentum_3d = (close_prices[-1] / max(close_prices[-3], 1e-8) - 1) if len(close_prices) >= 3 else 0
        eng.append(price_momentum_3d)
        
        # 10-day momentum (medium-term)
        price_momentum_10d = (close_prices[-1] / max(close_prices[-10], 1e-8) - 1) if len(close_prices) >= 10 else 0
        eng.append(price_momentum_10d)
        
        # 3. Volatility measures
        # Normalized price range over last 5 days
        if len(close_prices) >= 5:
            price_range = (max(high_prices[-5:]) - min(low_prices[-5:])) / max(np.mean(close_prices[-5:]), 1e-8)
            eng.append(price_range)
        else:
            eng.append(0)
        
        # 4. Short volume dynamics
        if len(short_volume) > 0 and len(total_volume) > 0:
            # Short volume ratio (recent 5 days)
            recent_short_vol = np.sum(short_volume[-5:]) if len(short_volume) >= 5 else np.sum(short_volume)
            recent_total_vol = np.sum(total_volume[-5:]) if len(total_volume) >= 5 else np.sum(total_volume)
            short_vol_ratio = recent_short_vol / max(recent_total_vol, 1e-8)
            eng.append(short_vol_ratio)
            
            # Short volume acceleration (rate of change in short volume)
            if len(short_volume) >= 6:
                short_vol_recent = np.mean(short_volume[-3:])
                short_vol_previous = np.mean(short_volume[-6:-3])
                short_vol_accel = (short_vol_recent / max(short_vol_previous, 1e-8)) - 1
                eng.append(short_vol_accel)
            else:
                eng.append(0)
        else:
            eng.extend([0, 0])
        
        # 5. Technical indicators
        if len(close_prices) >= 14:
            # RSI (Relative Strength Index)
            diff = np.diff(close_prices)
            gains = np.maximum(diff, 0)
            losses = np.maximum(-diff, 0)
            avg_gain = np.mean(gains[-14:])
            avg_loss = np.mean(losses[-14:])
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
            
            # RSI divergence with price (indicates potential reversal)
            if len(close_prices) >= 15:
                price_change = (close_prices[-1] - close_prices[-5]) / max(close_prices[-5], 1e-8)
                rsi_change = (rsi - 50) / 50  # Normalized RSI change from neutral
                rsi_divergence = price_change * rsi_change
                eng.append(rsi_divergence)
            else:
                eng.append(0)
        else:
            eng.extend([0, 0])
        
        # 6. Volume-price relationship
        if len(close_prices) >= 5 and len(total_volume) >= 5:
            # Volume-weighted price momentum
            vol_weighted_momentum = np.sum((close_prices[-5:] / max(close_prices[-5], 1e-8) - 1) * 
                                          total_volume[-5:]) / max(np.sum(total_volume[-5:]), 1e-8)
            eng.append(vol_weighted_momentum)
        else:
            eng.append(0)
        
        # 7. Options market indicators
        put_call_ratio = data[t, 64]
        implied_vol = data[t, 66]
        synthetic_short_cost = data[t, 65]
        
        # Options sentiment indicator (normalized)
        options_sentiment = put_call_ratio * implied_vol / max(np.mean([put_call_ratio, implied_vol]), 1e-8)
        eng.append(options_sentiment)
        
        # Synthetic short cost relative to implied volatility
        synthetic_short_relative = synthetic_short_cost / max(implied_vol, 1e-8)
        eng.append(synthetic_short_relative)
        
        # 8. Short squeeze potential indicators
        days_to_cover = data[t, 2]
        
        # Short squeeze potential (combines multiple factors)
        short_squeeze_potential = days_to_cover * short_interest_ratio * max(price_momentum_3d, 0)
        eng.append(short_squeeze_potential)
        
        # Short pressure indicator
        short_pressure = short_interest_ratio * put_call_ratio * days_to_cover
        eng.append(short_pressure)
        
        # 9. Liquidity measures
        avg_daily_volume = data[t, 1]
        liquidity_ratio = avg_daily_volume / max(shares_out, 1e-8)
        eng.append(liquidity_ratio)
        
        # 10. Composite trend indicator
        if len(close_prices) >= 10:
            # Simple moving averages
            sma5 = np.mean(close_prices[-5:])
            sma10 = np.mean(close_prices[-10:])
            trend_strength = (sma5 / max(sma10, 1e-8) - 1) * (1 + short_vol_ratio)
            eng.append(trend_strength)
        else:
            eng.append(0)
        
        # 11. Volatility-adjusted short interest
        if len(close_prices) > 5:
            returns = np.diff(close_prices[-6:]) / np.maximum(close_prices[-7:-1], 1e-8)
            vol = np.std(returns) if len(returns) > 0 else 0
            vol_adj_short = short_interest_ratio / max(vol, 1e-8)
            eng.append(vol_adj_short)
        else:
            eng.append(0)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent size
        if row.size < MAX_TOTAL:
            # Pad with zeros if needed
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            # Truncate if needed
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN and infinity values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (5,) (6,) 
⚠️ Function execution failed (attempt 4/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Construct features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    # Constants
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (highest importance)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        
        # Keep days to cover (important for short interest prediction)
        raw_keep.append(data[t, 2])  # days to cover
        
        # Keep options-related features (high importance in baseline)
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent close price (more compact than all OHLC)
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Extract short interest volume and total volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep shares outstanding
        raw_keep.append(data[t, 67])  # shares outstanding
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Interest Relative Features (improved from previous iteration)
        # Short interest to shares outstanding ratio (key predictor)
        short_interest = data[t, 0]
        shares_out = data[t, 67]
        short_interest_ratio = short_interest / max(shares_out, 1e-8)
        eng.append(short_interest_ratio)
        
        # Short interest to average volume ratio (alternative to days to cover)
        avg_volume = data[t, 1]
        si_to_avg_vol = short_interest / max(avg_volume, 1e-8)
        eng.append(si_to_avg_vol)
        
        # 2. Short Volume Dynamics (refined from previous iteration)
        if len(short_volume) > 0 and len(total_volume) > 0:
            # Short volume ratio (recent 5 days) - strong predictor from previous iteration
            recent_short_vol = np.sum(short_volume[-5:]) if len(short_volume) >= 5 else np.sum(short_volume)
            recent_total_vol = np.sum(total_volume[-5:]) if len(total_volume) >= 5 else np.sum(total_volume)
            short_vol_ratio = recent_short_vol / max(recent_total_vol, 1e-8)
            eng.append(short_vol_ratio)
            
            # Short volume acceleration (new feature)
            if len(short_volume) >= 10:
                recent_5d = np.mean(short_volume[-5:])
                previous_5d = np.mean(short_volume[-10:-5])
                short_vol_accel = (recent_5d / max(previous_5d, 1e-8)) - 1
                eng.append(short_vol_accel)
            else:
                eng.append(0)
        else:
            eng.extend([0, 0])
        
        # 3. Price Action Features (refined from previous iteration)
        if len(close_prices) > 5:
            # Price momentum (5-day) - strong predictor from previous iteration
            price_momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8) - 1)
            eng.append(price_momentum_5d)
            
            # Price volatility (normalized by price level)
            returns = np.diff(close_prices[-6:]) / np.maximum(close_prices[-7:-1], 1e-8)
            price_volatility = np.std(returns) if len(returns) > 0 else 0
            eng.append(price_volatility)
            
            # Price trend consistency (new feature)
            if len(close_prices) >= 10:
                # Count consistent up/down days
                price_diffs = np.diff(close_prices[-10:])
                pos_count = np.sum(price_diffs > 0)
                neg_count = np.sum(price_diffs < 0)
                trend_consistency = max(pos_count, neg_count) / 9  # 9 diffs from 10 prices
                eng.append(trend_consistency)
            else:
                eng.append(0)
        else:
            eng.extend([0, 0, 0])
        
        # 4. Volume-Price Relationship (improved from previous iteration)
        if len(close_prices) >= 5 and len(total_volume) >= 5:
            # Volume-weighted price momentum (new feature)
            vol_weighted_returns = 0
            total_vol = np.sum(total_volume[-5:])
            if total_vol > 0:
                for i in range(1, min(5, len(close_prices))):
                    if i < len(total_volume):
                        ret = (close_prices[-i] / max(close_prices[-i-1], 1e-8)) - 1
                        vol_weight = total_volume[-i] / max(total_vol, 1e-8)
                        vol_weighted_returns += ret * vol_weight
            eng.append(vol_weighted_returns)
            
            # Price-volume divergence (new feature)
            if len(close_prices) >= 5 and len(total_volume) >= 5:
                price_change = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1
                volume_change = (np.mean(total_volume[-2:]) / max(np.mean(total_volume[-5:-2]), 1e-8)) - 1
                # Positive when price and volume move in opposite directions
                price_vol_divergence = abs(price_change - volume_change)
                eng.append(price_vol_divergence)
            else:
                eng.append(0)
        else:
            eng.extend([0, 0])
        
        # 5. Options Market Indicators (enhanced from previous iteration)
        put_call_ratio = data[t, 64]
        implied_vol = data[t, 66]
        synthetic_short_cost = data[t, 65]
        
        # Options sentiment indicator (refined)
        options_sentiment = put_call_ratio * implied_vol
        eng.append(options_sentiment)
        
        # Synthetic short cost relative to implied volatility (new feature)
        synthetic_cost_to_vol = synthetic_short_cost / max(implied_vol, 1e-8)
        eng.append(synthetic_cost_to_vol)
        
        # 6. Technical Indicators (refined from previous iteration)
        if len(close_prices) >= 14:
            # RSI (Relative Strength Index) - strong predictor from previous iteration
            diff = np.diff(close_prices)
            gains = np.maximum(diff, 0)
            losses = np.maximum(-diff, 0)
            avg_gain = np.mean(gains[-14:])
            avg_loss = np.mean(losses[-14:])
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
            
            # Bollinger Band Width (new feature)
            if len(close_prices) >= 20:
                sma20 = np.mean(close_prices[-20:])
                std20 = np.std(close_prices[-20:])
                bb_width = (2 * std20) / max(sma20, 1e-8)  # Normalized by price level
                eng.append(bb_width)
                
                # Distance from upper Bollinger Band (new feature)
                upper_band = sma20 + (2 * std20)
                dist_to_upper = (upper_band - close_prices[-1]) / max(std20, 1e-8)  # Normalized by volatility
                eng.append(dist_to_upper)
            else:
                eng.extend([0, 0])
        else:
            eng.extend([0, 0, 0])
        
        # 7. Composite Indicators (refined from previous iteration)
        # Short squeeze potential indicator (improved)
        days_to_cover = data[t, 2]
        short_squeeze_potential = days_to_cover * short_interest_ratio * (1 + price_momentum_5d)
        eng.append(short_squeeze_potential)
        
        # Short pressure indicator (new feature)
        if len(short_volume) > 0 and len(total_volume) > 0:
            short_pressure = short_vol_ratio * implied_vol * days_to_cover
            eng.append(short_pressure)
        else:
            eng.append(0)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent size
        if row.size < MAX_TOTAL:
            # Pad with zeros if needed
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            # Truncate if needed
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN and infinity values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (5,) (6,) 
⚠️ Function execution failed (attempt 5/5)
⚠️ All function execution attempts failed, using fallback

🔧 Applying feature selection using fallback function...
Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 1: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 1 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 1}), (1, 'Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 1}), (2, 'Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 1})]
🔄 Retrying... (1/5)
Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 2: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 2 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 2}), (1, 'Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 2}), (2, 'Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 2})]
🔄 Retrying... (2/5)
Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 3: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 3 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 3}), (1, 'Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 3}), (2, 'Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 3})]
🔄 Retrying... (3/5)
Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 4: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 4 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 4}), (1, 'Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 4}), (2, 'Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 4})]
🔄 Retrying... (4/5)
Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 5: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 5 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 5}), (1, 'Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 5}), (2, 'Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 5})]
⚠️ All 5 attempts failed, using fallback function
🆘 Using fallback feature selection...
Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 1: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 1 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 1}), (1, 'Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 1}), (2, 'Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 1})]
🔄 Retrying... (1/5)
Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 2: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 2 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 2}), (1, 'Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 2}), (2, 'Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 2})]
🔄 Retrying... (2/5)
Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 3: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 3 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 3}), (1, 'Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 3}), (2, 'Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 3})]
🔄 Retrying... (3/5)
Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 4: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 4 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 4}), (1, 'Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 4}), (2, 'Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 4})]
🔄 Retrying... (4/5)
Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 5: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 5 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 5}), (1, 'Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 5}), (2, 'Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 5})]
⚠️ All 5 attempts failed, using fallback function
🆘 Using fallback feature selection...
Training data shape: (106, 4, 97) -> (106, 4, 15)
Validation data shape: (36, 4, 97) -> (36, 4, 15)
⚠️ Total errors encountered: 720
  Error 1: ValueError - cannot reshape array of size 95 into shape (15,4)
  Error 2: ValueError - cannot reshape array of size 95 into shape (15,4)
  Error 3: ValueError - cannot reshape array of size 95 into shape (15,4)

==================================================
Training Iteration 2 (fallback) (SVM)
==================================================
Training SVM model...

Iteration 2 (fallback) Performance:
MAE: 185314.5747
RMSE: 237949.1993
MAPE: 14.46%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 40
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0011, rank=1
   2. Feature_1_t3: importance=0.0009, rank=2
   3. Feature_0_t0: importance=0.0007, rank=3
   4. Feature_1_t1: importance=0.0006, rank=4
   5. Feature_1_t2: importance=0.0005, rank=5
🎉 IMPROVEMENT! MAPE improved by 0.88%

📈 Current best MAPE: 14.46%
🔄 Iterations without improvement: 0/5

🎯 Final Evaluation on Test Set (Unseen Data)
======================================================================
Using train+validation data for final model training to maximize data usage
Combined train+val data shape: (142, 4, 97)
Test data shape: (36, 4, 97)

📊 BASELINE EVALUATION (Raw Features, Train+Val → Test):

==================================================
Training Baseline Final (Raw Features) (SVM)
==================================================
Training SVM model...

Baseline Final (Raw Features) Performance:
MAE: 243256.9853
RMSE: 309317.1754
MAPE: 14.65%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 324
   • Highly important features (top 5%): 206

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t2: importance=0.0003, rank=1
   2. Feature_65_t2: importance=0.0003, rank=2
   3. Feature_2_t2: importance=0.0002, rank=3
   4. Feature_86_t2: importance=0.0002, rank=4
   5. Feature_84_t1: importance=0.0002, rank=5
   Baseline MAPE: 14.65%
   Baseline MAE: 243256.9853
   Baseline RMSE: 309317.1754
ℹ️ No feature engineering code available, using baseline for final evaluation

======================================================================
ITERATION PERFORMANCE SUMMARY
======================================================================

📊 VALIDATION MAPE TREND:
--------------------------------------------------------------------------------
Iteration  Model                     Validation MAPE Improvement from Last
--------------------------------------------------------------------------------
0          Baseline                  15.91           N/A                 
1          Iteration 1               15.35           +0.57%              
2          Iteration 2               14.46           +0.88%              
--------------------------------------------------------------------------------
🏆 Best: Iteration 2 - MAPE: 14.46%
✅ Saved ABM results to cache/ABM_iterative_results_enhanced.pkl
✅ Summary report saved for ABM

🎉 Process completed successfully for ABM!

================================================================================
PROCESSING TICKER 7/14: IART
================================================================================
🚀 Starting Iterative Agent-Based Feature Selection Process for IART
======================================================================
📊 Loading data from parquet file...
📊 Loading data for IART from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for IART...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data integrity validation passed
✅ Data loaded successfully!
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
Features per timestep: 97
Lookback window: 4

🎯 Step 1: Running baseline model on validation set...

==================================================
Training Baseline (All 97 Features) (SVM)
==================================================
Training SVM model...

Baseline (All 97 Features) Performance:
MAE: 352947.7297
RMSE: 529165.7714
MAPE: 10.03%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 291
   • Highly important features (top 5%): 166

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_95_t3: importance=0.0002, rank=1
   2. Feature_92_t3: importance=0.0002, rank=2
   3. Feature_96_t2: importance=0.0002, rank=3
   4. Feature_1_t3: importance=0.0002, rank=4
   5. Feature_65_t3: importance=0.0002, rank=5

📊 Baseline Performance: MAPE = 10.03%

🔄 Starting iterative improvement process...
Max iterations: 2
Min improvement threshold: 0.1%
Patience: 5 iterations without improvement

======================================================================
ITERATION 1
======================================================================
🤖 Calling Claude for iteration 1...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Start with essential raw features we want to keep
        raw_keep = [
            data[t, 0],  # short interest
            data[t, 1],  # average daily volume
            data[t, 2],  # days to cover
            data[t, 64],  # options_put_call_volume_ratio
            data[t, 65],  # options_synthetic_short_cost
            data[t, 66],  # options_avg_implied_volatility
            data[t, 67],  # shares_outstanding
        ]
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract short interest volume and total trading volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Initialize engineered features list
        eng = []
        
        # 1. Recent price momentum (last 5 days vs previous 5 days)
        recent_momentum = (np.mean(close_prices[-5:]) / max(np.mean(close_prices[-10:-5]), 1e-8)) - 1
        eng.append(recent_momentum)
        
        # 2. Volatility - normalized price range over last 10 days
        price_range = np.max(high_prices[-10:]) - np.min(low_prices[-10:])
        avg_price = np.mean(close_prices[-10:])
        normalized_range = price_range / max(avg_price, 1e-8)
        eng.append(normalized_range)
        
        # 3. Short volume ratio (short volume / total volume) - average over last 5 days
        short_ratio_5d = np.mean(short_volume[-5:] / np.maximum(total_volume[-5:], 1e-8))
        eng.append(short_ratio_5d)
        
        # 4. Short volume trend (ratio of recent 5 days to previous 5 days)
        recent_short_vol = np.mean(short_volume[-5:])
        prev_short_vol = np.mean(short_volume[-10:-5])
        short_vol_trend = recent_short_vol / max(prev_short_vol, 1e-8)
        eng.append(short_vol_trend)
        
        # 5. RSI (Relative Strength Index) - 14 days
        delta = np.diff(close_prices)
        if len(delta) > 0:
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain[-14:]) if len(gain) >= 14 else np.mean(gain)
            avg_loss = np.mean(loss[-14:]) if len(loss) >= 14 else np.mean(loss)
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Default value if not enough data
        eng.append(rsi)
        
        # 6. Short interest to shares outstanding ratio
        si_to_shares = data[t, 0] / max(data[t, 67], 1e-8)
        eng.append(si_to_shares)
        
        # 7. Volume trend (ratio of recent 5 days to previous 5 days)
        recent_vol = np.mean(total_volume[-5:])
        prev_vol = np.mean(total_volume[-10:-5])
        vol_trend = recent_vol / max(prev_vol, 1e-8)
        eng.append(vol_trend)
        
        # 8. Price to volume correlation (last 10 days)
        if len(close_prices) >= 10 and len(total_volume) >= 10:
            # Normalize data for correlation
            norm_price = (close_prices[-10:] - np.mean(close_prices[-10:])) / max(np.std(close_prices[-10:]), 1e-8)
            norm_vol = (total_volume[-10:] - np.mean(total_volume[-10:])) / max(np.std(total_volume[-10:]), 1e-8)
            # Calculate correlation
            price_vol_corr = np.mean(norm_price * norm_vol)
        else:
            price_vol_corr = 0
        eng.append(price_vol_corr)
        
        # 9. Short squeeze potential (days to cover * short interest ratio)
        short_squeeze_potential = data[t, 2] * (data[t, 0] / max(data[t, 67], 1e-8))
        eng.append(short_squeeze_potential)
        
        # 10. Price trend (simple moving average ratio)
        sma_5 = np.mean(close_prices[-5:]) if len(close_prices) >= 5 else np.mean(close_prices)
        sma_15 = np.mean(close_prices) if len(close_prices) >= 15 else np.mean(close_prices)
        price_trend = sma_5 / max(sma_15, 1e-8)
        eng.append(price_trend)
        
        # 11. Bollinger Band Width (volatility measure)
        if len(close_prices) >= 10:
            sma_10 = np.mean(close_prices[-10:])
            std_10 = np.std(close_prices[-10:])
            bb_width = (2 * std_10) / max(sma_10, 1e-8)
        else:
            bb_width = 0
        eng.append(bb_width)
        
        # 12. Short volume acceleration (change in short volume ratio)
        if len(short_volume) >= 10 and len(total_volume) >= 10:
            recent_short_ratio = np.mean(short_volume[-5:] / np.maximum(total_volume[-5:], 1e-8))
            prev_short_ratio = np.mean(short_volume[-10:-5] / np.maximum(total_volume[-10:-5], 1e-8))
            short_accel = recent_short_ratio - prev_short_ratio
        else:
            short_accel = 0
        eng.append(short_accel)
        
        # 13. Options implied volatility to historical volatility ratio
        hist_vol = np.std(np.log(close_prices[1:] / np.maximum(close_prices[:-1], 1e-8))) * np.sqrt(252)
        iv_to_hv_ratio = data[t, 66] / max(hist_vol, 1e-8)
        eng.append(iv_to_hv_ratio)
        
        # 14. Last day price change
        if len(close_prices) >= 2:
            last_day_change = (close_prices[-1] / max(close_prices[-2], 1e-8)) - 1
        else:
            last_day_change = 0
        eng.append(last_day_change)
        
        # 15. Average True Range (ATR) - volatility indicator
        if len(high_prices) >= 5 and len(low_prices) >= 5 and len(close_prices) >= 5:
            tr_values = []
            for i in range(1, 5):
                high_low = high_prices[-i] - low_prices[-i]
                high_close = abs(high_prices[-i] - close_prices[-(i+1)])
                low_close = abs(low_prices[-i] - close_prices[-(i+1)])
                tr = max(high_low, high_close, low_close)
                tr_values.append(tr)
            atr = np.mean(tr_values)
            normalized_atr = atr / max(close_prices[-1], 1e-8)
        else:
            normalized_atr = 0
        eng.append(normalized_atr)
        
        # 16. Short interest to average volume ratio
        si_to_avg_vol = data[t, 0] / max(data[t, 1], 1e-8)
        eng.append(si_to_avg_vol)
        
        # 17. Put-call ratio trend (compared to 15-day average)
        put_call_ratio = data[t, 64]
        avg_put_call_ratio = np.mean(data[max(0, t-14):t+1, 64]) if t > 0 else put_call_ratio
        put_call_trend = put_call_ratio / max(avg_put_call_ratio, 1e-8)
        eng.append(put_call_trend)
        
        # 18. Last day gap (open vs previous close)
        if len(open_prices) >= 1 and len(close_prices) >= 2:
            last_gap = (open_prices[-1] / max(close_prices[-2], 1e-8)) - 1
        else:
            last_gap = 0
        eng.append(last_gap)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaNs and infinities
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 1 (claude) (SVM)
==================================================
Training SVM model...

Iteration 1 (claude) Performance:
MAE: 315441.5742
RMSE: 494824.3179
MAPE: 9.20%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 96
   • Highly important features (top 5%): 85

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_19_t2: importance=0.0006, rank=1
   2. Feature_14_t3: importance=0.0005, rank=2
   3. Feature_17_t3: importance=0.0004, rank=3
   4. Feature_24_t1: importance=0.0004, rank=4
   5. Feature_4_t3: importance=0.0004, rank=5
💾 Saved code for iteration 1 to iteration_codes dictionary
🎉 IMPROVEMENT! MAPE improved by 0.83%

📈 Current best MAPE: 9.20%
🔄 Iterations without improvement: 0/5

======================================================================
ITERATION 2
======================================================================
🤖 Calling Claude for iteration 2...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Start with essential raw features we want to keep
        # Based on feature importance analysis, we're keeping the most important raw features
        raw_keep = [
            data[t, 0],  # short interest (always keep)
            data[t, 1],  # average daily volume (always keep)
            data[t, 2],  # days to cover (important for short squeeze potential)
            data[t, 64], # options_put_call_volume_ratio (important sentiment indicator)
            data[t, 65], # options_synthetic_short_cost (direct cost indicator)
            data[t, 66], # options_avg_implied_volatility (market expectation)
        ]
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract short interest volume and total trading volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Initialize engineered features list
        eng = []
        
        # 1. Short interest to shares outstanding ratio (high importance in previous iteration)
        # This is a key metric for short squeeze potential
        si_to_shares = data[t, 0] / max(data[t, 67], 1e-8)
        eng.append(si_to_shares)
        
        # 2. Short squeeze potential (days to cover * short interest ratio)
        # Combined metric that showed high importance
        short_squeeze_potential = data[t, 2] * si_to_shares
        eng.append(short_squeeze_potential)
        
        # 3. Short volume ratio (short volume / total volume) - average over last 5 days
        # Key indicator of short selling pressure
        short_ratio_5d = np.mean(short_volume[-5:] / np.maximum(total_volume[-5:], 1e-8))
        eng.append(short_ratio_5d)
        
        # 4. Short volume trend (ratio of recent 3 days to previous 3 days)
        # Refined from previous iteration to capture more recent changes
        recent_short_vol = np.mean(short_volume[-3:])
        prev_short_vol = np.mean(short_volume[-6:-3])
        short_vol_trend = recent_short_vol / max(prev_short_vol, 1e-8)
        eng.append(short_vol_trend)
        
        # 5. Short volume acceleration (2nd derivative)
        # New feature to capture acceleration in short selling
        if len(short_volume) >= 9:
            recent_trend = np.mean(short_volume[-3:]) / max(np.mean(short_volume[-6:-3]), 1e-8)
            prev_trend = np.mean(short_volume[-6:-3]) / max(np.mean(short_volume[-9:-6]), 1e-8)
            short_accel = recent_trend / max(prev_trend, 1e-8)
        else:
            short_accel = 1.0
        eng.append(short_accel)
        
        # 6. Recent price momentum (last 3 days vs previous 3 days)
        # Refined from previous iteration to capture more recent price action
        if len(close_prices) >= 6:
            recent_momentum = (np.mean(close_prices[-3:]) / max(np.mean(close_prices[-6:-3]), 1e-8)) - 1
        else:
            recent_momentum = 0
        eng.append(recent_momentum)
        
        # 7. Volatility - normalized price range over last 7 days
        # Refined window from previous iteration
        if len(high_prices) >= 7 and len(low_prices) >= 7:
            price_range = np.max(high_prices[-7:]) - np.min(low_prices[-7:])
            avg_price = np.mean(close_prices[-7:])
            normalized_range = price_range / max(avg_price, 1e-8)
        else:
            normalized_range = 0
        eng.append(normalized_range)
        
        # 8. RSI (Relative Strength Index) - 14 days
        # Kept from previous iteration due to importance
        delta = np.diff(close_prices)
        if len(delta) >= 14:
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain[-14:])
            avg_loss = np.mean(loss[-14:])
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Default value if not enough data
        eng.append(rsi)
        
        # 9. Volume trend (ratio of recent 3 days to previous 3 days)
        # Refined from previous iteration
        if len(total_volume) >= 6:
            recent_vol = np.mean(total_volume[-3:])
            prev_vol = np.mean(total_volume[-6:-3])
            vol_trend = recent_vol / max(prev_vol, 1e-8)
        else:
            vol_trend = 1.0
        eng.append(vol_trend)
        
        # 10. Price to volume correlation (last 7 days)
        # Refined window from previous iteration
        if len(close_prices) >= 7 and len(total_volume) >= 7:
            # Use simple covariance instead of correlation for stability
            norm_price = close_prices[-7:] - np.mean(close_prices[-7:])
            norm_vol = total_volume[-7:] - np.mean(total_volume[-7:])
            price_vol_cov = np.mean(norm_price * norm_vol)
            # Normalize by standard deviations
            price_std = max(np.std(close_prices[-7:]), 1e-8)
            vol_std = max(np.std(total_volume[-7:]), 1e-8)
            price_vol_corr = price_vol_cov / (price_std * vol_std)
        else:
            price_vol_corr = 0
        eng.append(price_vol_corr)
        
        # 11. Price trend (simple moving average ratio)
        # Kept from previous iteration due to importance
        if len(close_prices) >= 10:
            sma_3 = np.mean(close_prices[-3:])
            sma_10 = np.mean(close_prices[-10:])
            price_trend = sma_3 / max(sma_10, 1e-8)
        else:
            price_trend = 1.0
        eng.append(price_trend)
        
        # 12. Bollinger Band Width (volatility measure)
        # Refined from previous iteration
        if len(close_prices) >= 10:
            sma_10 = np.mean(close_prices[-10:])
            std_10 = np.std(close_prices[-10:])
            bb_width = (2 * std_10) / max(sma_10, 1e-8)
        else:
            bb_width = 0
        eng.append(bb_width)
        
        # 13. Options implied volatility to historical volatility ratio
        # Kept from previous iteration due to importance
        if len(close_prices) >= 10:
            returns = np.log(close_prices[1:] / np.maximum(close_prices[:-1], 1e-8))
            hist_vol = np.std(returns) * np.sqrt(252)
            iv_to_hv_ratio = data[t, 66] / max(hist_vol, 1e-8)
        else:
            iv_to_hv_ratio = 1.0
        eng.append(iv_to_hv_ratio)
        
        # 14. Last day price change
        # Kept from previous iteration due to importance
        if len(close_prices) >= 2:
            last_day_change = (close_prices[-1] / max(close_prices[-2], 1e-8)) - 1
        else:
            last_day_change = 0
        eng.append(last_day_change)
        
        # 15. Average True Range (ATR) - volatility indicator
        # Refined from previous iteration
        if len(high_prices) >= 5 and len(low_prices) >= 5 and len(close_prices) >= 6:
            tr_values = []
            for i in range(1, min(5, len(high_prices))):
                high_low = high_prices[-i] - low_prices[-i]
                high_close = abs(high_prices[-i] - close_prices[-(i+1)])
                low_close = abs(low_prices[-i] - close_prices[-(i+1)])
                tr = max(high_low, high_close, low_close)
                tr_values.append(tr)
            atr = np.mean(tr_values)
            normalized_atr = atr / max(close_prices[-1], 1e-8)
        else:
            normalized_atr = 0
        eng.append(normalized_atr)
        
        # 16. Short interest to average volume ratio
        # Kept from previous iteration due to importance
        si_to_avg_vol = data[t, 0] / max(data[t, 1], 1e-8)
        eng.append(si_to_avg_vol)
        
        # 17. Put-call ratio trend (compared to 7-day average)
        # Refined window from previous iteration
        put_call_ratio = data[t, 64]
        if t >= 7:
            avg_put_call_ratio = np.mean(data[t-7:t, 64])
            put_call_trend = put_call_ratio / max(avg_put_call_ratio, 1e-8)
        else:
            put_call_trend = 1.0
        eng.append(put_call_trend)
        
        # 18. MACD-like indicator (difference between fast and slow EMAs)
        # New feature for trend strength
        if len(close_prices) >= 12:
            ema_fast = np.mean(close_prices[-5:])
            ema_slow = np.mean(close_prices[-12:])
            macd = (ema_fast / max(ema_slow, 1e-8)) - 1
        else:
            macd = 0
        eng.append(macd)
        
        # 19. Short volume to total volume ratio change
        # New feature to capture changing short selling pressure
        if len(short_volume) >= 6 and len(total_volume) >= 6:
            recent_ratio = np.mean(short_volume[-3:]) / max(np.mean(total_volume[-3:]), 1e-8)
            prev_ratio = np.mean(short_volume[-6:-3]) / max(np.mean(total_volume[-6:-3]), 1e-8)
            ratio_change = recent_ratio - prev_ratio
        else:
            ratio_change = 0
        eng.append(ratio_change)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaNs and infinities
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 2 (claude) (SVM)
==================================================
Training SVM model...

Iteration 2 (claude) Performance:
MAE: 292860.7922
RMSE: 466217.2961
MAPE: 8.65%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 92
   • Highly important features (top 5%): 60

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_10_t1: importance=0.0008, rank=1
   2. Feature_9_t1: importance=0.0006, rank=2
   3. Feature_16_t3: importance=0.0004, rank=3
   4. Feature_10_t3: importance=0.0004, rank=4
   5. Feature_5_t2: importance=0.0004, rank=5
💾 Saved code for iteration 2 to iteration_codes dictionary
🎉 IMPROVEMENT! MAPE improved by 0.55%

📈 Current best MAPE: 8.65%
🔄 Iterations without improvement: 0/5

🎯 Final Evaluation on Test Set (Unseen Data)
======================================================================
Using train+validation data for final model training to maximize data usage
Combined train+val data shape: (142, 4, 97)
Test data shape: (36, 4, 97)

📊 BASELINE EVALUATION (Raw Features, Train+Val → Test):

==================================================
Training Baseline Final (Raw Features) (SVM)
==================================================
Training SVM model...

Baseline Final (Raw Features) Performance:
MAE: 433260.6397
RMSE: 572048.8168
MAPE: 10.76%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 137
   • Highly important features (top 5%): 70

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_92_t0: importance=0.0005, rank=1
   2. Feature_77_t2: importance=0.0004, rank=2
   3. Feature_65_t1: importance=0.0003, rank=3
   4. Feature_88_t2: importance=0.0003, rank=4
   5. Feature_63_t0: importance=0.0003, rank=5
   Baseline MAPE: 10.76%
   Baseline MAE: 433260.6397
   Baseline RMSE: 572048.8168

🔧 BEST MODEL EVALUATION (Processed Features, Train+Val → Test):
Applying best feature engineering to all data...
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Processed train+val shape: (142, 4, 25)
Processed test shape: (36, 4, 25)

==================================================
Training Best Model Final (Processed Features) (SVM)
==================================================
Training SVM model...

Best Model Final (Processed Features) Performance:
MAE: 392303.8434
RMSE: 518607.4096
MAPE: 10.27%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 64
   • Highly important features (top 5%): 37

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_9_t1: importance=0.0013, rank=1
   2. Feature_10_t1: importance=0.0012, rank=2
   3. Feature_6_t2: importance=0.0005, rank=3
   4. Feature_4_t1: importance=0.0004, rank=4
   5. Feature_24_t0: importance=0.0004, rank=5

📊 Best Model Test Set Performance:
   MAPE: 10.27%
   MAE: 392303.8434
   RMSE: 518607.4096

🎯 IMPROVEMENT OVER BASELINE:
   Baseline MAPE: 10.76%
   Best Model MAPE: 10.27%
   Absolute Improvement: 0.49%
   Relative Improvement: 4.6%

======================================================================
ITERATION PERFORMANCE SUMMARY
======================================================================

📊 VALIDATION MAPE TREND:
--------------------------------------------------------------------------------
Iteration  Model                     Validation MAPE Improvement from Last
--------------------------------------------------------------------------------
0          Baseline                  10.03           N/A                 
1          Iteration 1               9.20            +0.83%              
2          Iteration 2               8.65            +0.55%              
--------------------------------------------------------------------------------
🏆 Best: Iteration 2 - MAPE: 8.65%
✅ Saved IART results to cache/IART_iterative_results_enhanced.pkl
✅ Summary report saved for IART

🎉 Process completed successfully for IART!

================================================================================
PROCESSING TICKER 8/14: SRPT
================================================================================
🚀 Starting Iterative Agent-Based Feature Selection Process for SRPT
======================================================================
📊 Loading data from parquet file...
📊 Loading data for SRPT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SRPT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Error: Ticker 'SRPT' not found in short volume data.
Retrieved short volume data for 0 days
Creating short volume features with 15 days lookback...
No short volume data available, creating zero features
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data integrity validation passed
✅ Data loaded successfully!
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
Features per timestep: 97
Lookback window: 4

🎯 Step 1: Running baseline model on validation set...

==================================================
Training Baseline (All 97 Features) (SVM)
==================================================
Training SVM model...

Baseline (All 97 Features) Performance:
MAE: 519356.7616
RMSE: 763111.9647
MAPE: 9.38%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 77
   • Highly important features (top 5%): 31

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_66_t1: importance=0.0002, rank=1
   2. Feature_65_t3: importance=0.0002, rank=2
   3. Feature_1_t1: importance=0.0001, rank=3
   4. Feature_1_t2: importance=0.0001, rank=4
   5. Feature_65_t2: importance=0.0001, rank=5

📊 Baseline Performance: MAPE = 9.38%

🔄 Starting iterative improvement process...
Max iterations: 2
Min improvement threshold: 0.1%
Patience: 5 iterations without improvement

======================================================================
ITERATION 1
======================================================================
🤖 Calling Claude for iteration 1...
Error calling Claude API: Error code: 529 - {'type': 'error', 'error': {'type': 'overloaded_error', 'message': 'Overloaded'}, 'request_id': None}
❌ No response from Claude (attempt 1/5)
🔄 Retrying Claude API call...
Error calling Claude API: Error code: 529 - {'type': 'error', 'error': {'type': 'overloaded_error', 'message': 'Overloaded'}, 'request_id': None}
❌ No response from Claude (attempt 2/5)
🔄 Retrying Claude API call...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Constructs features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    # Constants
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Keep critical raw features
        # Short interest and average volume are highly important
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover
        
        # Keep top options-related features (high importance from previous iteration)
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        raw_keep.append(data[t, 67])  # shares_outstanding
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract short interest volume and total volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep only the most recent OHLC values instead of all 60 values
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Interest Ratio (Short Volume / Total Volume)
        # This measures the proportion of daily trading that is short selling
        short_ratio = np.zeros_like(short_volume)
        for i in range(len(short_volume)):
            denom = max(abs(total_volume[i]), 1e-8)
            short_ratio[i] = short_volume[i] / denom
        
        avg_short_ratio = np.mean(short_ratio)
        eng.append(avg_short_ratio)
        
        # 2. Short Interest Momentum (rate of change)
        # Captures the trend in short interest
        if t > 0:
            si_momentum = (data[t, 0] - data[t-1, 0]) / max(abs(data[t-1, 0]), 1e-8)
        else:
            si_momentum = 0.0
        eng.append(si_momentum)
        
        # 3. Price Volatility (standard deviation of returns)
        # Higher volatility often correlates with short interest changes
        if len(close_prices) > 1:
            returns = np.diff(close_prices) / np.maximum(close_prices[:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0.0
        else:
            volatility = 0.0
        eng.append(volatility)
        
        # 4. Price Trend (simple moving average ratio)
        # Captures recent price direction
        if len(close_prices) >= 5:
            sma5 = np.mean(close_prices[-5:])
            sma15 = np.mean(close_prices)
            price_trend = sma5 / max(abs(sma15), 1e-8)
        else:
            price_trend = 1.0
        eng.append(price_trend)
        
        # 5. Short Volume Trend
        # Captures the trend in daily short volume
        if len(short_volume) >= 5:
            short_vol_trend = np.mean(short_volume[-5:]) / max(abs(np.mean(short_volume)), 1e-8)
        else:
            short_vol_trend = 1.0
        eng.append(short_vol_trend)
        
        # 6. Short Interest to Float Ratio
        # Measures how much of the available float is being shorted
        shares_out = data[t, 67]
        si_float_ratio = data[t, 0] / max(abs(shares_out), 1e-8)
        eng.append(si_float_ratio)
        
        # 7. Relative Strength Index (RSI)
        # Momentum oscillator that measures speed and change of price movements
        if len(close_prices) >= 14:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain)
            avg_loss = np.mean(loss)
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50.0  # Neutral value when insufficient data
        eng.append(rsi)
        
        # 8. Bollinger Band Width
        # Measures volatility relative to recent price levels
        if len(close_prices) >= 5:
            sma = np.mean(close_prices[-5:])
            std = np.std(close_prices[-5:])
            bb_width = (2 * std) / max(abs(sma), 1e-8)
        else:
            bb_width = 0.0
        eng.append(bb_width)
        
        # 9. Options Implied Volatility to Historical Volatility Ratio
        # Compares market expectations to realized volatility
        implied_vol = data[t, 66]
        iv_hv_ratio = implied_vol / max(volatility, 1e-8)
        eng.append(iv_hv_ratio)
        
        # 10. Short Volume Acceleration
        # Measures the rate of change in short volume
        if t > 0 and len(short_volume) > 0 and len(data[t-1, 68:83]) > 0:
            prev_short_vol_avg = np.mean(data[t-1, 68:83])
            curr_short_vol_avg = np.mean(short_volume)
            short_vol_accel = (curr_short_vol_avg - prev_short_vol_avg) / max(abs(prev_short_vol_avg), 1e-8)
        else:
            short_vol_accel = 0.0
        eng.append(short_vol_accel)
        
        # 11. Price to Volume Correlation
        # Measures relationship between price movement and volume
        if len(close_prices) > 5 and len(total_volume) > 5:
            price_returns = np.diff(close_prices[-6:])
            vol_diff = np.diff(total_volume[-6:])
            if len(price_returns) > 0 and len(vol_diff) > 0 and np.std(price_returns) > 0 and np.std(vol_diff) > 0:
                pv_corr = np.corrcoef(price_returns, vol_diff)[0, 1]
                pv_corr = 0.0 if np.isnan(pv_corr) else pv_corr
            else:
                pv_corr = 0.0
        else:
            pv_corr = 0.0
        eng.append(pv_corr)
        
        # 12. Short Interest to Options Put/Call Ratio
        # Relates short interest to options market sentiment
        put_call_ratio = data[t, 64]
        si_options_ratio = data[t, 0] / max(abs(put_call_ratio), 1e-8)
        eng.append(si_options_ratio)
        
        # 13. Average True Range (ATR) - Volatility measure
        if len(open_prices) > 1:
            tr_values = []
            for i in range(1, len(open_prices)):
                high_low = high_prices[i] - low_prices[i]
                high_close = abs(high_prices[i] - close_prices[i-1])
                low_close = abs(low_prices[i] - close_prices[i-1])
                tr = max(high_low, high_close, low_close)
                tr_values.append(tr)
            atr = np.mean(tr_values) if tr_values else 0.0
        else:
            atr = 0.0
        eng.append(atr)
        
        # 14. Short Interest to ATR Ratio
        # Relates short interest to volatility
        si_atr_ratio = data[t, 0] / max(atr, 1e-8)
        eng.append(si_atr_ratio)
        
        # 15. Money Flow Index (MFI)
        # Volume-weighted RSI that indicates buying/selling pressure
        if len(close_prices) >= 14 and len(total_volume) >= 14:
            typical_price = (high_prices + low_prices + close_prices) / 3
            money_flow = typical_price * total_volume
            
            delta_tp = np.diff(typical_price)
            pos_flow = np.sum(money_flow[1:][delta_tp > 0])
            neg_flow = np.sum(money_flow[1:][delta_tp < 0])
            
            if neg_flow > 0:
                money_ratio = pos_flow / max(neg_flow, 1e-8)
                mfi = 100 - (100 / (1 + money_ratio))
            else:
                mfi = 100.0
        else:
            mfi = 50.0  # Neutral value when insufficient data
        eng.append(mfi)
        
        # 16. Short Interest Concentration
        # Measures how concentrated short interest is in recent days
        recent_short_vol = short_volume[-5:] if len(short_volume) >= 5 else short_volume
        total_recent = np.sum(recent_short_vol)
        max_day = np.max(recent_short_vol) if len(recent_short_vol) > 0 else 0
        si_concentration = max_day / max(total_recent, 1e-8)
        eng.append(si_concentration)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: index 14 is out of bounds for axis 0 with size 14
⚠️ Function execution failed (attempt 3/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Constructs features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    # Constants
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (highest importance from baseline)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover
        
        # Keep high importance options data
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        raw_keep.append(data[t, 67])  # shares_outstanding
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract short interest volume and total volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep only the most recent OHLC values instead of all 60
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Calculate MAX_NEW after determining raw_keep
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Price momentum and volatility features
        if len(close_prices) > 1:
            # Price momentum (5-day)
            price_momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1.0
            eng.append(price_momentum_5d)
            
            # Price volatility (standard deviation of returns)
            returns = np.diff(close_prices) / np.maximum(close_prices[:-1], 1e-8)
            price_volatility = np.std(returns) if len(returns) > 0 else 0.0
            eng.append(price_volatility)
            
            # Average True Range (ATR) - volatility indicator
            true_ranges = []
            for i in range(1, len(close_prices)):
                high_low = high_prices[i] - low_prices[i]
                high_close_prev = abs(high_prices[i] - close_prices[i-1])
                low_close_prev = abs(low_prices[i] - close_prices[i-1])
                true_range = max(high_low, high_close_prev, low_close_prev)
                true_ranges.append(true_range)
            atr = np.mean(true_ranges) if true_ranges else 0.0
            eng.append(atr)
        else:
            eng.extend([0.0, 0.0, 0.0])  # Placeholders if not enough data
        
        # 2. Volume-based features
        if len(total_volume) > 0:
            # Short volume ratio (short volume / total volume)
            short_ratio = np.mean(short_volume / np.maximum(total_volume, 1e-8))
            eng.append(short_ratio)
            
            # Short volume trend (ratio of recent to earlier short volume)
            if len(short_volume) >= 10:
                recent_short = np.mean(short_volume[-5:])
                earlier_short = np.mean(short_volume[-10:-5])
                short_trend = recent_short / max(earlier_short, 1e-8)
                eng.append(short_trend)
            else:
                eng.append(0.0)
            
            # Volume trend (recent vs earlier volume)
            if len(total_volume) >= 10:
                recent_vol = np.mean(total_volume[-5:])
                earlier_vol = np.mean(total_volume[-10:-5])
                vol_trend = recent_vol / max(earlier_vol, 1e-8)
                eng.append(vol_trend)
            else:
                eng.append(0.0)
        else:
            eng.extend([0.0, 0.0, 0.0])  # Placeholders
        
        # 3. Short interest relative to shares outstanding
        si_to_shares = data[t, 0] / max(data[t, 67], 1e-8)
        eng.append(si_to_shares)
        
        # 4. Options-based features
        # Synthetic short cost to implied volatility ratio
        synth_cost_to_iv = data[t, 65] / max(data[t, 66], 1e-8)
        eng.append(synth_cost_to_iv)
        
        # 5. Technical indicators
        if len(close_prices) >= 14:
            # RSI (Relative Strength Index)
            diff = np.diff(close_prices)
            gains = np.maximum(diff, 0)
            losses = np.maximum(-diff, 0)
            avg_gain = np.mean(gains[-14:]) if len(gains) >= 14 else np.mean(gains)
            avg_loss = np.mean(losses[-14:]) if len(losses) >= 14 else np.mean(losses)
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
            
            # MACD Line (12-day EMA - 26-day EMA)
            if len(close_prices) >= 26:
                ema_12 = np.mean(close_prices[-12:])  # Simplified EMA
                ema_26 = np.mean(close_prices[-26:])
                macd = ema_12 - ema_26
                eng.append(macd)
            else:
                eng.append(0.0)
        else:
            eng.extend([0.0, 0.0])  # Placeholders
        
        # 6. Price range features
        if len(high_prices) > 0 and len(low_prices) > 0:
            # Normalized price range
            price_range = (high_prices[-1] - low_prices[-1]) / max(close_prices[-1], 1e-8)
            eng.append(price_range)
        else:
            eng.append(0.0)
        
        # 7. Combined metrics
        # Short interest to days to cover ratio
        si_to_dtc = data[t, 0] / max(data[t, 2], 1e-8)
        eng.append(si_to_dtc)
        
        # Short interest to volume ratio
        si_to_vol = data[t, 0] / max(data[t, 1], 1e-8)
        eng.append(si_to_vol)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent width by padding or truncating
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (15,) (14,) 
⚠️ Function execution failed (attempt 4/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Constructs features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    # Constants
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (most important from baseline)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover
        
        # Keep options data (high importance in baseline)
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        raw_keep.append(data[t, 67])  # shares_outstanding
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract short interest volume and total volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Interest Ratio (Short Volume / Total Volume)
        # Provides insight into short selling intensity relative to overall trading
        short_ratio = np.zeros_like(short_volume)
        for i in range(len(short_volume)):
            denom = max(abs(total_volume[i]), 1e-8)
            short_ratio[i] = short_volume[i] / denom
        
        eng.append(np.mean(short_ratio))  # Average short ratio
        
        # 2. Price Momentum (5-day)
        # Captures recent price trend direction and strength
        if len(close_prices) >= 5:
            momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1.0
            eng.append(momentum_5d)
        else:
            eng.append(0.0)
        
        # 3. Price Volatility (standard deviation of returns)
        # Measures price instability which often correlates with short interest changes
        if len(close_prices) >= 2:
            returns = np.diff(close_prices) / np.maximum(close_prices[:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0.0
            eng.append(volatility)
        else:
            eng.append(0.0)
        
        # 4. OHLC Summary - Last day's range relative to price
        # Compact representation of recent price action
        if len(close_prices) > 0:
            last_range = (high_prices[-1] - low_prices[-1]) / max(close_prices[-1], 1e-8)
            eng.append(last_range)
        else:
            eng.append(0.0)
        
        # 5. Volume Trend (5-day)
        # Captures changes in trading activity
        if len(total_volume) >= 5:
            vol_trend = (np.mean(total_volume[-3:]) / max(np.mean(total_volume[-5:-3]), 1e-8)) - 1.0
            eng.append(vol_trend)
        else:
            eng.append(0.0)
        
        # 6. Short Volume Trend (5-day)
        # Captures changes in short selling activity
        if len(short_volume) >= 5:
            short_vol_trend = (np.mean(short_volume[-3:]) / max(np.mean(short_volume[-5:-3]), 1e-8)) - 1.0
            eng.append(short_vol_trend)
        else:
            eng.append(0.0)
        
        # 7. RSI (Relative Strength Index) - 14 day
        # Technical indicator that measures momentum
        if len(close_prices) >= 14:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            
            avg_gain = np.mean(gain)
            avg_loss = np.mean(loss)
            
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
        else:
            eng.append(50.0)  # Neutral RSI value
        
        # 8. Short Interest to Float Ratio
        # Measures short interest relative to available shares
        shares_out = max(data[t, 67], 1e-8)
        short_to_float = data[t, 0] / shares_out
        eng.append(short_to_float)
        
        # 9. Short Volume Acceleration
        # Captures rate of change in short selling activity
        if len(short_volume) >= 5:
            short_vol_accel = (short_volume[-1] / max(np.mean(short_volume[-5:]), 1e-8)) - 1.0
            eng.append(short_vol_accel)
        else:
            eng.append(0.0)
        
        # 10. Price to Volume Ratio
        # Measures price movement relative to volume (efficiency)
        if len(close_prices) > 0 and len(total_volume) > 0:
            price_vol_ratio = close_prices[-1] / max(np.mean(total_volume[-5:]), 1e-8)
            eng.append(price_vol_ratio)
        else:
            eng.append(0.0)
        
        # 11. Bollinger Band Width
        # Measures volatility and potential mean reversion
        if len(close_prices) >= 20:
            sma20 = np.mean(close_prices[-20:])
            std20 = np.std(close_prices[-20:])
            bb_width = (2 * std20) / max(sma20, 1e-8)
            eng.append(bb_width)
        else:
            eng.append(0.0)
        
        # 12. Options Implied Volatility to Historical Volatility Ratio
        # Compares market expectations to realized volatility
        if len(close_prices) >= 10:
            hist_vol = np.std(np.diff(close_prices[-10:]) / np.maximum(close_prices[-11:-1], 1e-8))
            implied_vol = data[t, 66]
            iv_hv_ratio = implied_vol / max(hist_vol, 1e-8)
            eng.append(iv_hv_ratio)
        else:
            eng.append(1.0)
        
        # 13. Short Interest Momentum (change in short interest)
        # Captures trend in short interest
        if t > 0:
            si_momentum = (data[t, 0] / max(data[t-1, 0], 1e-8)) - 1.0
            eng.append(si_momentum)
        else:
            eng.append(0.0)
        
        # 14. Put-Call Ratio Trend
        # Captures changes in options sentiment
        if t > 0:
            pc_ratio_trend = (data[t, 64] / max(data[t-1, 64], 1e-8)) - 1.0
            eng.append(pc_ratio_trend)
        else:
            eng.append(0.0)
        
        # 15. Short Cost Trend
        # Captures changes in cost to short
        if t > 0:
            short_cost_trend = (data[t, 65] / max(data[t-1, 65], 1e-8)) - 1.0
            eng.append(short_cost_trend)
        else:
            eng.append(0.0)
        
        # 16. Average True Range (ATR)
        # Measures volatility considering gaps
        if len(close_prices) >= 2:
            true_ranges = []
            for i in range(1, len(close_prices)):
                tr1 = high_prices[i] - low_prices[i]
                tr2 = abs(high_prices[i] - close_prices[i-1])
                tr3 = abs(low_prices[i] - close_prices[i-1])
                true_ranges.append(max(tr1, tr2, tr3))
            
            atr = np.mean(true_ranges) if true_ranges else 0.0
            eng.append(atr)
        else:
            eng.append(0.0)
        
        # 17. Days to Cover Trend
        # Captures changes in short covering difficulty
        if t > 0:
            dtc_trend = (data[t, 2] / max(data[t-1, 2], 1e-8)) - 1.0
            eng.append(dtc_trend)
        else:
            eng.append(0.0)
        
        # 18. Short Volume to Average Volume Ratio
        # Compares recent short volume to historical average volume
        if len(short_volume) > 0:
            short_to_avg_vol = short_volume[-1] / max(data[t, 1], 1e-8)
            eng.append(short_to_avg_vol)
        else:
            eng.append(0.0)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN and infinity values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: index 14 is out of bounds for axis 0 with size 14
⚠️ Function execution failed (attempt 5/5)
⚠️ All function execution attempts failed, using fallback

🔧 Applying feature selection using fallback function...
Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 1: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 1 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 1}), (1, 'Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 1}), (2, 'Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 1})]
🔄 Retrying... (1/5)
Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 2: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 2 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 2}), (1, 'Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 2}), (2, 'Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 2})]
🔄 Retrying... (2/5)
Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 3: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 3 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 3}), (1, 'Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 3}), (2, 'Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 3})]
🔄 Retrying... (3/5)
Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 4: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 4 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 4}), (1, 'Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 4}), (2, 'Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 4})]
🔄 Retrying... (4/5)
Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 5: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 5 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 5}), (1, 'Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 5}), (2, 'Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 5})]
⚠️ All 5 attempts failed, using fallback function
🆘 Using fallback feature selection...
Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 1: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 1 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 1}), (1, 'Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 1}), (2, 'Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 1})]
🔄 Retrying... (1/5)
Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 2: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 2 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 2}), (1, 'Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 2}), (2, 'Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 2})]
🔄 Retrying... (2/5)
Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 3: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 3 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 3}), (1, 'Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 3}), (2, 'Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 3})]
🔄 Retrying... (3/5)
Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 4: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 4 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 4}), (1, 'Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 4}), (2, 'Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 4})]
🔄 Retrying... (4/5)
Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 5: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 5 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 5}), (1, 'Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 5}), (2, 'Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 5})]
⚠️ All 5 attempts failed, using fallback function
🆘 Using fallback feature selection...
Training data shape: (106, 4, 97) -> (106, 4, 15)
Validation data shape: (36, 4, 97) -> (36, 4, 15)
⚠️ Total errors encountered: 720
  Error 1: ValueError - cannot reshape array of size 95 into shape (15,4)
  Error 2: ValueError - cannot reshape array of size 95 into shape (15,4)
  Error 3: ValueError - cannot reshape array of size 95 into shape (15,4)

==================================================
Training Iteration 1 (fallback) (SVM)
==================================================
Training SVM model...

Iteration 1 (fallback) Performance:
MAE: 575701.8576
RMSE: 821008.8301
MAPE: 10.60%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0002, rank=1
   2. Feature_2_t0: importance=0.0002, rank=2
   3. Feature_6_t3: importance=0.0002, rank=3
   4. Feature_1_t2: importance=0.0002, rank=4
   5. Feature_1_t1: importance=0.0001, rank=5
📊 No significant improvement. Change: -1.22%

📈 Current best MAPE: 9.38%
🔄 Iterations without improvement: 1/5

======================================================================
ITERATION 2
======================================================================
🤖 Calling Claude for iteration 2...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (critical features from importance analysis)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover
        
        # Keep high-importance options data
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Extract OHLC data for the last 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep only the most recent OHLC values instead of all 60 values
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Calculate MAX_NEW after determining raw features to keep
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (Short Volume / Total Volume) - recent trend
        short_volume_ratio = np.zeros(5)
        for i in range(5):
            idx = 14 - i  # Most recent 5 days
            if idx >= 0 and total_volume[idx] > 1e-8:
                short_volume_ratio[i] = short_volume[idx] / max(total_volume[idx], 1e-8)
        
        # Average short volume ratio (last 5 days)
        avg_short_volume_ratio = np.mean(short_volume_ratio)
        eng.append(avg_short_volume_ratio)
        
        # 2. Short Volume Ratio Trend (change over last 5 days)
        if len(short_volume_ratio) >= 5:
            short_ratio_trend = short_volume_ratio[0] - short_volume_ratio[-1]
            eng.append(short_ratio_trend)
        else:
            eng.append(0.0)
        
        # 3. Price Momentum (5-day)
        if len(close_prices) >= 5:
            price_momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1.0
            eng.append(price_momentum_5d)
        else:
            eng.append(0.0)
        
        # 4. Price Momentum (10-day)
        if len(close_prices) >= 10:
            price_momentum_10d = (close_prices[-1] / max(close_prices[-10], 1e-8)) - 1.0
            eng.append(price_momentum_10d)
        else:
            eng.append(0.0)
        
        # 5. Volatility (standard deviation of returns over last 10 days)
        if len(close_prices) >= 10:
            returns = np.diff(close_prices[-10:]) / np.maximum(close_prices[-11:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0
            eng.append(volatility)
        else:
            eng.append(0.0)
        
        # 6. Average True Range (ATR) - volatility indicator
        atr_values = []
        for i in range(1, min(10, len(high_prices))):
            true_range = max(
                high_prices[-i] - low_prices[-i],
                abs(high_prices[-i] - close_prices[-i-1]),
                abs(low_prices[-i] - close_prices[-i-1])
            )
            atr_values.append(true_range)
        atr = np.mean(atr_values) if atr_values else 0
        eng.append(atr)
        
        # 7. RSI (Relative Strength Index) - 14 period
        if len(close_prices) >= 15:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            
            avg_gain = np.mean(gain[-14:]) if len(gain) >= 14 else np.mean(gain)
            avg_loss = np.mean(loss[-14:]) if len(loss) >= 14 else np.mean(loss)
            
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
        else:
            eng.append(50.0)  # Neutral RSI value
        
        # 8. Short Interest to Float Ratio
        shares_outstanding = data[t, 67]
        short_interest_to_float = data[t, 0] / max(shares_outstanding, 1e-8)
        eng.append(short_interest_to_float)
        
        # 9. Short Interest to Volume Ratio
        short_interest_to_volume = data[t, 0] / max(data[t, 1], 1e-8)
        eng.append(short_interest_to_volume)
        
        # 10. Short Interest Growth Rate (if we have previous data)
        if t > 0:
            prev_short_interest = data[t-1, 0]
            short_interest_growth = (data[t, 0] / max(prev_short_interest, 1e-8)) - 1.0
            eng.append(short_interest_growth)
        else:
            eng.append(0.0)
        
        # 11. Price to Volume Ratio (normalized)
        price_to_volume = close_prices[-1] / max(data[t, 1], 1e-8)
        eng.append(price_to_volume)
        
        # 12. VWAP (Volume Weighted Average Price) - last 5 days
        if len(close_prices) >= 5 and len(total_volume) >= 5:
            vwap_num = np.sum(close_prices[-5:] * total_volume[-5:])
            vwap_den = np.sum(total_volume[-5:])
            vwap = vwap_num / max(vwap_den, 1e-8)
            eng.append(vwap)
        else:
            eng.append(0.0)
        
        # 13. Price Distance from 10-day SMA
        if len(close_prices) >= 10:
            sma_10 = np.mean(close_prices[-10:])
            price_sma_distance = (close_prices[-1] / max(sma_10, 1e-8)) - 1.0
            eng.append(price_sma_distance)
        else:
            eng.append(0.0)
        
        # 14. Bollinger Band Width (volatility measure)
        if len(close_prices) >= 10:
            sma_10 = np.mean(close_prices[-10:])
            std_10 = np.std(close_prices[-10:])
            bb_width = (2 * std_10) / max(sma_10, 1e-8)
            eng.append(bb_width)
        else:
            eng.append(0.0)
        
        # 15. Options Implied Volatility to Historical Volatility Ratio
        if volatility > 1e-8:
            iv_to_hv_ratio = data[t, 66] / max(volatility, 1e-8)
            eng.append(iv_to_hv_ratio)
        else:
            eng.append(0.0)
        
        # 16. Short Cost to Volatility Ratio
        short_cost_to_vol = data[t, 65] / max(data[t, 66], 1e-8)
        eng.append(short_cost_to_vol)
        
        # 17. Short Interest Acceleration (if we have enough history)
        if t >= 2:
            prev_growth = (data[t-1, 0] / max(data[t-2, 0], 1e-8)) - 1.0
            current_growth = (data[t, 0] / max(data[t-1, 0], 1e-8)) - 1.0
            short_interest_accel = current_growth - prev_growth
            eng.append(short_interest_accel)
        else:
            eng.append(0.0)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: index 14 is out of bounds for axis 0 with size 14
⚠️ Function execution failed (attempt 1/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    result = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (most important from previous iterations)
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        raw_keep.append(short_interest)
        raw_keep.append(avg_volume)
        raw_keep.append(days_to_cover)
        
        # Extract OHLC data
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values instead of all 60 values
        raw_keep.append(close_prices[-1])  # Most recent close
        
        # Options data (high importance in previous iterations)
        put_call_ratio = data[t, 64]
        synthetic_short_cost = data[t, 65]
        implied_volatility = data[t, 66]
        
        raw_keep.append(put_call_ratio)
        raw_keep.append(synthetic_short_cost)
        raw_keep.append(implied_volatility)
        
        # Shares outstanding
        shares_outstanding = data[t, 67]
        raw_keep.append(shares_outstanding)
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (daily short volume / total volume)
        # This is a key indicator of short selling pressure
        short_volume_ratio = np.zeros_like(short_volume)
        for i in range(len(short_volume)):
            den = max(abs(total_volume[i]), 1e-8)
            short_volume_ratio[i] = short_volume[i] / den
        
        avg_short_volume_ratio = np.mean(short_volume_ratio)
        eng.append(avg_short_volume_ratio)
        
        # 2. Recent trend in short volume ratio (last 5 days vs previous 10)
        if len(short_volume_ratio) >= 15:
            recent_svr = np.mean(short_volume_ratio[-5:])
            previous_svr = np.mean(short_volume_ratio[-15:-5])
            den = max(abs(previous_svr), 1e-8)
            svr_trend = recent_svr / den - 1
            eng.append(svr_trend)
        else:
            eng.append(0.0)
        
        # 3. Price momentum (5-day)
        if len(close_prices) >= 5:
            price_momentum_5d = close_prices[-1] / max(abs(close_prices[-5]), 1e-8) - 1
            eng.append(price_momentum_5d)
        else:
            eng.append(0.0)
        
        # 4. Price momentum (10-day)
        if len(close_prices) >= 10:
            price_momentum_10d = close_prices[-1] / max(abs(close_prices[-10]), 1e-8) - 1
            eng.append(price_momentum_10d)
        else:
            eng.append(0.0)
        
        # 5. Volatility (standard deviation of returns)
        if len(close_prices) >= 2:
            returns = np.diff(close_prices) / np.maximum(abs(close_prices[:-1]), 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0
            eng.append(volatility)
        else:
            eng.append(0.0)
        
        # 6. Average True Range (ATR) - volatility indicator
        atr_values = []
        for i in range(1, len(ohlc)):
            tr1 = ohlc[i, 1] - ohlc[i, 2]  # High - Low
            tr2 = abs(ohlc[i, 1] - ohlc[i-1, 3])  # |High - Previous Close|
            tr3 = abs(ohlc[i, 2] - ohlc[i-1, 3])  # |Low - Previous Close|
            true_range = max(tr1, tr2, tr3)
            atr_values.append(true_range)
        
        atr = np.mean(atr_values) if atr_values else 0
        eng.append(atr)
        
        # 7. Short interest to float ratio
        short_interest_to_float = short_interest / max(abs(shares_outstanding), 1e-8)
        eng.append(short_interest_to_float)
        
        # 8. Short volume acceleration (rate of change in short volume)
        if len(short_volume) >= 5:
            recent_short_vol = np.mean(short_volume[-3:])
            prev_short_vol = np.mean(short_volume[-5:-3])
            den = max(abs(prev_short_vol), 1e-8)
            short_vol_accel = recent_short_vol / den - 1
            eng.append(short_vol_accel)
        else:
            eng.append(0.0)
        
        # 9. Relative Strength Index (RSI)
        if len(close_prices) >= 14:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            
            avg_gain = np.mean(gain[-14:])
            avg_loss = np.mean(loss[-14:])
            
            den = max(abs(avg_loss), 1e-8)
            rs = avg_gain / den
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
        else:
            eng.append(50.0)  # Neutral RSI value
        
        # 10. OHLC price range relative to close
        if len(close_prices) > 0:
            recent_high = high_prices[-1]
            recent_low = low_prices[-1]
            recent_close = close_prices[-1]
            
            den = max(abs(recent_close), 1e-8)
            price_range_ratio = (recent_high - recent_low) / den
            eng.append(price_range_ratio)
        else:
            eng.append(0.0)
        
        # 11. Volume trend (recent vs previous)
        if len(total_volume) >= 10:
            recent_volume = np.mean(total_volume[-5:])
            previous_volume = np.mean(total_volume[-10:-5])
            den = max(abs(previous_volume), 1e-8)
            volume_trend = recent_volume / den - 1
            eng.append(volume_trend)
        else:
            eng.append(0.0)
        
        # 12. Implied volatility to historical volatility ratio
        if len(returns) > 0:
            hist_vol = np.std(returns) * np.sqrt(252)  # Annualized
            den = max(abs(hist_vol), 1e-8)
            iv_hv_ratio = implied_volatility / den
            eng.append(iv_hv_ratio)
        else:
            eng.append(0.0)
        
        # 13. Short cost vs price momentum correlation
        # Higher correlation might indicate informed short selling
        if len(close_prices) >= 5:
            price_changes = np.diff(close_prices[-5:])
            if len(price_changes) > 0 and synthetic_short_cost != 0:
                price_direction = 1 if np.mean(price_changes) > 0 else -1
                short_cost_signal = synthetic_short_cost * price_direction
                eng.append(short_cost_signal)
            else:
                eng.append(0.0)
        else:
            eng.append(0.0)
        
        # 14. Bollinger Band width (volatility measure)
        if len(close_prices) >= 20:
            sma20 = np.mean(close_prices[-20:])
            std20 = np.std(close_prices[-20:])
            bb_width = (2 * std20) / max(abs(sma20), 1e-8)
            eng.append(bb_width)
        else:
            eng.append(0.0)
        
        # 15. Short interest momentum
        # This captures the trend in short interest
        if t > 0:
            prev_short_interest = data[t-1, 0]
            den = max(abs(prev_short_interest), 1e-8)
            short_interest_momentum = short_interest / den - 1
            eng.append(short_interest_momentum)
        else:
            eng.append(0.0)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent size (pad or truncate)
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        result[t] = row
    
    # Handle NaN and infinity values
    result = np.nan_to_num(result, nan=0.0, posinf=0.0, neginf=0.0)
    
    return result
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: index 14 is out of bounds for axis 0 with size 14
⚠️ Function execution failed (attempt 2/5)
🔄 Retrying function execution with error feedback...
Error calling Claude API: Error code: 529 - {'type': 'error', 'error': {'type': 'overloaded_error', 'message': 'Overloaded'}, 'request_id': None}
❌ No response from Claude (attempt 3/5)
🔄 Retrying Claude API call...
Error calling Claude API: Error code: 529 - {'type': 'error', 'error': {'type': 'overloaded_error', 'message': 'Overloaded'}, 'request_id': None}
❌ No response from Claude (attempt 4/5)
🔄 Retrying Claude API call...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    result = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume as they showed high importance
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        raw_keep.append(short_interest)
        raw_keep.append(avg_volume)
        raw_keep.append(days_to_cover)
        
        # Extract OHLC data
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values instead of all 60 values
        raw_keep.append(close_prices[-1])  # Most recent close
        
        # Options data showed high importance in previous iterations
        options_put_call_ratio = data[t, 64]
        options_synthetic_short_cost = data[t, 65]
        options_avg_implied_volatility = data[t, 66]
        
        raw_keep.append(options_put_call_ratio)
        raw_keep.append(options_synthetic_short_cost)
        raw_keep.append(options_avg_implied_volatility)
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep shares outstanding as it's important for relative measures
        shares_outstanding = data[t, 67]
        raw_keep.append(shares_outstanding)
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (daily short volume / daily total volume)
        # This is a key indicator of short selling pressure
        short_volume_ratio = np.zeros_like(short_volume)
        for i in range(len(short_volume)):
            den = max(abs(total_volume[i]), 1e-8)
            short_volume_ratio[i] = short_volume[i] / den
        
        # Average short volume ratio over the past 15 days
        avg_short_volume_ratio = np.mean(short_volume_ratio)
        eng.append(avg_short_volume_ratio)
        
        # 2. Recent trend in short volume ratio (last 5 days vs previous 10)
        if len(short_volume_ratio) >= 15:
            recent_svr = np.mean(short_volume_ratio[-5:])
            previous_svr = np.mean(short_volume_ratio[-15:-5])
            den = max(abs(previous_svr), 1e-8)
            svr_trend = recent_svr / den - 1
            eng.append(svr_trend)
        else:
            eng.append(0.0)
        
        # 3. Volatility measure: Average True Range (ATR)
        tr_values = []
        for i in range(1, len(close_prices)):
            high_low = high_prices[i] - low_prices[i]
            high_close_prev = abs(high_prices[i] - close_prices[i-1])
            low_close_prev = abs(low_prices[i] - close_prices[i-1])
            tr = max(high_low, high_close_prev, low_close_prev)
            tr_values.append(tr)
        
        atr = np.mean(tr_values) if tr_values else 0
        eng.append(atr)
        
        # 4. Price momentum: Rate of change over 5 days
        if len(close_prices) >= 5:
            den = max(abs(close_prices[-5]), 1e-8)
            price_momentum = (close_prices[-1] / den) - 1
            eng.append(price_momentum)
        else:
            eng.append(0.0)
        
        # 5. Short interest relative to shares outstanding
        den = max(abs(shares_outstanding), 1e-8)
        relative_short_interest = short_interest / den
        eng.append(relative_short_interest)
        
        # 6. Short interest to volume ratio
        den = max(abs(avg_volume), 1e-8)
        si_volume_ratio = short_interest / den
        eng.append(si_volume_ratio)
        
        # 7. Bollinger Band Width (volatility measure)
        if len(close_prices) >= 5:
            sma = np.mean(close_prices[-5:])
            std = np.std(close_prices[-5:])
            bb_width = (2 * std) / max(abs(sma), 1e-8)
            eng.append(bb_width)
        else:
            eng.append(0.0)
        
        # 8. RSI (Relative Strength Index) - momentum oscillator
        if len(close_prices) >= 14:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain)
            avg_loss = np.mean(loss)
            den = max(abs(avg_loss), 1e-8)
            rs = avg_gain / den
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
        else:
            eng.append(50.0)  # Neutral RSI value
        
        # 9. VWAP (Volume Weighted Average Price)
        if len(close_prices) == len(total_volume) and len(close_prices) > 0:
            vwap = np.sum(close_prices * total_volume) / max(np.sum(total_volume), 1e-8)
            eng.append(vwap)
        else:
            eng.append(0.0)
        
        # 10. Price to VWAP ratio (current price relative to VWAP)
        if len(close_prices) > 0 and 'vwap' in locals() and vwap != 0:
            price_to_vwap = close_prices[-1] / max(abs(vwap), 1e-8)
            eng.append(price_to_vwap)
        else:
            eng.append(1.0)
        
        # 11. Options implied volatility to historical volatility ratio
        if len(close_prices) >= 10:
            returns = np.diff(close_prices) / close_prices[:-1]
            hist_vol = np.std(returns) * np.sqrt(252)  # Annualized
            den = max(abs(hist_vol), 1e-8)
            iv_hv_ratio = options_avg_implied_volatility / den
            eng.append(iv_hv_ratio)
        else:
            eng.append(1.0)
        
        # 12. Short cost vs. volatility ratio
        den = max(abs(options_avg_implied_volatility), 1e-8)
        short_cost_vol_ratio = options_synthetic_short_cost / den
        eng.append(short_cost_vol_ratio)
        
        # 13. Short interest momentum (change in short interest)
        # This would require previous timestep data, so we'll use a placeholder for now
        eng.append(0.0)
        
        # 14. Normalized price level (current price / 15-day average)
        avg_price = np.mean(close_prices)
        den = max(abs(avg_price), 1e-8)
        norm_price = close_prices[-1] / den
        eng.append(norm_price)
        
        # 15. Short volume acceleration (second derivative of short volume)
        if len(short_volume) >= 3:
            short_vol_diff1 = np.diff(short_volume[-3:])
            short_vol_accel = np.diff(short_vol_diff1)[0]
            eng.append(short_vol_accel)
        else:
            eng.append(0.0)
        
        # 16. Put-call ratio trend (recent vs previous)
        # Since we don't have historical options data, we'll use the current value
        eng.append(options_put_call_ratio)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure row has exactly MAX_TOTAL elements
        if row.size < MAX_TOTAL:
            # Pad with zeros if needed
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            # Truncate if needed
            row = row[:MAX_TOTAL]
        
        result[t] = row
    
    # Handle NaN, inf values
    result = np.nan_to_num(result, nan=0.0, posinf=0.0, neginf=0.0)
    
    return result
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: index 14 is out of bounds for axis 0 with size 14
⚠️ Function execution failed (attempt 5/5)
⚠️ All function execution attempts failed, using fallback

🔧 Applying feature selection using fallback function...
Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 1: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 1 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 1}), (1, 'Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 1}), (2, 'Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 1})]
🔄 Retrying... (1/5)
Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 2: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 2 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 2}), (1, 'Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 2}), (2, 'Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 2})]
🔄 Retrying... (2/5)
Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 3: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 3 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 3}), (1, 'Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 3}), (2, 'Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 3})]
🔄 Retrying... (3/5)
Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 4: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 4 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 4}), (1, 'Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 4}), (2, 'Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 4})]
🔄 Retrying... (4/5)
Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 5: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 5 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 5}), (1, 'Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 5}), (2, 'Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 5})]
⚠️ All 5 attempts failed, using fallback function
🆘 Using fallback feature selection...
Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 1: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 1 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 1}), (1, 'Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 1}), (2, 'Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 1})]
🔄 Retrying... (1/5)
Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 2: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 2 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 2}), (1, 'Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 2}), (2, 'Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 2})]
🔄 Retrying... (2/5)
Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 3: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 3 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 3}), (1, 'Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 3}), (2, 'Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 3})]
🔄 Retrying... (3/5)
Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 4: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 4 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 4}), (1, 'Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 4}), (2, 'Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 4})]
🔄 Retrying... (4/5)
Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 5: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 5 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 5}), (1, 'Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 5}), (2, 'Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 5})]
⚠️ All 5 attempts failed, using fallback function
🆘 Using fallback feature selection...
Training data shape: (106, 4, 97) -> (106, 4, 15)
Validation data shape: (36, 4, 97) -> (36, 4, 15)
⚠️ Total errors encountered: 720
  Error 1: ValueError - cannot reshape array of size 95 into shape (15,4)
  Error 2: ValueError - cannot reshape array of size 95 into shape (15,4)
  Error 3: ValueError - cannot reshape array of size 95 into shape (15,4)

==================================================
Training Iteration 2 (fallback) (SVM)
==================================================
Training SVM model...

Iteration 2 (fallback) Performance:
MAE: 575701.8576
RMSE: 821008.8301
MAPE: 10.60%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 38
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0003, rank=1
   2. Feature_2_t1: importance=0.0003, rank=2
   3. Feature_2_t0: importance=0.0003, rank=3
   4. Feature_12_t2: importance=0.0002, rank=4
   5. Feature_0_t0: importance=0.0002, rank=5
📊 No significant improvement. Change: -1.22%

📈 Current best MAPE: 9.38%
🔄 Iterations without improvement: 2/5

🎯 Final Evaluation on Test Set (Unseen Data)
======================================================================
Using train+validation data for final model training to maximize data usage
Combined train+val data shape: (142, 4, 97)
Test data shape: (36, 4, 97)

📊 BASELINE EVALUATION (Raw Features, Train+Val → Test):

==================================================
Training Baseline Final (Raw Features) (SVM)
==================================================
Training SVM model...

Baseline Final (Raw Features) Performance:
MAE: 671815.5123
RMSE: 1138522.0027
MAPE: 8.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 71
   • Highly important features (top 5%): 47

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_66_t1: importance=0.0006, rank=1
   2. Feature_65_t3: importance=0.0003, rank=2
   3. Feature_63_t3: importance=0.0002, rank=3
   4. Feature_66_t2: importance=0.0002, rank=4
   5. Feature_63_t1: importance=0.0001, rank=5
   Baseline MAPE: 8.94%
   Baseline MAE: 671815.5123
   Baseline RMSE: 1138522.0027
ℹ️ No feature engineering code available, using baseline for final evaluation

======================================================================
ITERATION PERFORMANCE SUMMARY
======================================================================

📊 VALIDATION MAPE TREND:
--------------------------------------------------------------------------------
Iteration  Model                     Validation MAPE Improvement from Last
--------------------------------------------------------------------------------
0          Baseline                  9.38            N/A                 
1          Iteration 1               10.60           -1.22%              
2          Iteration 2               10.60           -1.22%              
--------------------------------------------------------------------------------
🏆 Best: Iteration 1 - MAPE: 10.60%
✅ Saved SRPT results to cache/SRPT_iterative_results_enhanced.pkl
✅ Summary report saved for SRPT

🎉 Process completed successfully for SRPT!

================================================================================
PROCESSING TICKER 9/14: EXTR
================================================================================
🚀 Starting Iterative Agent-Based Feature Selection Process for EXTR
======================================================================
📊 Loading data from parquet file...
📊 Loading data for EXTR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for EXTR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data integrity validation passed
✅ Data loaded successfully!
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
Features per timestep: 97
Lookback window: 4

🎯 Step 1: Running baseline model on validation set...

==================================================
Training Baseline (All 97 Features) (SVM)
==================================================
Training SVM model...

Baseline (All 97 Features) Performance:
MAE: 868933.0676
RMSE: 1257909.5342
MAPE: 7.64%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 230
   • Highly important features (top 5%): 127

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_81_t2: importance=0.0010, rank=1
   2. Feature_0_t3: importance=0.0010, rank=2
   3. Feature_92_t3: importance=0.0008, rank=3
   4. Feature_83_t2: importance=0.0007, rank=4
   5. Feature_65_t2: importance=0.0005, rank=5

📊 Baseline Performance: MAPE = 7.64%

🔄 Starting iterative improvement process...
Max iterations: 2
Min improvement threshold: 0.1%
Patience: 5 iterations without improvement

======================================================================
ITERATION 1
======================================================================
🤖 Calling Claude for iteration 1...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Start with essential raw features to keep
        raw_keep = [
            data[t, 0],  # short interest
            data[t, 1],  # average daily volume
            data[t, 2],  # days to cover
            data[t, 64],  # options_put_call_volume_ratio
            data[t, 65],  # options_synthetic_short_cost (high importance from previous iteration)
            data[t, 66],  # options_avg_implied_volatility
            data[t, 67],  # shares_outstanding
        ]
        
        # Get OHLC data for the last 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Get short interest volume and total volume data
        short_vol = data[t, 68:83]
        total_vol = data[t, 83:98]
        
        # Add last day's OHLC as they're more relevant
        raw_keep.append(close_prices[-1])  # Last close price
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Initialize engineered features list
        eng = []
        
        # 1. Short interest to shares outstanding ratio
        # This measures what percentage of available shares are being shorted
        short_to_shares = data[t, 0] / max(abs(data[t, 67]), 1e-8)
        eng.append(short_to_shares)
        
        # 2. Short volume ratio (average of daily short volume / total volume)
        # High ratio indicates increased shorting activity
        daily_short_ratio = short_vol / np.maximum(total_vol, 1e-8)
        avg_short_ratio = np.mean(daily_short_ratio)
        eng.append(avg_short_ratio)
        
        # 3. Short volume trend (slope of short volume over 15 days)
        # Positive slope indicates increasing short pressure
        x = np.arange(15)
        if len(short_vol) >= 2:  # Need at least 2 points for slope
            slope = np.polyfit(x, short_vol, 1)[0] / (np.mean(short_vol) + 1e-8)
            eng.append(slope)
        else:
            eng.append(0.0)
            
        # 4. Price momentum (5-day)
        # Captures recent price trend direction and strength
        if len(close_prices) >= 5:
            momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1.0
            eng.append(momentum_5d)
        else:
            eng.append(0.0)
            
        # 5. Price volatility (standard deviation of returns)
        # Higher volatility often correlates with short interest changes
        if len(close_prices) >= 2:
            returns = np.diff(close_prices) / np.maximum(close_prices[:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0.0
            eng.append(volatility)
        else:
            eng.append(0.0)
            
        # 6. Average true range (ATR) - volatility indicator
        # Measures market volatility, often higher with increased short interest
        tr_values = []
        for i in range(1, len(high_prices)):
            tr1 = high_prices[i] - low_prices[i]
            tr2 = abs(high_prices[i] - close_prices[i-1])
            tr3 = abs(low_prices[i] - close_prices[i-1])
            tr_values.append(max(tr1, tr2, tr3))
        atr = np.mean(tr_values) if tr_values else 0.0
        eng.append(atr)
        
        # 7. Short interest to volume ratio
        # Indicates how many days of average volume the short interest represents
        si_to_vol_ratio = data[t, 0] / max(data[t, 1], 1e-8)
        eng.append(si_to_vol_ratio)
        
        # 8. Options-based synthetic short pressure
        # Combines put/call ratio with synthetic short cost
        synthetic_short_pressure = data[t, 64] * data[t, 65]
        eng.append(synthetic_short_pressure)
        
        # 9. Short volume acceleration (change in short volume slope)
        # Captures acceleration/deceleration in shorting activity
        if len(short_vol) >= 10:
            first_half = short_vol[:7]
            second_half = short_vol[7:]
            slope1 = np.polyfit(np.arange(len(first_half)), first_half, 1)[0]
            slope2 = np.polyfit(np.arange(len(second_half)), second_half, 1)[0]
            short_accel = (slope2 - slope1) / (np.mean(short_vol) + 1e-8)
            eng.append(short_accel)
        else:
            eng.append(0.0)
            
        # 10. Price to volume ratio change
        # Indicates price sensitivity to volume changes
        if len(close_prices) >= 5 and len(total_vol) >= 5:
            price_vol_ratio_recent = close_prices[-1] / max(np.mean(total_vol[-5:]), 1e-8)
            price_vol_ratio_earlier = close_prices[-5] / max(np.mean(total_vol[-10:-5]), 1e-8)
            price_vol_change = price_vol_ratio_recent / max(price_vol_ratio_earlier, 1e-8) - 1.0
            eng.append(price_vol_change)
        else:
            eng.append(0.0)
            
        # 11. Relative strength index (RSI)
        # Indicates overbought/oversold conditions
        if len(close_prices) >= 14:
            diff = np.diff(close_prices)
            gains = np.where(diff > 0, diff, 0)
            losses = np.where(diff < 0, -diff, 0)
            avg_gain = np.mean(gains)
            avg_loss = np.mean(losses)
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
        else:
            eng.append(50.0)  # Neutral RSI value
            
        # 12. Short interest to implied volatility ratio
        # Relates short interest to market expectations of volatility
        si_to_iv_ratio = data[t, 0] / max(data[t, 66], 1e-8)
        eng.append(si_to_iv_ratio)
        
        # 13. OHLC price range relative to average
        # Indicates unusual price action
        avg_range = np.mean(high_prices - low_prices)
        last_range = high_prices[-1] - low_prices[-1]
        relative_range = last_range / max(avg_range, 1e-8)
        eng.append(relative_range)
        
        # 14. Short volume to total volume ratio change
        # Captures shifts in shorting behavior
        if len(short_vol) >= 10 and len(total_vol) >= 10:
            recent_ratio = np.mean(short_vol[-5:] / np.maximum(total_vol[-5:], 1e-8))
            earlier_ratio = np.mean(short_vol[-10:-5] / np.maximum(total_vol[-10:-5], 1e-8))
            ratio_change = recent_ratio / max(earlier_ratio, 1e-8) - 1.0
            eng.append(ratio_change)
        else:
            eng.append(0.0)
        
        # 15. Price gap significance
        # Captures overnight price jumps which may signal short covering
        price_gaps = []
        for i in range(1, len(open_prices)):
            gap = (open_prices[i] - close_prices[i-1]) / max(close_prices[i-1], 1e-8)
            price_gaps.append(gap)
        avg_gap = np.mean(np.abs(price_gaps)) if price_gaps else 0.0
        eng.append(avg_gap)
        
        # 16. Bollinger Band width
        # Indicates expected volatility
        if len(close_prices) >= 10:
            sma = np.mean(close_prices[-10:])
            std = np.std(close_prices[-10:])
            bb_width = (2 * std) / max(sma, 1e-8)
            eng.append(bb_width)
        else:
            eng.append(0.0)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent width by padding or truncating
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (15,) (14,) 
⚠️ Function execution failed (attempt 1/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    result = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (critical baseline features)
        raw_keep.append(data[t, 0])  # Short interest
        raw_keep.append(data[t, 1])  # Average daily volume
        raw_keep.append(data[t, 2])  # Days to cover
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values instead of all 60 values
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Keep options data which showed high importance
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep shares outstanding
        raw_keep.append(data[t, 67])  # shares_outstanding
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (daily short volume / total volume)
        short_volume_ratio = np.zeros_like(short_volume)
        for i in range(len(short_volume)):
            denom = max(abs(total_volume[i]), 1e-8)
            short_volume_ratio[i] = short_volume[i] / denom
        
        # 2. Recent Short Volume Ratio (last 5 days)
        recent_short_ratio = np.mean(short_volume_ratio[-5:])
        eng.append(recent_short_ratio)
        
        # 3. Short Volume Ratio Trend (difference between recent and earlier periods)
        if len(short_volume_ratio) >= 10:
            earlier_short_ratio = np.mean(short_volume_ratio[-10:-5])
            denom = max(abs(earlier_short_ratio), 1e-8)
            short_ratio_trend = (recent_short_ratio - earlier_short_ratio) / denom
            eng.append(short_ratio_trend)
        else:
            eng.append(0.0)
        
        # 4. Price Momentum (5-day)
        if len(close_prices) >= 5:
            price_momentum_5d = (close_prices[-1] / max(abs(close_prices[-5]), 1e-8)) - 1.0
            eng.append(price_momentum_5d)
        else:
            eng.append(0.0)
        
        # 5. Price Volatility (standard deviation of returns)
        if len(close_prices) >= 2:
            returns = np.diff(close_prices) / np.maximum(np.abs(close_prices[:-1]), 1e-8)
            price_volatility = np.std(returns) if len(returns) > 0 else 0.0
            eng.append(price_volatility)
        else:
            eng.append(0.0)
        
        # 6. Average True Range (ATR) - volatility indicator
        atr_values = []
        for i in range(1, len(high_prices)):
            tr1 = high_prices[i] - low_prices[i]
            tr2 = abs(high_prices[i] - close_prices[i-1])
            tr3 = abs(low_prices[i] - close_prices[i-1])
            true_range = max(tr1, tr2, tr3)
            atr_values.append(true_range)
        
        atr = np.mean(atr_values) if atr_values else 0.0
        eng.append(atr)
        
        # 7. Normalized ATR (ATR / Close Price)
        norm_atr = atr / max(abs(close_prices[-1]), 1e-8) if len(close_prices) > 0 else 0.0
        eng.append(norm_atr)
        
        # 8. Short Interest to Float Ratio
        si_to_float = data[t, 0] / max(abs(data[t, 67]), 1e-8)  # Short interest / shares outstanding
        eng.append(si_to_float)
        
        # 9. Short Interest to Volume Ratio
        si_to_volume = data[t, 0] / max(abs(data[t, 1]), 1e-8)  # Short interest / avg daily volume
        eng.append(si_to_volume)
        
        # 10. RSI (Relative Strength Index)
        if len(close_prices) >= 14:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain[-14:])
            avg_loss = np.mean(loss[-14:])
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
        else:
            eng.append(50.0)  # Neutral RSI value
        
        # 11. MACD Line (Moving Average Convergence Divergence)
        if len(close_prices) >= 26:
            ema12 = np.mean(close_prices[-12:])  # Simplified EMA calculation
            ema26 = np.mean(close_prices[-26:])
            macd_line = ema12 - ema26
            eng.append(macd_line)
        else:
            eng.append(0.0)
        
        # 12. Bollinger Band Width (volatility measure)
        if len(close_prices) >= 20:
            sma20 = np.mean(close_prices[-20:])
            std20 = np.std(close_prices[-20:])
            bb_width = (2 * std20) / max(abs(sma20), 1e-8)
            eng.append(bb_width)
        else:
            eng.append(0.0)
        
        # 13. Price to Volume Ratio
        price_to_volume = close_prices[-1] / max(abs(np.mean(total_volume[-5:])), 1e-8)
        eng.append(price_to_volume)
        
        # 14. Options Put/Call Ratio Change
        if t > 0:
            put_call_change = data[t, 64] / max(abs(data[t-1, 64]), 1e-8) - 1.0
            eng.append(put_call_change)
        else:
            eng.append(0.0)
        
        # 15. Short Cost to Implied Volatility Ratio
        short_cost_to_iv = data[t, 65] / max(abs(data[t, 66]), 1e-8)
        eng.append(short_cost_to_iv)
        
        # 16. Short Interest Momentum (change in short interest)
        if t > 0:
            si_momentum = (data[t, 0] / max(abs(data[t-1, 0]), 1e-8)) - 1.0
            eng.append(si_momentum)
        else:
            eng.append(0.0)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent size by padding or truncating
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        result[t] = row
    
    # Handle NaN and infinity values
    result = np.nan_to_num(result, nan=0.0, posinf=0.0, neginf=0.0)
    
    return result
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: index 14 is out of bounds for axis 0 with size 14
⚠️ Function execution failed (attempt 2/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    result = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (critical baseline features)
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        raw_keep.append(short_interest)  # Short interest
        raw_keep.append(avg_volume)      # Average daily volume
        raw_keep.append(days_to_cover)   # Days to cover
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values (last day)
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Extract options data
        put_call_ratio = data[t, 64]
        synthetic_short_cost = data[t, 65]
        implied_volatility = data[t, 66]
        shares_outstanding = data[t, 67]
        
        # Keep important options data
        raw_keep.append(put_call_ratio)       # Put-call volume ratio
        raw_keep.append(synthetic_short_cost) # Synthetic short cost
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep the most recent short volume and total volume
        raw_keep.append(short_volume[-1])  # Most recent short volume
        raw_keep.append(total_volume[-1])  # Most recent total volume
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Interest to Outstanding Shares Ratio
        if len(eng) < MAX_NEW and shares_outstanding > 0:
            si_to_outstanding = short_interest / max(shares_outstanding, 1e-8)
            eng.append(si_to_outstanding)
        
        # 2. Short Volume Ratio (15-day average)
        if len(eng) < MAX_NEW:
            short_volume_ratio = np.sum(short_volume) / max(np.sum(total_volume), 1e-8)
            eng.append(short_volume_ratio)
        
        # 3. Short Interest Momentum (rate of change)
        if len(eng) < MAX_NEW and t > 0:
            prev_short_interest = data[t-1, 0]
            si_momentum = (short_interest - prev_short_interest) / max(prev_short_interest, 1e-8)
            eng.append(si_momentum)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)  # Placeholder when t=0
        
        # 4. Price Momentum (5-day)
        if len(eng) < MAX_NEW and len(close_prices) >= 5:
            price_momentum_5d = (close_prices[-1] - close_prices[-5]) / max(close_prices[-5], 1e-8)
            eng.append(price_momentum_5d)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 5. Price Momentum (10-day)
        if len(eng) < MAX_NEW and len(close_prices) >= 10:
            price_momentum_10d = (close_prices[-1] - close_prices[-10]) / max(close_prices[-10], 1e-8)
            eng.append(price_momentum_10d)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 6. Volatility (standard deviation of returns over 10 days)
        if len(eng) < MAX_NEW and len(close_prices) >= 11:
            returns = np.diff(close_prices[-11:]) / np.maximum(close_prices[-11:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0
            eng.append(volatility)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 7. Average True Range (ATR) - volatility indicator
        if len(eng) < MAX_NEW and len(close_prices) >= 2:
            true_ranges = []
            for i in range(1, min(10, len(close_prices))):
                tr1 = high_prices[-i] - low_prices[-i]
                tr2 = abs(high_prices[-i] - close_prices[-(i+1)])
                tr3 = abs(low_prices[-i] - close_prices[-(i+1)])
                true_ranges.append(max(tr1, tr2, tr3))
            atr = np.mean(true_ranges) if true_ranges else 0
            eng.append(atr)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 8. Short Volume Trend (ratio of recent 5-day to previous 10-day)
        if len(eng) < MAX_NEW and len(short_volume) >= 15:
            recent_short_vol = np.mean(short_volume[-5:])
            prev_short_vol = np.mean(short_volume[-15:-5])
            short_vol_trend = recent_short_vol / max(prev_short_vol, 1e-8)
            eng.append(short_vol_trend)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 9. RSI (Relative Strength Index) - 14 period
        if len(eng) < MAX_NEW and len(close_prices) >= 15:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain) if len(gain) > 0 else 0
            avg_loss = np.mean(loss) if len(loss) > 0 else 0
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 10. Short Interest to Volume Ratio
        if len(eng) < MAX_NEW and avg_volume > 0:
            si_to_volume = short_interest / max(avg_volume, 1e-8)
            eng.append(si_to_volume)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 11. Bollinger Band Width (volatility measure)
        if len(eng) < MAX_NEW and len(close_prices) >= 10:
            sma = np.mean(close_prices[-10:])
            std = np.std(close_prices[-10:])
            bb_width = (2 * std) / max(sma, 1e-8)  # Width relative to price
            eng.append(bb_width)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 12. Price to Implied Volatility Ratio
        if len(eng) < MAX_NEW and implied_volatility > 0:
            price_to_iv = close_prices[-1] / max(implied_volatility, 1e-8)
            eng.append(price_to_iv)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 13. Short Cost to Price Ratio
        if len(eng) < MAX_NEW and close_prices[-1] > 0:
            short_cost_to_price = synthetic_short_cost / max(close_prices[-1], 1e-8)
            eng.append(short_cost_to_price)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 14. Short Volume Acceleration (second derivative)
        if len(eng) < MAX_NEW and len(short_volume) >= 3:
            short_vol_diff1 = short_volume[-1] - short_volume[-2]
            short_vol_diff2 = short_volume[-2] - short_volume[-3]
            short_vol_accel = short_vol_diff1 - short_vol_diff2
            eng.append(short_vol_accel)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 15. VWAP (Volume Weighted Average Price) - last 5 days
        if len(eng) < MAX_NEW and len(close_prices) >= 5 and len(total_volume) >= 5:
            vwap_num = np.sum(close_prices[-5:] * total_volume[-5:])
            vwap_den = np.sum(total_volume[-5:])
            vwap = vwap_num / max(vwap_den, 1e-8)
            eng.append(vwap)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 16. Price Distance from 10-day SMA (normalized)
        if len(eng) < MAX_NEW and len(close_prices) >= 10:
            sma_10 = np.mean(close_prices[-10:])
            price_sma_dist = (close_prices[-1] - sma_10) / max(sma_10, 1e-8)
            eng.append(price_sma_dist)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 17. Short Interest to Days to Cover Ratio
        if len(eng) < MAX_NEW and days_to_cover > 0:
            si_to_dtc = short_interest / max(days_to_cover, 1e-8)
            eng.append(si_to_dtc)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure row has exactly MAX_TOTAL elements
        if row.size < MAX_TOTAL:
            # Pad with zeros if needed
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            # Truncate if needed
            row = row[:MAX_TOTAL]
        
        # Store in result array
        result[t, :] = row
    
    # Handle NaN, inf values
    result = np.nan_to_num(result, nan=0.0, posinf=0.0, neginf=0.0)
    
    return result
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 1 (claude) (SVM)
==================================================
Training SVM model...

Iteration 1 (claude) Performance:
MAE: 847256.1678
RMSE: 1242491.3167
MAPE: 7.44%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 89
   • Highly important features (top 5%): 63

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_16_t3: importance=0.0017, rank=1
   2. Feature_15_t1: importance=0.0015, rank=2
   3. Feature_0_t3: importance=0.0013, rank=3
   4. Feature_18_t3: importance=0.0012, rank=4
   5. Feature_5_t2: importance=0.0010, rank=5
💾 Saved code for iteration 1 to iteration_codes dictionary
🎉 IMPROVEMENT! MAPE improved by 0.19%

📈 Current best MAPE: 7.44%
🔄 Iterations without improvement: 0/5

======================================================================
ITERATION 2
======================================================================
🤖 Calling Claude for iteration 2...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    result = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Extract key raw features
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        # Always keep these critical baseline features
        raw_keep.append(short_interest)  # Short interest - highest importance from previous iterations
        raw_keep.append(avg_volume)      # Average daily volume
        raw_keep.append(days_to_cover)   # Days to cover
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent close price (high importance in previous iterations)
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Extract options data
        put_call_ratio = data[t, 64]
        synthetic_short_cost = data[t, 65]
        implied_volatility = data[t, 66]
        shares_outstanding = data[t, 67]
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep important options data based on previous feature importance
        raw_keep.append(synthetic_short_cost)  # Synthetic short cost (high importance)
        raw_keep.append(implied_volatility)    # Implied volatility (adding based on domain knowledge)
        
        # Keep the most recent short volume (high importance in previous iterations)
        raw_keep.append(short_volume[-1])
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Interest to Outstanding Shares Ratio (utilization rate)
        if len(eng) < MAX_NEW and shares_outstanding > 0:
            si_to_outstanding = short_interest / max(shares_outstanding, 1e-8)
            eng.append(si_to_outstanding)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 2. Short Volume Ratio (15-day average) - improved with weighted recent emphasis
        if len(eng) < MAX_NEW and np.sum(total_volume) > 0:
            # Apply more weight to recent days (linear weights)
            weights = np.linspace(0.5, 1.5, 15)
            weighted_short_vol = np.sum(short_volume * weights)
            weighted_total_vol = np.sum(total_volume * weights)
            weighted_short_vol_ratio = weighted_short_vol / max(weighted_total_vol, 1e-8)
            eng.append(weighted_short_vol_ratio)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 3. Short Interest Momentum (rate of change over multiple periods)
        if len(eng) < MAX_NEW and t > 0:
            prev_short_interest = data[t-1, 0]
            si_momentum = (short_interest - prev_short_interest) / max(prev_short_interest, 1e-8)
            eng.append(si_momentum)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 4. Price Momentum (5-day) - high importance in previous iterations
        if len(eng) < MAX_NEW and len(close_prices) >= 5:
            price_momentum_5d = (close_prices[-1] - close_prices[-5]) / max(close_prices[-5], 1e-8)
            eng.append(price_momentum_5d)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 5. Volatility (standard deviation of returns over 10 days)
        if len(eng) < MAX_NEW and len(close_prices) >= 11:
            returns = np.diff(close_prices[-11:]) / np.maximum(close_prices[-11:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0
            eng.append(volatility)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 6. Short Interest to Volume Ratio - key relationship metric
        if len(eng) < MAX_NEW and avg_volume > 0:
            si_to_volume = short_interest / max(avg_volume, 1e-8)
            eng.append(si_to_volume)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 7. Short Cost to Price Ratio - improved with normalization
        if len(eng) < MAX_NEW and close_prices[-1] > 0:
            short_cost_to_price = synthetic_short_cost / max(close_prices[-1], 1e-8)
            eng.append(short_cost_to_price)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 8. NEW: Short Interest Acceleration (second derivative)
        if len(eng) < MAX_NEW and t > 1:
            si_t = short_interest
            si_t_1 = data[t-1, 0]
            si_t_2 = data[t-2, 0]
            si_velocity_t = si_t - si_t_1
            si_velocity_t_1 = si_t_1 - si_t_2
            si_acceleration = si_velocity_t - si_velocity_t_1
            # Normalize by current short interest
            norm_si_acceleration = si_acceleration / max(short_interest, 1e-8)
            eng.append(norm_si_acceleration)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 9. NEW: Short Interest to Implied Volatility Ratio
        if len(eng) < MAX_NEW and implied_volatility > 0:
            si_to_iv = short_interest / max(implied_volatility, 1e-8)
            eng.append(si_to_iv)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 10. NEW: Relative Short Volume Trend (5-day vs 15-day)
        if len(eng) < MAX_NEW and len(short_volume) >= 15 and len(total_volume) >= 15:
            # Calculate daily short volume ratio
            daily_sv_ratio = short_volume / np.maximum(total_volume, 1e-8)
            recent_ratio = np.mean(daily_sv_ratio[-5:])
            full_period_ratio = np.mean(daily_sv_ratio)
            relative_sv_trend = recent_ratio / max(full_period_ratio, 1e-8)
            eng.append(relative_sv_trend)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 11. NEW: Short Interest to Days to Cover Change
        if len(eng) < MAX_NEW and t > 0 and days_to_cover > 0 and data[t-1, 2] > 0:
            prev_dtc = data[t-1, 2]
            dtc_change = (days_to_cover - prev_dtc) / max(prev_dtc, 1e-8)
            eng.append(dtc_change)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 12. NEW: Price Volatility to Implied Volatility Ratio
        if len(eng) < MAX_NEW and implied_volatility > 0 and len(close_prices) >= 10:
            # Calculate historical volatility (10-day)
            returns = np.diff(close_prices[-11:]) / np.maximum(close_prices[-11:-1], 1e-8)
            hist_vol = np.std(returns) * np.sqrt(252)  # Annualized
            vol_ratio = hist_vol / max(implied_volatility, 1e-8)
            eng.append(vol_ratio)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 13. NEW: Short Volume Concentration (ratio of max to mean)
        if len(eng) < MAX_NEW and len(short_volume) >= 5:
            recent_short_vol = short_volume[-5:]
            concentration = np.max(recent_short_vol) / max(np.mean(recent_short_vol), 1e-8)
            eng.append(concentration)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 14. NEW: Short Interest to Put-Call Ratio
        if len(eng) < MAX_NEW and put_call_ratio > 0:
            si_to_pc_ratio = short_interest / max(put_call_ratio, 1e-8)
            eng.append(si_to_pc_ratio)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 15. NEW: Normalized Short Interest (z-score over available history)
        if len(eng) < MAX_NEW and t >= 3:
            # Get short interest history
            si_history = np.array([data[i, 0] for i in range(t+1)])
            si_mean = np.mean(si_history)
            si_std = np.std(si_history)
            if si_std > 0:
                si_zscore = (short_interest - si_mean) / si_std
            else:
                si_zscore = 0.0
            eng.append(si_zscore)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 16. NEW: Short Volume Momentum
        if len(eng) < MAX_NEW and len(short_volume) >= 5:
            recent_sv_sum = np.sum(short_volume[-2:])
            prev_sv_sum = np.sum(short_volume[-5:-2])
            if prev_sv_sum > 0:
                sv_momentum = (recent_sv_sum - prev_sv_sum) / max(prev_sv_sum, 1e-8)
            else:
                sv_momentum = 0.0
            eng.append(sv_momentum)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 17. NEW: Price Gap Significance
        if len(eng) < MAX_NEW and len(close_prices) >= 2 and len(open_prices) >= 2:
            overnight_gap = open_prices[-1] - close_prices[-2]
            normalized_gap = overnight_gap / max(close_prices[-2], 1e-8)
            eng.append(normalized_gap)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 18. NEW: Short Interest to Price Ratio
        if len(eng) < MAX_NEW and close_prices[-1] > 0:
            si_to_price = short_interest / max(close_prices[-1], 1e-8)
            eng.append(si_to_price)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure row has exactly MAX_TOTAL elements
        if row.size < MAX_TOTAL:
            # Pad with zeros if needed
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            # Truncate if needed
            row = row[:MAX_TOTAL]
        
        # Store in result array
        result[t, :] = row
    
    # Handle NaN, inf values
    result = np.nan_to_num(result, nan=0.0, posinf=0.0, neginf=0.0)
    
    return result
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (14,) (15,) 
⚠️ Function execution failed (attempt 1/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    result = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Extract key raw features
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        # Keep critical baseline features
        raw_keep.append(short_interest)  # Short interest - top importance from previous iterations
        raw_keep.append(avg_volume)      # Average daily volume
        raw_keep.append(days_to_cover)   # Days to cover
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent close price (high importance in previous iterations)
        raw_keep.append(close_prices[-1])
        
        # Extract options data (synthetic_short_cost had high importance)
        put_call_ratio = data[t, 64]
        synthetic_short_cost = data[t, 65]
        implied_volatility = data[t, 66]
        shares_outstanding = data[t, 67]
        
        # Keep important options data
        raw_keep.append(synthetic_short_cost)  # High importance in previous iterations
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep the most recent short volume and total volume
        raw_keep.append(short_volume[-1])  # Recent short volume
        raw_keep.append(total_volume[-1])  # Recent total volume
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Interest to Outstanding Shares Ratio (key fundamental relationship)
        if len(eng) < MAX_NEW and shares_outstanding > 0:
            si_to_outstanding = short_interest / max(shares_outstanding, 1e-8)
            eng.append(si_to_outstanding)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 2. Short Volume Ratio (15-day average) - improved from previous iteration
        if len(eng) < MAX_NEW and np.sum(total_volume) > 0:
            short_volume_ratio = np.sum(short_volume) / max(np.sum(total_volume), 1e-8)
            eng.append(short_volume_ratio)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 3. Short Interest Momentum (rate of change) - high importance feature
        if len(eng) < MAX_NEW and t > 0:
            prev_short_interest = data[t-1, 0]
            si_momentum = (short_interest - prev_short_interest) / max(prev_short_interest, 1e-8)
            eng.append(si_momentum)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 4. Price Momentum (5-day) - high importance in previous iterations
        if len(eng) < MAX_NEW and len(close_prices) >= 5:
            price_momentum_5d = (close_prices[-1] - close_prices[-5]) / max(close_prices[-5], 1e-8)
            eng.append(price_momentum_5d)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 5. Short Interest to Volume Ratio - key relationship between SI and liquidity
        if len(eng) < MAX_NEW and avg_volume > 0:
            si_to_volume = short_interest / max(avg_volume, 1e-8)
            eng.append(si_to_volume)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 6. Short Cost to Price Ratio - relationship between borrowing cost and price
        if len(eng) < MAX_NEW and close_prices[-1] > 0:
            short_cost_to_price = synthetic_short_cost / max(close_prices[-1], 1e-8)
            eng.append(short_cost_to_price)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 7. Volatility (standard deviation of returns over 10 days)
        if len(eng) < MAX_NEW and len(close_prices) >= 11:
            returns = np.diff(close_prices[-11:]) / np.maximum(close_prices[-11:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0
            eng.append(volatility)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 8. Recent Short Volume Trend (5-day) - NEW: focuses on very recent trend
        if len(eng) < MAX_NEW and len(short_volume) >= 5:
            recent_short_vol_trend = (short_volume[-1] - short_volume[-5]) / max(short_volume[-5], 1e-8)
            eng.append(recent_short_vol_trend)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 9. Short Volume to Total Volume Ratio (most recent day) - NEW: daily short pressure
        if len(eng) < MAX_NEW and total_volume[-1] > 0:
            daily_short_ratio = short_volume[-1] / max(total_volume[-1], 1e-8)
            eng.append(daily_short_ratio)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 10. Short Interest to Days to Cover Ratio - relationship between SI and liquidity
        if len(eng) < MAX_NEW and days_to_cover > 0:
            si_to_dtc = short_interest / max(days_to_cover, 1e-8)
            eng.append(si_to_dtc)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 11. Price Volatility Ratio (High-Low spread normalized by Close) - NEW
        if len(eng) < MAX_NEW and len(close_prices) >= 5:
            vol_ratios = (high_prices[-5:] - low_prices[-5:]) / np.maximum(close_prices[-5:], 1e-8)
            price_vol_ratio = np.mean(vol_ratios)
            eng.append(price_vol_ratio)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 12. Short Volume Acceleration (second derivative) - rate of change of short selling
        if len(eng) < MAX_NEW and len(short_volume) >= 3:
            short_vol_diff1 = short_volume[-1] - short_volume[-2]
            short_vol_diff2 = short_volume[-2] - short_volume[-3]
            short_vol_accel = short_vol_diff1 - short_vol_diff2
            eng.append(short_vol_accel)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 13. Implied Volatility to Historical Volatility Ratio - NEW: market expectations vs reality
        if len(eng) < MAX_NEW and volatility > 0 and implied_volatility > 0:
            iv_hv_ratio = implied_volatility / max(volatility, 1e-8)
            eng.append(iv_hv_ratio)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 14. Short Interest Growth Rate (3-period) - NEW: longer-term SI trend
        if len(eng) < MAX_NEW and t >= 2:
            si_t_minus_2 = data[t-2, 0]
            si_growth_rate = (short_interest - si_t_minus_2) / max(si_t_minus_2, 1e-8)
            eng.append(si_growth_rate)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 15. Volume Trend (ratio of recent 5-day to previous 5-day) - NEW: volume momentum
        if len(eng) < MAX_NEW and len(total_volume) >= 10:
            recent_vol = np.mean(total_volume[-5:])
            prev_vol = np.mean(total_volume[-10:-5])
            vol_trend = recent_vol / max(prev_vol, 1e-8)
            eng.append(vol_trend)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 16. Short Interest to Put-Call Ratio - NEW: relationship between SI and options sentiment
        if len(eng) < MAX_NEW and put_call_ratio > 0:
            si_to_pc_ratio = short_interest / max(put_call_ratio, 1e-8)
            eng.append(si_to_pc_ratio)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 17. Relative Short Interest Position - NEW: current SI relative to recent range
        if len(eng) < MAX_NEW and t >= 5:
            si_history = [data[max(0, t-i), 0] for i in range(5)]
            si_min, si_max = min(si_history), max(si_history)
            si_range = si_max - si_min
            if si_range > 0:
                rel_si_pos = (short_interest - si_min) / max(si_range, 1e-8)
                eng.append(rel_si_pos)
            else:
                eng.append(0.5)  # Middle of range when there's no range
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # 18. Average Daily Range (ADR) - NEW: price volatility measure
        if len(eng) < MAX_NEW and len(high_prices) >= 5 and len(low_prices) >= 5:
            ranges = high_prices[-5:] - low_prices[-5:]
            adr = np.mean(ranges)
            # Normalize by average price
            avg_price = np.mean(close_prices[-5:])
            norm_adr = adr / max(avg_price, 1e-8)
            eng.append(norm_adr)
        elif len(eng) < MAX_NEW:
            eng.append(0.0)
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure row has exactly MAX_TOTAL elements
        if row.size < MAX_TOTAL:
            # Pad with zeros if needed
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            # Truncate if needed
            row = row[:MAX_TOTAL]
        
        # Store in result array
        result[t, :] = row
    
    # Handle NaN, inf values
    result = np.nan_to_num(result, nan=0.0, posinf=0.0, neginf=0.0)
    
    return result
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 2 (claude) (SVM)
==================================================
Training SVM model...

Iteration 2 (claude) Performance:
MAE: 811715.1480
RMSE: 1292540.6903
MAPE: 7.33%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 88
   • Highly important features (top 5%): 76

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_17_t3: importance=0.0017, rank=1
   2. Feature_24_t3: importance=0.0015, rank=2
   3. Feature_14_t3: importance=0.0011, rank=3
   4. Feature_7_t2: importance=0.0009, rank=4
   5. Feature_6_t2: importance=0.0009, rank=5
💾 Saved code for iteration 2 to iteration_codes dictionary
🎉 IMPROVEMENT! MAPE improved by 0.11%

📈 Current best MAPE: 7.33%
🔄 Iterations without improvement: 0/5

🎯 Final Evaluation on Test Set (Unseen Data)
======================================================================
Using train+validation data for final model training to maximize data usage
Combined train+val data shape: (142, 4, 97)
Test data shape: (36, 4, 97)

📊 BASELINE EVALUATION (Raw Features, Train+Val → Test):

==================================================
Training Baseline Final (Raw Features) (SVM)
==================================================
Training SVM model...

Baseline Final (Raw Features) Performance:
MAE: 604268.4340
RMSE: 814981.7429
MAPE: 7.53%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 199
   • Highly important features (top 5%): 109

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_92_t3: importance=0.0009, rank=1
   2. Feature_80_t1: importance=0.0007, rank=2
   3. Feature_67_t3: importance=0.0006, rank=3
   4. Feature_2_t3: importance=0.0005, rank=4
   5. Feature_69_t1: importance=0.0005, rank=5
   Baseline MAPE: 7.53%
   Baseline MAE: 604268.4340
   Baseline RMSE: 814981.7429

🔧 BEST MODEL EVALUATION (Processed Features, Train+Val → Test):
Applying best feature engineering to all data...
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Processed train+val shape: (142, 4, 25)
Processed test shape: (36, 4, 25)

==================================================
Training Best Model Final (Processed Features) (SVM)
==================================================
Training SVM model...

Best Model Final (Processed Features) Performance:
MAE: 826889.3443
RMSE: 1061024.1418
MAPE: 10.62%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 85
   • Highly important features (top 5%): 80

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_17_t3: importance=0.0022, rank=1
   2. Feature_24_t3: importance=0.0021, rank=2
   3. Feature_13_t3: importance=0.0008, rank=3
   4. Feature_14_t3: importance=0.0007, rank=4
   5. Feature_12_t3: importance=0.0007, rank=5

📊 Best Model Test Set Performance:
   MAPE: 10.62%
   MAE: 826889.3443
   RMSE: 1061024.1418

🎯 IMPROVEMENT OVER BASELINE:
   Baseline MAPE: 7.53%
   Best Model MAPE: 10.62%
   Absolute Improvement: -3.09%
   Relative Improvement: -41.0%

======================================================================
ITERATION PERFORMANCE SUMMARY
======================================================================

📊 VALIDATION MAPE TREND:
--------------------------------------------------------------------------------
Iteration  Model                     Validation MAPE Improvement from Last
--------------------------------------------------------------------------------
0          Baseline                  7.64            N/A                 
1          Iteration 1               7.44            +0.19%              
2          Iteration 2               7.33            +0.11%              
--------------------------------------------------------------------------------
🏆 Best: Iteration 2 - MAPE: 7.33%
✅ Saved EXTR results to cache/EXTR_iterative_results_enhanced.pkl
✅ Summary report saved for EXTR

🎉 Process completed successfully for EXTR!

================================================================================
PROCESSING TICKER 10/14: SCSC
================================================================================
🚀 Starting Iterative Agent-Based Feature Selection Process for SCSC
======================================================================
📊 Loading data from parquet file...
📊 Loading data for SCSC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SCSC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data integrity validation passed
✅ Data loaded successfully!
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
Features per timestep: 97
Lookback window: 4

🎯 Step 1: Running baseline model on validation set...

==================================================
Training Baseline (All 97 Features) (SVM)
==================================================
Training SVM model...

Baseline (All 97 Features) Performance:
MAE: 38219.9934
RMSE: 51448.7866
MAPE: 14.15%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 171
   • Highly important features (top 5%): 96

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_82_t0: importance=0.0010, rank=1
   2. Feature_82_t3: importance=0.0010, rank=2
   3. Feature_69_t0: importance=0.0009, rank=3
   4. Feature_82_t2: importance=0.0009, rank=4
   5. Feature_0_t3: importance=0.0006, rank=5

📊 Baseline Performance: MAPE = 14.15%

🔄 Starting iterative improvement process...
Max iterations: 2
Min improvement threshold: 0.1%
Patience: 5 iterations without improvement

======================================================================
ITERATION 1
======================================================================
🤖 Calling Claude for iteration 1...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (critical baseline features)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values (last day)
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Keep options data which likely has predictive power for short interest
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep the most recent short volume and total volume (Feature_82_t0 had high importance)
        raw_keep.append(short_volume[-1])  # Most recent short volume
        raw_keep.append(total_volume[-1])  # Most recent total volume
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (recent) - Key indicator of short selling pressure
        short_vol_ratio = short_volume[-1] / max(total_volume[-1], 1e-8)
        eng.append(short_vol_ratio)
        
        # 2. Short Volume Ratio (5-day average) - Trend in short selling pressure
        if len(short_volume) >= 5 and len(total_volume) >= 5:
            short_vol_ratio_5d = np.mean(short_volume[-5:]) / max(np.mean(total_volume[-5:]), 1e-8)
            eng.append(short_vol_ratio_5d)
        else:
            eng.append(0.0)
            
        # 3. Short Volume Momentum - Change in short selling activity
        if len(short_volume) >= 5:
            short_vol_momentum = short_volume[-1] / max(np.mean(short_volume[-5:]), 1e-8) - 1
            eng.append(short_vol_momentum)
        else:
            eng.append(0.0)
            
        # 4. Price Momentum (5-day) - Price trend that may influence short interest
        if len(close_prices) >= 5:
            price_momentum_5d = close_prices[-1] / max(close_prices[-5], 1e-8) - 1
            eng.append(price_momentum_5d)
        else:
            eng.append(0.0)
            
        # 5. Volatility (5-day) - Market volatility often correlates with short interest
        if len(close_prices) >= 5:
            returns = np.diff(close_prices[-6:]) / np.maximum(close_prices[-6:-1], 1e-8)
            volatility_5d = np.std(returns) if len(returns) > 0 else 0
            eng.append(volatility_5d)
        else:
            eng.append(0.0)
            
        # 6. Short Interest to Float Ratio - Normalized short interest
        shares_outstanding = data[t, 67]
        short_interest_to_float = data[t, 0] / max(shares_outstanding, 1e-8)
        eng.append(short_interest_to_float)
        
        # 7. Average True Range (ATR) - Measure of volatility
        if len(high_prices) >= 2 and len(low_prices) >= 2 and len(close_prices) >= 2:
            tr_values = []
            for i in range(1, min(5, len(high_prices))):
                high_low = high_prices[-i] - low_prices[-i]
                high_close = abs(high_prices[-i] - close_prices[-(i+1)])
                low_close = abs(low_prices[-i] - close_prices[-(i+1)])
                tr = max(high_low, high_close, low_close)
                tr_values.append(tr)
            atr = np.mean(tr_values) if tr_values else 0
            eng.append(atr)
        else:
            eng.append(0.0)
            
        # 8. RSI (5-day) - Overbought/oversold indicator
        if len(close_prices) >= 6:
            diff = np.diff(close_prices[-6:])
            gains = np.sum(np.where(diff > 0, diff, 0))
            losses = np.sum(np.where(diff < 0, -diff, 0))
            avg_gain = gains / 5
            avg_loss = losses / 5
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
        else:
            eng.append(0.0)
            
        # 9. Short Volume Acceleration - Rate of change in short volume
        if len(short_volume) >= 10:
            short_vol_accel = (short_volume[-1] - short_volume[-5]) / max(short_volume[-5] - short_volume[-10], 1e-8)
            eng.append(short_vol_accel)
        else:
            eng.append(0.0)
            
        # 10. Options Put/Call Ratio Change - Change in sentiment
        if t > 0:
            put_call_change = data[t, 64] / max(data[t-1, 64], 1e-8) - 1
            eng.append(put_call_change)
        else:
            eng.append(0.0)
            
        # 11. Short Cost to Volatility Ratio - Cost efficiency of shorting
        short_cost_vol_ratio = data[t, 65] / max(data[t, 66], 1e-8)
        eng.append(short_cost_vol_ratio)
        
        # 12. Volume Trend - Unusual volume may signal short covering or increased shorting
        if len(total_volume) >= 10:
            volume_trend = total_volume[-1] / max(np.mean(total_volume[-10:]), 1e-8) - 1
            eng.append(volume_trend)
        else:
            eng.append(0.0)
            
        # 13. Short Interest to Days to Cover Ratio - Normalized short interest by liquidity
        si_dtc_ratio = data[t, 0] / max(data[t, 2], 1e-8)
        eng.append(si_dtc_ratio)
        
        # 14. Price Range Ratio - Volatility measure
        if len(high_prices) >= 5 and len(low_prices) >= 5:
            price_range = (np.max(high_prices[-5:]) - np.min(low_prices[-5:])) / max(np.mean(close_prices[-5:]), 1e-8)
            eng.append(price_range)
        else:
            eng.append(0.0)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent width by padding or truncating
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 1 (claude) (SVM)
==================================================
Training SVM model...

Iteration 1 (claude) Performance:
MAE: 38439.5221
RMSE: 52213.2252
MAPE: 14.19%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 82
   • Highly important features (top 5%): 67

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_8_t0: importance=0.0014, rank=1
   2. Feature_20_t2: importance=0.0013, rank=2
   3. Feature_15_t0: importance=0.0013, rank=3
   4. Feature_7_t0: importance=0.0013, rank=4
   5. Feature_14_t1: importance=0.0011, rank=5
💾 Saved code for iteration 1 to iteration_codes dictionary
📊 No significant improvement. Change: -0.04%

📈 Current best MAPE: 14.15%
🔄 Iterations without improvement: 1/5

======================================================================
ITERATION 2
======================================================================
🤖 Calling Claude for iteration 2...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average daily volume (critical baseline features)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent close price (most relevant for current valuation)
        raw_keep.append(close_prices[-1])
        
        # Keep options data which showed high importance in previous iterations
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep the most recent short volume and total volume (high importance in previous iterations)
        raw_keep.append(short_volume[-1])  # Most recent short volume
        raw_keep.append(total_volume[-1])  # Most recent total volume
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (recent) - Key indicator of short selling pressure
        # This was one of the most important features in previous iterations
        short_vol_ratio = short_volume[-1] / max(total_volume[-1], 1e-8)
        eng.append(short_vol_ratio)
        
        # 2. Short Volume Ratio Trend (5-day vs 15-day) - Captures shift in short selling behavior
        # Comparing recent to longer-term short volume patterns
        if len(short_volume) >= 15 and len(total_volume) >= 15:
            short_vol_ratio_5d = np.mean(short_volume[-5:]) / max(np.mean(total_volume[-5:]), 1e-8)
            short_vol_ratio_15d = np.mean(short_volume) / max(np.mean(total_volume), 1e-8)
            short_vol_ratio_trend = short_vol_ratio_5d / max(short_vol_ratio_15d, 1e-8) - 1
            eng.append(short_vol_ratio_trend)
        else:
            eng.append(0.0)
        
        # 3. Short Interest to Float Ratio - Normalized short interest by available shares
        # Important metric showing what percentage of tradable shares are sold short
        shares_outstanding = data[t, 67]
        short_interest_to_float = data[t, 0] / max(shares_outstanding, 1e-8)
        eng.append(short_interest_to_float)
        
        # 4. Short Interest to Days to Cover Ratio - Normalized short interest by liquidity
        # Combines two important metrics to create a more informative feature
        si_dtc_ratio = data[t, 0] / max(data[t, 2], 1e-8)
        eng.append(si_dtc_ratio)
        
        # 5. Short Cost to Implied Volatility Ratio - Cost efficiency of shorting
        # Measures if shorting costs are justified by expected volatility
        short_cost_vol_ratio = data[t, 65] / max(data[t, 66], 1e-8)
        eng.append(short_cost_vol_ratio)
        
        # 6. Bollinger Band Position - Where price is relative to volatility bands
        # Indicates potential mean reversion or trend continuation opportunities
        if len(close_prices) >= 10:
            sma = np.mean(close_prices[-10:])
            std = np.std(close_prices[-10:])
            bb_position = (close_prices[-1] - sma) / max(2 * std, 1e-8)  # Normalized position within 2-sigma bands
            eng.append(bb_position)
        else:
            eng.append(0.0)
        
        # 7. RSI (14-day) - Overbought/oversold indicator
        # Momentum oscillator that measures speed and change of price movements
        if len(close_prices) >= 15:
            diff = np.diff(close_prices)
            gains = np.where(diff > 0, diff, 0)
            losses = np.where(diff < 0, -diff, 0)
            avg_gain = np.mean(gains)
            avg_loss = np.mean(losses)
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
        else:
            eng.append(0.0)
        
        # 8. VWAP Ratio - Price relative to volume-weighted average price
        # Indicates if current price is above/below average transaction price
        if len(close_prices) >= 5 and len(total_volume[-5:]) >= 5:
            vwap = np.sum(close_prices[-5:] * total_volume[-5:]) / max(np.sum(total_volume[-5:]), 1e-8)
            vwap_ratio = close_prices[-1] / max(vwap, 1e-8)
            eng.append(vwap_ratio)
        else:
            eng.append(0.0)
        
        # 9. Short Volume Acceleration - Second derivative of short volume
        # Captures acceleration in short selling activity
        if len(short_volume) >= 15:
            short_vol_recent = np.mean(short_volume[-5:])
            short_vol_mid = np.mean(short_volume[-10:-5])
            short_vol_old = np.mean(short_volume[-15:-10])
            
            first_deriv_recent = short_vol_recent - short_vol_mid
            first_deriv_old = short_vol_mid - short_vol_old
            
            short_vol_accel = first_deriv_recent - first_deriv_old
            # Normalize by average short volume to make comparable across stocks
            short_vol_accel_norm = short_vol_accel / max(np.mean(short_volume), 1e-8)
            eng.append(short_vol_accel_norm)
        else:
            eng.append(0.0)
        
        # 10. Options Sentiment Change - Rate of change in put/call ratio
        # Captures shifting market sentiment through options market
        if t > 0:
            put_call_change = data[t, 64] / max(data[t-1, 64], 1e-8) - 1
            eng.append(put_call_change)
        else:
            eng.append(0.0)
        
        # 11. Short Volume to Average Daily Volume Ratio
        # Compares short volume to overall trading activity
        short_to_adv_ratio = short_volume[-1] / max(data[t, 1], 1e-8)
        eng.append(short_to_adv_ratio)
        
        # 12. Price Momentum with Volume Weighting
        # Price trend weighted by volume significance
        if len(close_prices) >= 10 and len(total_volume) >= 10:
            # Calculate returns
            returns = np.diff(close_prices[-11:]) / np.maximum(close_prices[-11:-1], 1e-8)
            # Weight returns by normalized volume
            norm_volume = total_volume[-10:] / max(np.mean(total_volume[-10:]), 1e-8)
            weighted_momentum = np.sum(returns * norm_volume) / max(np.sum(norm_volume), 1e-8)
            eng.append(weighted_momentum)
        else:
            eng.append(0.0)
        
        # 13. Volatility Ratio (Recent vs Historical)
        # Compares recent volatility to longer-term volatility
        if len(close_prices) >= 15:
            # Recent volatility (5 days)
            returns_recent = np.diff(close_prices[-6:]) / np.maximum(close_prices[-6:-1], 1e-8)
            vol_recent = np.std(returns_recent)
            
            # Historical volatility (15 days)
            returns_hist = np.diff(close_prices) / np.maximum(close_prices[:-1], 1e-8)
            vol_hist = np.std(returns_hist)
            
            vol_ratio = vol_recent / max(vol_hist, 1e-8)
            eng.append(vol_ratio)
        else:
            eng.append(0.0)
        
        # 14. Short Interest Momentum - Rate of change in short interest
        # Captures acceleration/deceleration in reported short interest
        if t > 0:
            si_momentum = data[t, 0] / max(data[t-1, 0], 1e-8) - 1
            eng.append(si_momentum)
        else:
            eng.append(0.0)
        
        # 15. Average True Range (ATR) Normalized by Price
        # Volatility measure normalized by price level
        if len(high_prices) >= 5 and len(low_prices) >= 5 and len(close_prices) >= 5:
            tr_values = []
            for i in range(1, min(5, len(high_prices))):
                high_low = high_prices[-i] - low_prices[-i]
                high_close = abs(high_prices[-i] - close_prices[-(i+1)])
                low_close = abs(low_prices[-i] - close_prices[-(i+1)])
                tr = max(high_low, high_close, low_close)
                tr_values.append(tr)
            atr = np.mean(tr_values) if tr_values else 0
            atr_normalized = atr / max(close_prices[-1], 1e-8)  # Normalize by current price
            eng.append(atr_normalized)
        else:
            eng.append(0.0)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent width by padding or truncating
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 2 (claude) (SVM)
==================================================
Training SVM model...

Iteration 2 (claude) Performance:
MAE: 38073.8744
RMSE: 49875.0381
MAPE: 14.12%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 82
   • Highly important features (top 5%): 63

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_19_t2: importance=0.0019, rank=1
   2. Feature_16_t1: importance=0.0015, rank=2
   3. Feature_20_t0: importance=0.0013, rank=3
   4. Feature_20_t1: importance=0.0013, rank=4
   5. Feature_7_t0: importance=0.0011, rank=5
💾 Saved code for iteration 2 to iteration_codes dictionary
📊 No significant improvement. Change: +0.03%

📈 Current best MAPE: 14.15%
🔄 Iterations without improvement: 2/5

🎯 Final Evaluation on Test Set (Unseen Data)
======================================================================
Using train+validation data for final model training to maximize data usage
Combined train+val data shape: (142, 4, 97)
Test data shape: (36, 4, 97)

📊 BASELINE EVALUATION (Raw Features, Train+Val → Test):

==================================================
Training Baseline Final (Raw Features) (SVM)
==================================================
Training SVM model...

Baseline Final (Raw Features) Performance:
MAE: 166784.6698
RMSE: 242181.3330
MAPE: 11.52%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 157
   • Highly important features (top 5%): 97

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_82_t0: importance=0.0011, rank=1
   2. Feature_81_t2: importance=0.0007, rank=2
   3. Feature_86_t3: importance=0.0005, rank=3
   4. Feature_95_t1: importance=0.0005, rank=4
   5. Feature_82_t2: importance=0.0005, rank=5
   Baseline MAPE: 11.52%
   Baseline MAE: 166784.6698
   Baseline RMSE: 242181.3330

🔧 BEST MODEL EVALUATION (Processed Features, Train+Val → Test):
Applying best feature engineering to all data...
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Processed train+val shape: (142, 4, 25)
Processed test shape: (36, 4, 25)

==================================================
Training Best Model Final (Processed Features) (SVM)
==================================================
Training SVM model...

Best Model Final (Processed Features) Performance:
MAE: 148342.1145
RMSE: 229887.1964
MAPE: 10.35%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 87
   • Highly important features (top 5%): 53

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_8_t0: importance=0.0019, rank=1
   2. Feature_0_t3: importance=0.0011, rank=2
   3. Feature_21_t0: importance=0.0009, rank=3
   4. Feature_11_t1: importance=0.0009, rank=4
   5. Feature_18_t2: importance=0.0008, rank=5

📊 Best Model Test Set Performance:
   MAPE: 10.35%
   MAE: 148342.1145
   RMSE: 229887.1964

🎯 IMPROVEMENT OVER BASELINE:
   Baseline MAPE: 11.52%
   Best Model MAPE: 10.35%
   Absolute Improvement: 1.17%
   Relative Improvement: 10.2%

======================================================================
ITERATION PERFORMANCE SUMMARY
======================================================================

📊 VALIDATION MAPE TREND:
--------------------------------------------------------------------------------
Iteration  Model                     Validation MAPE Improvement from Last
--------------------------------------------------------------------------------
0          Baseline                  14.15           N/A                 
1          Iteration 1               14.19           -0.04%              
2          Iteration 2               14.12           +0.03%              
--------------------------------------------------------------------------------
🏆 Best: Iteration 2 - MAPE: 14.12%
✅ Saved SCSC results to cache/SCSC_iterative_results_enhanced.pkl
✅ Summary report saved for SCSC

🎉 Process completed successfully for SCSC!

================================================================================
PROCESSING TICKER 11/14: SLG
================================================================================
🚀 Starting Iterative Agent-Based Feature Selection Process for SLG
======================================================================
📊 Loading data from parquet file...
📊 Loading data for SLG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SLG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data integrity validation passed
✅ Data loaded successfully!
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
Features per timestep: 97
Lookback window: 4

🎯 Step 1: Running baseline model on validation set...

==================================================
Training Baseline (All 97 Features) (SVM)
==================================================
Training SVM model...

Baseline (All 97 Features) Performance:
MAE: 747582.0063
RMSE: 1120316.5031
MAPE: 5.68%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 257
   • Highly important features (top 5%): 160

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_90_t3: importance=0.0007, rank=1
   2. Feature_71_t2: importance=0.0002, rank=2
   3. Feature_88_t1: importance=0.0001, rank=3
   4. Feature_73_t1: importance=0.0001, rank=4
   5. Feature_93_t3: importance=0.0001, rank=5

📊 Baseline Performance: MAPE = 5.68%

🔄 Starting iterative improvement process...
Max iterations: 2
Min improvement threshold: 0.1%
Patience: 5 iterations without improvement

======================================================================
ITERATION 1
======================================================================
🤖 Calling Claude for iteration 1...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Constructs features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average daily volume
        short_interest = data[t, 0]
        avg_daily_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        raw_keep.append(short_interest)
        raw_keep.append(avg_daily_volume)
        raw_keep.append(days_to_cover)
        
        # Extract OHLC data
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values
        raw_keep.append(close_prices[-1])  # Most recent close
        
        # Extract options data
        put_call_ratio = data[t, 64]
        synthetic_short_cost = data[t, 65]
        implied_volatility = data[t, 66]
        shares_outstanding = data[t, 67]
        
        # Keep important options data
        raw_keep.append(put_call_ratio)
        raw_keep.append(implied_volatility)
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Feature 1: Short volume ratio (daily short volume / daily total volume)
        short_volume_ratio = np.zeros_like(short_volume)
        for i in range(len(short_volume)):
            den = max(abs(total_volume[i]), 1e-8)
            short_volume_ratio[i] = short_volume[i] / den
        
        # Average short volume ratio over the past 15 days
        avg_short_volume_ratio = np.mean(short_volume_ratio)
        eng.append(avg_short_volume_ratio)
        
        # Feature 2: Recent trend in short volume ratio (last 5 days vs previous 10)
        recent_ratio = np.mean(short_volume_ratio[-5:])
        previous_ratio = np.mean(short_volume_ratio[:-5])
        den = max(abs(previous_ratio), 1e-8)
        short_ratio_trend = recent_ratio / den - 1
        eng.append(short_ratio_trend)
        
        # Feature 3: Volatility of short volume ratio
        short_ratio_volatility = np.std(short_volume_ratio) if len(short_volume_ratio) > 1 else 0
        eng.append(short_ratio_volatility)
        
        # Feature 4: Price momentum (5-day)
        if len(close_prices) >= 5:
            price_momentum_5d = close_prices[-1] / max(abs(close_prices[-5]), 1e-8) - 1
        else:
            price_momentum_5d = 0
        eng.append(price_momentum_5d)
        
        # Feature 5: Price momentum (10-day)
        if len(close_prices) >= 10:
            price_momentum_10d = close_prices[-1] / max(abs(close_prices[-10]), 1e-8) - 1
        else:
            price_momentum_10d = 0
        eng.append(price_momentum_10d)
        
        # Feature 6: Price volatility (standard deviation of returns)
        if len(close_prices) > 1:
            returns = np.diff(close_prices) / np.maximum(np.abs(close_prices[:-1]), 1e-8)
            price_volatility = np.std(returns)
        else:
            price_volatility = 0
        eng.append(price_volatility)
        
        # Feature 7: Short interest to shares outstanding ratio
        den = max(abs(shares_outstanding), 1e-8)
        short_interest_ratio = short_interest / den
        eng.append(short_interest_ratio)
        
        # Feature 8: Short interest to average volume ratio
        den = max(abs(avg_daily_volume), 1e-8)
        short_interest_volume_ratio = short_interest / den
        eng.append(short_interest_volume_ratio)
        
        # Feature 9: Recent short volume acceleration (last 3 days)
        if len(short_volume) >= 3:
            recent_short_vol = np.mean(short_volume[-3:])
            prev_short_vol = np.mean(short_volume[-6:-3]) if len(short_volume) >= 6 else short_volume[-3]
            den = max(abs(prev_short_vol), 1e-8)
            short_vol_acceleration = recent_short_vol / den - 1
        else:
            short_vol_acceleration = 0
        eng.append(short_vol_acceleration)
        
        # Feature 10: Price range relative to volatility
        if len(high_prices) > 0 and len(low_prices) > 0:
            price_range = np.mean(high_prices - low_prices)
            den = max(abs(np.mean(close_prices)), 1e-8)
            normalized_range = price_range / den
        else:
            normalized_range = 0
        eng.append(normalized_range)
        
        # Feature 11: Options implied volatility to historical volatility ratio
        den = max(abs(price_volatility), 1e-8)
        vol_ratio = implied_volatility / den
        eng.append(vol_ratio)
        
        # Feature 12: Short volume trend relative to price trend
        if len(close_prices) >= 5 and len(short_volume) >= 5:
            price_change = close_prices[-1] / max(abs(close_prices[-5]), 1e-8) - 1
            short_vol_change = short_volume[-1] / max(abs(short_volume[-5]), 1e-8) - 1
            short_price_trend_ratio = short_vol_change - price_change
        else:
            short_price_trend_ratio = 0
        eng.append(short_price_trend_ratio)
        
        # Feature 13: RSI (14-day)
        if len(close_prices) >= 14:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain[-14:])
            avg_loss = np.mean(loss[-14:])
            den = max(abs(avg_loss), 1e-8)
            rs = avg_gain / den
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Neutral RSI when not enough data
        eng.append(rsi)
        
        # Feature 14: Short interest to days to cover ratio
        den = max(abs(days_to_cover), 1e-8)
        si_dtc_ratio = short_interest / den
        eng.append(si_dtc_ratio)
        
        # Feature 15: Short volume concentration (ratio of max to mean)
        if len(short_volume) > 0:
            max_short_vol = np.max(short_volume)
            mean_short_vol = np.mean(short_volume)
            den = max(abs(mean_short_vol), 1e-8)
            short_vol_concentration = max_short_vol / den
        else:
            short_vol_concentration = 1
        eng.append(short_vol_concentration)
        
        # Feature 16: Synthetic short cost to implied volatility ratio
        den = max(abs(implied_volatility), 1e-8)
        synthetic_cost_vol_ratio = synthetic_short_cost / den
        eng.append(synthetic_cost_vol_ratio)
        
        # Feature 17: Short interest momentum (if we have previous data)
        short_interest_momentum = 0  # Default value
        if t > 0:
            prev_short_interest = data[t-1, 0]
            den = max(abs(prev_short_interest), 1e-8)
            short_interest_momentum = short_interest / den - 1
        eng.append(short_interest_momentum)
        
        # Feature 18: Average daily volume trend
        avg_vol_trend = 0  # Default value
        if t > 0:
            prev_avg_vol = data[t-1, 1]
            den = max(abs(prev_avg_vol), 1e-8)
            avg_vol_trend = avg_daily_volume / den - 1
        eng.append(avg_vol_trend)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: index 14 is out of bounds for axis 0 with size 14
⚠️ Function execution failed (attempt 1/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Constructs features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    # Constants
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume
        raw_keep.append(data[t, 0])  # Short interest
        raw_keep.append(data[t, 1])  # Average daily volume
        raw_keep.append(data[t, 2])  # Days to cover
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Keep options data which showed high importance
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        raw_keep.append(data[t, 67])  # shares_outstanding
        
        # Extract short interest volume and total trading volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Calculate MAX_NEW after determining raw features to keep
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short interest to total volume ratio (recent trend)
        short_ratio = np.mean(short_volume[-5:]) / np.mean(total_volume[-5:] + 1e-8)
        eng.append(short_ratio)
        
        # 2. Short interest momentum (rate of change)
        if t > 0:
            si_momentum = (data[t, 0] - data[t-1, 0]) / (max(abs(data[t-1, 0]), 1e-8))
        else:
            si_momentum = 0.0
        eng.append(si_momentum)
        
        # 3. Price momentum (5-day)
        price_momentum_5d = (close_prices[-1] - close_prices[-5]) / (max(abs(close_prices[-5]), 1e-8))
        eng.append(price_momentum_5d)
        
        # 4. Price volatility (standard deviation of returns)
        returns = np.diff(close_prices) / (close_prices[:-1] + 1e-8)
        volatility = np.std(returns) if len(returns) > 1 else 0.0
        eng.append(volatility)
        
        # 5. RSI (14-day)
        if len(close_prices) >= 2:
            diff = np.diff(close_prices)
            gain = np.sum(np.where(diff > 0, diff, 0))
            loss = np.sum(np.where(diff < 0, -diff, 0))
            avg_gain = gain / (len(diff) + 1e-8)
            avg_loss = loss / (len(diff) + 1e-8)
            rs = avg_gain / (avg_loss + 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50.0
        eng.append(rsi)
        
        # 6. Short volume trend
        short_volume_trend = np.polyfit(np.arange(len(short_volume)), short_volume, 1)[0] if len(short_volume) > 1 else 0.0
        eng.append(short_volume_trend)
        
        # 7. Total volume trend
        total_volume_trend = np.polyfit(np.arange(len(total_volume)), total_volume, 1)[0] if len(total_volume) > 1 else 0.0
        eng.append(total_volume_trend)
        
        # 8. Short volume to total volume ratio trend
        short_to_total_ratio = short_volume / (total_volume + 1e-8)
        ratio_trend = np.polyfit(np.arange(len(short_to_total_ratio)), short_to_total_ratio, 1)[0] if len(short_to_total_ratio) > 1 else 0.0
        eng.append(ratio_trend)
        
        # 9. Average true range (ATR)
        if len(high_prices) > 1 and len(low_prices) > 1 and len(close_prices) > 1:
            tr_values = []
            for i in range(1, len(high_prices)):
                tr1 = high_prices[i] - low_prices[i]
                tr2 = abs(high_prices[i] - close_prices[i-1])
                tr3 = abs(low_prices[i] - close_prices[i-1])
                tr_values.append(max(tr1, tr2, tr3))
            atr = np.mean(tr_values) if tr_values else 0.0
        else:
            atr = 0.0
        eng.append(atr)
        
        # 10. Bollinger Band Width
        if len(close_prices) > 1:
            sma = np.mean(close_prices)
            std = np.std(close_prices)
            bb_width = (2 * std) / (sma + 1e-8)
        else:
            bb_width = 0.0
        eng.append(bb_width)
        
        # 11. OHLC Range Ratio
        avg_range = np.mean(high_prices - low_prices) / (np.mean(close_prices) + 1e-8)
        eng.append(avg_range)
        
        # 12. Short Interest to Shares Outstanding Ratio
        si_to_shares = data[t, 0] / (data[t, 67] + 1e-8)
        eng.append(si_to_shares)
        
        # 13. Options Implied Volatility to Historical Volatility Ratio
        iv_to_hv = data[t, 66] / (volatility + 1e-8)
        eng.append(iv_to_hv)
        
        # 14. Short Interest Acceleration (second derivative)
        if t >= 2:
            si_accel = ((data[t, 0] - data[t-1, 0]) - (data[t-1, 0] - data[t-2, 0])) / (max(abs(data[t-2, 0]), 1e-8))
        else:
            si_accel = 0.0
        eng.append(si_accel)
        
        # 15. Short Volume Concentration (ratio of recent to overall)
        recent_short_vol = np.mean(short_volume[-3:])
        overall_short_vol = np.mean(short_volume)
        short_vol_concentration = recent_short_vol / (overall_short_vol + 1e-8)
        eng.append(short_vol_concentration)
        
        # 16. Price to Volume Correlation
        if len(close_prices) > 2 and len(total_volume) > 2:
            price_vol_corr = np.corrcoef(close_prices[-min(len(close_prices), len(total_volume)):], 
                                        total_volume[-min(len(close_prices), len(total_volume)):])[0, 1]
            if np.isnan(price_vol_corr):
                price_vol_corr = 0.0
        else:
            price_vol_corr = 0.0
        eng.append(price_vol_corr)
        
        # 17. Options Put/Call Ratio Trend
        if t >= 2:
            pc_ratio_trend = (data[t, 64] - data[t-2, 64]) / (max(abs(data[t-2, 64]), 1e-8))
        else:
            pc_ratio_trend = 0.0
        eng.append(pc_ratio_trend)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (15,) (14,) 
⚠️ Function execution failed (attempt 2/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Constructs features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    # Constants
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (critical baseline features)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values instead of all 60 values
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Keep options data which likely has predictive power for short interest
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        raw_keep.append(data[t, 67])  # shares_outstanding
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep recent short volume and total volume
        raw_keep.append(short_volume[-1])  # Most recent short volume
        raw_keep.append(total_volume[-1])  # Most recent total volume
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (daily short volume / daily total volume)
        short_volume_ratio = np.divide(short_volume, np.maximum(total_volume, 1e-8))
        eng.append(np.mean(short_volume_ratio))  # Average short volume ratio
        
        # 2. Short Interest to Outstanding Shares Ratio
        si_to_outstanding = data[t, 0] / max(data[t, 67], 1e-8)
        eng.append(si_to_outstanding)
        
        # 3. Price Momentum (5-day)
        if len(close_prices) >= 5:
            momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1
            eng.append(momentum_5d)
        else:
            eng.append(0.0)
        
        # 4. Price Volatility (standard deviation of returns)
        if len(close_prices) >= 2:
            returns = np.diff(close_prices) / np.maximum(close_prices[:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0
            eng.append(volatility)
        else:
            eng.append(0.0)
        
        # 5. Average True Range (ATR) - volatility indicator
        if len(close_prices) >= 2:
            tr_values = []
            for i in range(1, len(close_prices)):
                high_low = high_prices[i] - low_prices[i]
                high_close_prev = abs(high_prices[i] - close_prices[i-1])
                low_close_prev = abs(low_prices[i] - close_prices[i-1])
                tr = max(high_low, high_close_prev, low_close_prev)
                tr_values.append(tr)
            atr = np.mean(tr_values) if tr_values else 0
            eng.append(atr)
        else:
            eng.append(0.0)
        
        # 6. RSI (Relative Strength Index) - 14 period
        if len(close_prices) >= 15:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain) if len(gain) > 0 else 0
            avg_loss = np.mean(loss) if len(loss) > 0 else 0
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
        else:
            eng.append(50.0)  # Neutral RSI value
        
        # 7. Short Volume Trend (slope of short volume over time)
        if len(short_volume) >= 5:
            x = np.arange(5)
            y = short_volume[-5:]
            slope = np.polyfit(x, y, 1)[0] if len(np.unique(y)) > 1 else 0
            eng.append(slope)
        else:
            eng.append(0.0)
        
        # 8. Options Put/Call Ratio Change
        if t > 0:
            put_call_change = data[t, 64] - data[t-1, 64]
            eng.append(put_call_change)
        else:
            eng.append(0.0)
        
        # 9. Short Interest to Volume Ratio
        si_to_volume = data[t, 0] / max(data[t, 1], 1e-8)
        eng.append(si_to_volume)
        
        # 10. Bollinger Band Width (volatility measure)
        if len(close_prices) >= 5:
            sma = np.mean(close_prices[-5:])
            std = np.std(close_prices[-5:])
            bb_width = (2 * std) / max(sma, 1e-8)
            eng.append(bb_width)
        else:
            eng.append(0.0)
        
        # 11. Price to Volume Ratio
        price_to_volume = close_prices[-1] / max(total_volume[-1], 1e-8)
        eng.append(price_to_volume)
        
        # 12. Short Cost Pressure (synthetic short cost * short interest)
        short_cost_pressure = data[t, 65] * data[t, 0]
        eng.append(short_cost_pressure)
        
        # 13. Implied Volatility to Historical Volatility Ratio
        if len(close_prices) >= 5:
            hist_vol = np.std(np.diff(close_prices[-5:]) / np.maximum(close_prices[-6:-1], 1e-8))
            iv_hv_ratio = data[t, 66] / max(hist_vol, 1e-8)
            eng.append(iv_hv_ratio)
        else:
            eng.append(0.0)
        
        # 14. Short Volume Acceleration (second derivative)
        if len(short_volume) >= 3:
            first_diff = np.diff(short_volume[-3:])
            acceleration = np.diff(first_diff)[0] if len(first_diff) > 1 else 0
            eng.append(acceleration)
        else:
            eng.append(0.0)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (15,) (14,) 
⚠️ Function execution failed (attempt 3/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Constructs features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    # Constants
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = []
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        raw_keep.append(short_interest)
        raw_keep.append(avg_volume)
        raw_keep.append(days_to_cover)
        
        # Extract OHLC data
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values
        raw_keep.append(close_prices[-1])  # Most recent close
        
        # Extract options data
        put_call_ratio = data[t, 64]
        synthetic_short_cost = data[t, 65]
        implied_volatility = data[t, 66]
        shares_outstanding = data[t, 67]
        
        # Keep important options data
        raw_keep.append(put_call_ratio)
        raw_keep.append(synthetic_short_cost)
        raw_keep.append(implied_volatility)
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Feature 1: Short volume to total volume ratio (recent)
        # This captures the proportion of short selling relative to total trading
        short_vol_ratio = np.zeros(short_volume.shape)
        for i in range(len(short_volume)):
            denom = max(abs(total_volume[i]), 1e-8)
            short_vol_ratio[i] = short_volume[i] / denom
        
        eng.append(np.mean(short_vol_ratio[-5:]))  # Average of last 5 days
        
        # Feature 2: Short interest to shares outstanding ratio
        # Measures how much of the float is being shorted
        si_to_shares = short_interest / max(abs(shares_outstanding), 1e-8)
        eng.append(si_to_shares)
        
        # Feature 3: Price momentum (5-day)
        # Captures recent price trend
        if len(close_prices) >= 5:
            momentum_5d = (close_prices[-1] / max(abs(close_prices[-5]), 1e-8)) - 1
        else:
            momentum_5d = 0
        eng.append(momentum_5d)
        
        # Feature 4: Price volatility (standard deviation of returns)
        # Measures price instability which can attract short sellers
        if len(close_prices) >= 3:
            returns = np.diff(close_prices) / np.maximum(np.abs(close_prices[:-1]), 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0
        else:
            volatility = 0
        eng.append(volatility)
        
        # Feature 5: Average true range (ATR) - volatility measure
        # Important for risk assessment in short positions
        tr_values = []
        for i in range(1, len(high_prices)):
            high_low = high_prices[i] - low_prices[i]
            high_close_prev = abs(high_prices[i] - close_prices[i-1])
            low_close_prev = abs(low_prices[i] - close_prices[i-1])
            tr = max(high_low, high_close_prev, low_close_prev)
            tr_values.append(tr)
        atr = np.mean(tr_values) if tr_values else 0
        eng.append(atr)
        
        # Feature 6: Short volume trend (3-day slope)
        # Captures acceleration in short selling activity
        if len(short_volume) >= 3:
            short_vol_trend = (short_volume[-1] - short_volume[-3]) / max(abs(short_volume[-3]), 1e-8)
        else:
            short_vol_trend = 0
        eng.append(short_vol_trend)
        
        # Feature 7: RSI (Relative Strength Index)
        # Indicates overbought/oversold conditions which can precede short interest changes
        if len(close_prices) >= 14:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain)
            avg_loss = np.mean(loss)
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Neutral value when insufficient data
        eng.append(rsi)
        
        # Feature 8: Bollinger Band Width
        # Measures volatility which can attract short sellers
        if len(close_prices) >= 5:
            sma = np.mean(close_prices[-5:])
            std = np.std(close_prices[-5:])
            bb_width = std / max(abs(sma), 1e-8)
        else:
            bb_width = 0
        eng.append(bb_width)
        
        # Feature 9: Short volume acceleration
        # Second derivative of short volume - captures changing momentum in short selling
        if len(short_volume) >= 5:
            short_vol_diff1 = short_volume[-1] - short_volume[-3]
            short_vol_diff2 = short_volume[-3] - short_volume[-5]
            short_vol_accel = short_vol_diff1 - short_vol_diff2
        else:
            short_vol_accel = 0
        eng.append(short_vol_accel)
        
        # Feature 10: Price to volume ratio
        # Indicates how much price movement is generated per unit of volume
        price_vol_ratio = close_prices[-1] / max(abs(total_volume[-1]), 1e-8)
        eng.append(price_vol_ratio)
        
        # Feature 11: Short interest momentum
        # Rate of change in short interest
        si_momentum = 0
        if t > 0 and abs(data[t-1, 0]) > 1e-8:
            si_momentum = (short_interest / max(abs(data[t-1, 0]), 1e-8)) - 1
        eng.append(si_momentum)
        
        # Feature 12: Implied volatility to historical volatility ratio
        # Indicates market expectations vs. realized volatility
        if volatility > 1e-8:
            iv_hv_ratio = implied_volatility / max(volatility, 1e-8)
        else:
            iv_hv_ratio = 1.0
        eng.append(iv_hv_ratio)
        
        # Feature 13: Short volume concentration
        # Measures if short volume is concentrated in recent days
        recent_short_vol = np.sum(short_volume[-3:])
        total_short_vol = np.sum(short_volume)
        short_vol_concentration = recent_short_vol / max(abs(total_short_vol), 1e-8)
        eng.append(short_vol_concentration)
        
        # Feature 14: VWAP (Volume Weighted Average Price)
        # Important price level that can act as support/resistance
        vwap = np.sum(close_prices * total_volume) / max(np.sum(total_volume), 1e-8)
        eng.append(vwap)
        
        # Feature 15: Price distance from VWAP
        # Indicates potential mean reversion opportunities
        price_vwap_distance = (close_prices[-1] / max(abs(vwap), 1e-8)) - 1
        eng.append(price_vwap_distance)
        
        # Feature 16: Short cost to implied volatility ratio
        # Measures the cost efficiency of shorting relative to expected volatility
        short_cost_iv_ratio = synthetic_short_cost / max(abs(implied_volatility), 1e-8)
        eng.append(short_cost_iv_ratio)
        
        # Feature 17: Volume trend
        # Captures changes in trading activity
        if len(total_volume) >= 5:
            vol_trend = (np.mean(total_volume[-3:]) / max(abs(np.mean(total_volume[-5:-2])), 1e-8)) - 1
        else:
            vol_trend = 0
        eng.append(vol_trend)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to ensure consistent width
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features.append(row)
    
    # Stack all rows into a 2D array
    features_array = np.stack(features, axis=0)
    
    # Handle NaN and infinite values
    features_array = np.nan_to_num(features_array, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features_array
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: index 14 is out of bounds for axis 0 with size 14
⚠️ Function execution failed (attempt 4/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Constructs features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    # Constants
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Extract options data
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep shares outstanding
        raw_keep.append(data[t, 67])  # shares_outstanding
        
        # Calculate MAX_NEW after determining raw_keep
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Feature 1: Short Volume Ratio (short volume / total volume)
        short_volume_ratio = np.zeros_like(short_volume)
        for i in range(len(short_volume)):
            den = max(abs(total_volume[i]), 1e-8)
            short_volume_ratio[i] = short_volume[i] / den
        
        # Average short volume ratio over the past 15 days
        eng.append(np.mean(short_volume_ratio))
        
        # Feature 2: Short Interest to Outstanding Shares Ratio
        shares_outstanding = max(abs(data[t, 67]), 1e-8)
        short_interest_to_shares = data[t, 0] / shares_outstanding
        eng.append(short_interest_to_shares)
        
        # Feature 3: Price Momentum (5-day)
        if len(close_prices) >= 5:
            momentum_5d = (close_prices[-1] / max(abs(close_prices[-5]), 1e-8)) - 1
            eng.append(momentum_5d)
        else:
            eng.append(0.0)
        
        # Feature 4: Price Momentum (10-day)
        if len(close_prices) >= 10:
            momentum_10d = (close_prices[-1] / max(abs(close_prices[-10]), 1e-8)) - 1
            eng.append(momentum_10d)
        else:
            eng.append(0.0)
        
        # Feature 5: Volatility (standard deviation of returns)
        if len(close_prices) >= 2:
            returns = np.diff(close_prices) / np.maximum(np.abs(close_prices[:-1]), 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0
            eng.append(volatility)
        else:
            eng.append(0.0)
        
        # Feature 6: Average True Range (ATR)
        if len(close_prices) >= 2:
            tr_values = []
            for i in range(1, len(close_prices)):
                high_low = high_prices[i] - low_prices[i]
                high_close_prev = abs(high_prices[i] - close_prices[i-1])
                low_close_prev = abs(low_prices[i] - close_prices[i-1])
                tr = max(high_low, high_close_prev, low_close_prev)
                tr_values.append(tr)
            atr = np.mean(tr_values) if tr_values else 0
            eng.append(atr)
        else:
            eng.append(0.0)
        
        # Feature 7: Short Volume Trend (ratio of recent to older short volume)
        if len(short_volume) >= 10:
            recent_short_vol = np.mean(short_volume[-5:])
            older_short_vol = np.mean(short_volume[-10:-5])
            den = max(abs(older_short_vol), 1e-8)
            short_vol_trend = recent_short_vol / den - 1
            eng.append(short_vol_trend)
        else:
            eng.append(0.0)
        
        # Feature 8: RSI (Relative Strength Index)
        if len(close_prices) >= 14:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain)
            avg_loss = np.mean(loss)
            den = max(abs(avg_loss), 1e-8)
            rs = avg_gain / den
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
        else:
            eng.append(0.0)
        
        # Feature 9: MACD (Moving Average Convergence Divergence)
        if len(close_prices) >= 26:
            ema12 = np.mean(close_prices[-12:])
            ema26 = np.mean(close_prices[-26:])
            macd = ema12 - ema26
            eng.append(macd)
        else:
            eng.append(0.0)
        
        # Feature 10: Bollinger Band Width
        if len(close_prices) >= 20:
            sma20 = np.mean(close_prices[-20:])
            std20 = np.std(close_prices[-20:])
            bb_width = (2 * std20) / max(abs(sma20), 1e-8)
            eng.append(bb_width)
        else:
            eng.append(0.0)
        
        # Feature 11: Short Interest Change Rate
        if t > 0:
            prev_short_interest = data[t-1, 0]
            den = max(abs(prev_short_interest), 1e-8)
            short_interest_change = (data[t, 0] / den) - 1
            eng.append(short_interest_change)
        else:
            eng.append(0.0)
        
        # Feature 12: Options Put/Call Ratio Change
        if t > 0:
            prev_put_call_ratio = data[t-1, 64]
            den = max(abs(prev_put_call_ratio), 1e-8)
            put_call_ratio_change = (data[t, 64] / den) - 1
            eng.append(put_call_ratio_change)
        else:
            eng.append(0.0)
        
        # Feature 13: Volume Trend
        if len(total_volume) >= 10:
            recent_vol = np.mean(total_volume[-5:])
            older_vol = np.mean(total_volume[-10:-5])
            den = max(abs(older_vol), 1e-8)
            vol_trend = recent_vol / den - 1
            eng.append(vol_trend)
        else:
            eng.append(0.0)
        
        # Feature 14: Price Range Ratio (High-Low)/Close
        if len(close_prices) > 0:
            price_range = np.mean((high_prices - low_prices) / np.maximum(np.abs(close_prices), 1e-8))
            eng.append(price_range)
        else:
            eng.append(0.0)
        
        # Feature 15: Implied Volatility to Historical Volatility Ratio
        if len(close_prices) >= 2 and data[t, 66] > 0:  # If implied volatility exists
            returns = np.diff(close_prices) / np.maximum(np.abs(close_prices[:-1]), 1e-8)
            hist_vol = np.std(returns) * np.sqrt(252) if len(returns) > 0 else 1e-8
            den = max(abs(hist_vol), 1e-8)
            iv_hv_ratio = data[t, 66] / den
            eng.append(iv_hv_ratio)
        else:
            eng.append(0.0)
        
        # Feature 16: Short Cost to Volatility Ratio
        if data[t, 66] > 0:  # If implied volatility exists
            den = max(abs(data[t, 66]), 1e-8)
            short_cost_vol_ratio = data[t, 65] / den
            eng.append(short_cost_vol_ratio)
        else:
            eng.append(0.0)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: index 14 is out of bounds for axis 0 with size 14
⚠️ Function execution failed (attempt 5/5)
⚠️ All function execution attempts failed, using fallback

🔧 Applying feature selection using fallback function...
Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 1: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 1 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 1}), (1, 'Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 1}), (2, 'Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 1})]
🔄 Retrying... (1/5)
Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 2: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 2 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 2}), (1, 'Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 2}), (2, 'Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 2})]
🔄 Retrying... (2/5)
Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 3: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 3 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 3}), (1, 'Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 3}), (2, 'Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 3})]
🔄 Retrying... (3/5)
Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 4: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 4 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 4}), (1, 'Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 4}), (2, 'Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 4})]
🔄 Retrying... (4/5)
Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 5: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 5 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 5}), (1, 'Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 5}), (2, 'Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 5})]
⚠️ All 5 attempts failed, using fallback function
🆘 Using fallback feature selection...
Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 1: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 1 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 1}), (1, 'Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 1}), (2, 'Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 1})]
🔄 Retrying... (1/5)
Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 2: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 2 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 2}), (1, 'Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 2}), (2, 'Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 2})]
🔄 Retrying... (2/5)
Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 3: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 3 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 3}), (1, 'Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 3}), (2, 'Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 3})]
🔄 Retrying... (3/5)
Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 4: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 4 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 4}), (1, 'Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 4}), (2, 'Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 4})]
🔄 Retrying... (4/5)
Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 5: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 5 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 5}), (1, 'Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 5}), (2, 'Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 5})]
⚠️ All 5 attempts failed, using fallback function
🆘 Using fallback feature selection...
Training data shape: (106, 4, 97) -> (106, 4, 15)
Validation data shape: (36, 4, 97) -> (36, 4, 15)
⚠️ Total errors encountered: 720
  Error 1: ValueError - cannot reshape array of size 95 into shape (15,4)
  Error 2: ValueError - cannot reshape array of size 95 into shape (15,4)
  Error 3: ValueError - cannot reshape array of size 95 into shape (15,4)

==================================================
Training Iteration 1 (fallback) (SVM)
==================================================
Training SVM model...

Iteration 1 (fallback) Performance:
MAE: 887511.5331
RMSE: 1267641.3191
MAPE: 6.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 31
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0007, rank=1
   2. Feature_1_t2: importance=0.0006, rank=2
   3. Feature_2_t0: importance=0.0005, rank=3
   4. Feature_13_t1: importance=0.0005, rank=4
   5. Feature_0_t3: importance=0.0004, rank=5
📊 No significant improvement. Change: -1.06%

📈 Current best MAPE: 5.68%
🔄 Iterations without improvement: 1/5

======================================================================
ITERATION 2
======================================================================
🤖 Calling Claude for iteration 2...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (most important from previous iterations)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values (last day)
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Keep options data which showed importance in previous iterations
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep shares outstanding
        raw_keep.append(data[t, 67])  # shares_outstanding
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (daily short volume / daily total volume)
        # This measures the proportion of daily trading that is short selling
        short_volume_ratio = np.zeros_like(short_volume)
        for i in range(len(short_volume)):
            den = max(abs(total_volume[i]), 1e-8)
            short_volume_ratio[i] = short_volume[i] / den
        
        # Average short volume ratio over the past 15 days
        eng.append(np.mean(short_volume_ratio))
        
        # 2. Short Interest to Float Ratio
        # Measures how much of the available float is being shorted
        shares_outstanding = max(abs(data[t, 67]), 1e-8)
        short_interest_to_float = data[t, 0] / shares_outstanding
        eng.append(short_interest_to_float)
        
        # 3. Price Momentum (5-day)
        # Captures recent price trend
        if len(close_prices) >= 5:
            momentum_5d = (close_prices[-1] / max(abs(close_prices[-5]), 1e-8)) - 1
        else:
            momentum_5d = 0
        eng.append(momentum_5d)
        
        # 4. Price Momentum (10-day)
        # Captures medium-term price trend
        if len(close_prices) >= 10:
            momentum_10d = (close_prices[-1] / max(abs(close_prices[-10]), 1e-8)) - 1
        else:
            momentum_10d = 0
        eng.append(momentum_10d)
        
        # 5. Volatility (standard deviation of returns over 10 days)
        # Measures price volatility
        if len(close_prices) >= 10:
            returns = np.diff(close_prices[-10:]) / np.maximum(abs(close_prices[-11:-1]), 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0
        else:
            volatility = 0
        eng.append(volatility)
        
        # 6. Average True Range (ATR) - volatility indicator
        # Measures market volatility
        tr_values = []
        for i in range(1, len(high_prices)):
            tr1 = high_prices[i] - low_prices[i]
            tr2 = abs(high_prices[i] - close_prices[i-1])
            tr3 = abs(low_prices[i] - close_prices[i-1])
            tr_values.append(max(tr1, tr2, tr3))
        atr = np.mean(tr_values) if tr_values else 0
        eng.append(atr)
        
        # 7. RSI (Relative Strength Index) - 14 period
        # Momentum oscillator measuring speed and change of price movements
        if len(close_prices) >= 15:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain) if len(gain) > 0 else 0
            avg_loss = np.mean(loss) if len(loss) > 0 else 0
            
            if avg_loss == 0:
                rsi = 100
            else:
                rs = avg_gain / max(avg_loss, 1e-8)
                rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Default value
        eng.append(rsi)
        
        # 8. Short Volume Trend
        # Measures the trend in short selling activity
        if len(short_volume) >= 5:
            short_volume_trend = (short_volume[-1] / max(abs(np.mean(short_volume[-5:])), 1e-8)) - 1
        else:
            short_volume_trend = 0
        eng.append(short_volume_trend)
        
        # 9. Short Interest to Days to Cover Ratio
        # Combines two important metrics
        days_to_cover = max(abs(data[t, 2]), 1e-8)
        short_interest_to_dtc = data[t, 0] / days_to_cover
        eng.append(short_interest_to_dtc)
        
        # 10. Options Implied Volatility to Historical Volatility Ratio
        # Measures market expectations vs. realized volatility
        implied_vol = data[t, 66]
        iv_to_hv_ratio = implied_vol / max(abs(volatility), 1e-8) if volatility > 0 else 0
        eng.append(iv_to_hv_ratio)
        
        # 11. Short Interest Change Rate
        # Measures the rate of change in short interest
        if t > 0:
            prev_short_interest = max(abs(data[t-1, 0]), 1e-8)
            short_interest_change = (data[t, 0] / prev_short_interest) - 1
        else:
            short_interest_change = 0
        eng.append(short_interest_change)
        
        # 12. Volume Pressure (ratio of recent volume to longer-term average)
        # Identifies unusual trading activity
        recent_vol = np.mean(total_volume[-5:]) if len(total_volume) >= 5 else np.mean(total_volume)
        avg_vol = max(abs(data[t, 1]), 1e-8)  # average daily volume
        volume_pressure = recent_vol / avg_vol
        eng.append(volume_pressure)
        
        # 13. Price to Volume Correlation
        # Measures relationship between price and volume movements
        if len(close_prices) >= 10 and len(total_volume) >= 10:
            price_returns = np.diff(close_prices[-10:]) / np.maximum(abs(close_prices[-11:-1]), 1e-8)
            volume_changes = np.diff(total_volume[-10:]) / np.maximum(abs(total_volume[-11:-1]), 1e-8)
            
            if len(price_returns) > 0 and len(volume_changes) > 0:
                # Safe correlation calculation
                price_returns_demean = price_returns - np.mean(price_returns)
                volume_changes_demean = volume_changes - np.mean(volume_changes)
                
                num = np.sum(price_returns_demean * volume_changes_demean)
                den1 = np.sqrt(np.sum(price_returns_demean**2))
                den2 = np.sqrt(np.sum(volume_changes_demean**2))
                den = max(abs(den1 * den2), 1e-8)
                
                price_volume_corr = num / den
            else:
                price_volume_corr = 0
        else:
            price_volume_corr = 0
        eng.append(price_volume_corr)
        
        # 14. Bollinger Band Width
        # Measures volatility
        if len(close_prices) >= 10:
            sma = np.mean(close_prices[-10:])
            std = np.std(close_prices[-10:])
            bb_width = (2 * std) / max(abs(sma), 1e-8)
        else:
            bb_width = 0
        eng.append(bb_width)
        
        # 15. Options Put-Call Ratio Change
        # Measures change in sentiment
        if t > 0:
            prev_pc_ratio = max(abs(data[t-1, 64]), 1e-8)
            pc_ratio_change = (data[t, 64] / prev_pc_ratio) - 1
        else:
            pc_ratio_change = 0
        eng.append(pc_ratio_change)
        
        # 16. Short Cost Pressure
        # Measures the cost pressure of shorting
        if t > 0:
            prev_short_cost = max(abs(data[t-1, 65]), 1e-8)
            short_cost_change = (data[t, 65] / prev_short_cost) - 1
        else:
            short_cost_change = 0
        eng.append(short_cost_change)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: index 14 is out of bounds for axis 0 with size 14
⚠️ Function execution failed (attempt 1/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features_array = []
    
    for t in range(lookback_window):
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        # Keep these key raw features
        raw_keep.append(short_interest)  # Short interest
        raw_keep.append(avg_volume)      # Average daily volume
        raw_keep.append(days_to_cover)   # Days to cover
        
        # Extract OHLC data
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Options data
        put_call_ratio = data[t, 64]
        synthetic_short_cost = data[t, 65]
        implied_volatility = data[t, 66]
        shares_outstanding = data[t, 67]
        
        # Keep important options data
        raw_keep.append(put_call_ratio)
        raw_keep.append(implied_volatility)
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Calculate MAX_NEW after determining raw_keep
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Feature 1: Short interest to shares outstanding ratio
        # This measures what percentage of the total shares are being shorted
        si_to_shares = short_interest / max(shares_outstanding, 1e-8)
        eng.append(si_to_shares)
        
        # Feature 2: Short volume ratio (average of last 5 days)
        # Higher ratio indicates increasing short selling pressure
        recent_short_ratio = np.mean(short_volume[-5:] / np.maximum(total_volume[-5:], 1e-8))
        eng.append(recent_short_ratio)
        
        # Feature 3: Price momentum (5-day)
        # Captures recent price trend
        if len(close_prices) >= 5:
            price_momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1
        else:
            price_momentum_5d = 0
        eng.append(price_momentum_5d)
        
        # Feature 4: Price momentum (10-day)
        # Captures medium-term price trend
        if len(close_prices) >= 10:
            price_momentum_10d = (close_prices[-1] / max(close_prices[-10], 1e-8)) - 1
        else:
            price_momentum_10d = 0
        eng.append(price_momentum_10d)
        
        # Feature 5: Volatility (standard deviation of returns over 10 days)
        # Higher volatility often correlates with short interest changes
        if len(close_prices) >= 10:
            returns = np.diff(close_prices[-10:]) / np.maximum(close_prices[-11:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0
        else:
            volatility = 0
        eng.append(volatility)
        
        # Feature 6: Average true range (ATR) - volatility indicator
        # Measures market volatility
        atr_sum = 0
        if len(close_prices) >= 2:
            for i in range(1, min(10, len(close_prices))):
                true_range = max(
                    high_prices[-i] - low_prices[-i],
                    abs(high_prices[-i] - close_prices[-(i+1)]),
                    abs(low_prices[-i] - close_prices[-(i+1)])
                )
                atr_sum += true_range
            atr = atr_sum / min(10, len(close_prices)-1)
        else:
            atr = 0
        eng.append(atr)
        
        # Feature 7: Short volume trend
        # Measures if short volume is increasing or decreasing
        if len(short_volume) >= 5:
            short_volume_trend = np.mean(short_volume[-3:]) / max(np.mean(short_volume[-5:-3]), 1e-8) - 1
        else:
            short_volume_trend = 0
        eng.append(short_volume_trend)
        
        # Feature 8: Total volume trend
        # Measures if overall trading volume is increasing or decreasing
        if len(total_volume) >= 5:
            volume_trend = np.mean(total_volume[-3:]) / max(np.mean(total_volume[-5:-3]), 1e-8) - 1
        else:
            volume_trend = 0
        eng.append(volume_trend)
        
        # Feature 9: Short interest to average volume ratio
        # Alternative measure of days to cover
        si_to_avg_vol = short_interest / max(avg_volume, 1e-8)
        eng.append(si_to_avg_vol)
        
        # Feature 10: Relative strength index (RSI)
        # Momentum oscillator that measures speed and change of price movements
        if len(close_prices) >= 14:
            delta = np.diff(close_prices[-14:])
            gain = np.sum(np.where(delta > 0, delta, 0))
            loss = np.sum(np.where(delta < 0, -delta, 0))
            
            avg_gain = gain / 14
            avg_loss = loss / 14
            
            if avg_loss == 0:
                rsi = 100
            else:
                rs = avg_gain / max(avg_loss, 1e-8)
                rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Neutral value when not enough data
        eng.append(rsi)
        
        # Feature 11: Short volume to total volume ratio change
        # Measures the change in short selling intensity
        if len(short_volume) >= 10 and len(total_volume) >= 10:
            recent_ratio = np.mean(short_volume[-5:]) / max(np.mean(total_volume[-5:]), 1e-8)
            older_ratio = np.mean(short_volume[-10:-5]) / max(np.mean(total_volume[-10:-5]), 1e-8)
            ratio_change = recent_ratio / max(older_ratio, 1e-8) - 1
        else:
            ratio_change = 0
        eng.append(ratio_change)
        
        # Feature 12: Implied volatility to historical volatility ratio
        # Measures market expectations vs. actual volatility
        if len(close_prices) >= 10:
            returns = np.diff(close_prices[-10:]) / np.maximum(close_prices[-11:-1], 1e-8)
            hist_vol = np.std(returns) * np.sqrt(252) if len(returns) > 0 else 1e-8
            iv_hv_ratio = implied_volatility / max(hist_vol, 1e-8)
        else:
            iv_hv_ratio = 1
        eng.append(iv_hv_ratio)
        
        # Feature 13: Price to moving average ratio
        # Measures current price relative to trend
        if len(close_prices) >= 10:
            ma10 = np.mean(close_prices[-10:])
            price_to_ma = close_prices[-1] / max(ma10, 1e-8)
        else:
            price_to_ma = 1
        eng.append(price_to_ma)
        
        # Feature 14: Short interest momentum
        # Measures the rate of change in short interest
        si_momentum = 0  # Placeholder as we don't have historical short interest in this time slice
        eng.append(si_momentum)
        
        # Feature 15: Synthetic short cost to implied volatility ratio
        # Measures the cost efficiency of shorting relative to expected volatility
        synth_cost_to_iv = synthetic_short_cost / max(implied_volatility, 1e-8)
        eng.append(synth_cost_to_iv)
        
        # Feature 16: High-Low range relative to close
        # Measures intraday volatility
        if len(close_prices) >= 5:
            avg_hl_range = np.mean((high_prices[-5:] - low_prices[-5:]) / np.maximum(close_prices[-5:], 1e-8))
        else:
            avg_hl_range = 0
        eng.append(avg_hl_range)
        
        # Feature 17: Short volume acceleration
        # Measures if short selling is accelerating or decelerating
        if len(short_volume) >= 6:
            recent_change = short_volume[-1] - short_volume[-2]
            previous_change = short_volume[-2] - short_volume[-3]
            short_accel = recent_change - previous_change
        else:
            short_accel = 0
        eng.append(short_accel)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
            
        features_array.append(row)
    
    # Stack all rows into a 2D array
    features = np.stack(features_array, axis=0)
    
    # Handle NaN and infinity values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (9,) (10,) 
⚠️ Function execution failed (attempt 2/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    all_features = []
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (critical baseline features)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values instead of all 60 values
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Keep key options data (high importance in previous iterations)
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep shares outstanding (important for relative measures)
        raw_keep.append(data[t, 67])  # shares_outstanding
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (recent trend)
        # This captures the proportion of short selling relative to total volume
        short_ratio = np.divide(short_volume, total_volume, out=np.zeros_like(short_volume), where=total_volume > 1e-8)
        recent_short_ratio = np.mean(short_ratio[-5:])
        eng.append(recent_short_ratio)
        
        # 2. Short Interest to Float Ratio
        # Normalize short interest by shares outstanding to get relative measure
        si_to_float = data[t, 0] / max(data[t, 67], 1e-8)
        eng.append(si_to_float)
        
        # 3. Price Momentum (5-day)
        # Captures recent price trend
        if len(close_prices) >= 5:
            momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1
        else:
            momentum_5d = 0
        eng.append(momentum_5d)
        
        # 4. Price Volatility (standard deviation of returns)
        # Measures recent price instability
        if len(close_prices) >= 3:
            returns = np.diff(close_prices) / np.maximum(close_prices[:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0
        else:
            volatility = 0
        eng.append(volatility)
        
        # 5. Short Volume Trend
        # Captures if short selling is increasing or decreasing
        if len(short_volume) >= 5:
            short_vol_trend = np.mean(short_volume[-3:]) / max(np.mean(short_volume[-5:-3]), 1e-8) - 1
        else:
            short_vol_trend = 0
        eng.append(short_vol_trend)
        
        # 6. Short Interest to Volume Ratio
        # Relates short interest to trading volume
        si_to_volume = data[t, 0] / max(data[t, 1], 1e-8)
        eng.append(si_to_volume)
        
        # 7. Price Range Ratio
        # Captures recent price volatility as high-low range
        if len(high_prices) > 0 and len(low_prices) > 0:
            price_range = np.mean(high_prices[-5:] - low_prices[-5:]) / max(np.mean(close_prices[-5:]), 1e-8)
        else:
            price_range = 0
        eng.append(price_range)
        
        # 8. Options Implied Volatility to Historical Volatility Ratio
        # Compares market expectations to realized volatility
        iv_to_hv_ratio = data[t, 66] / max(volatility, 1e-8)
        eng.append(iv_to_hv_ratio)
        
        # 9. Short Cost Momentum
        # Captures trend in cost of shorting
        if t > 0:
            short_cost_change = data[t, 65] / max(data[t-1, 65], 1e-8) - 1
        else:
            short_cost_change = 0
        eng.append(short_cost_change)
        
        # 10. Put-Call Ratio Change
        # Captures trend in options sentiment
        if t > 0:
            pc_ratio_change = data[t, 64] / max(data[t-1, 64], 1e-8) - 1
        else:
            pc_ratio_change = 0
        eng.append(pc_ratio_change)
        
        # 11. Short Interest Momentum
        # Captures trend in short interest
        if t > 0:
            si_momentum = data[t, 0] / max(data[t-1, 0], 1e-8) - 1
        else:
            si_momentum = 0
        eng.append(si_momentum)
        
        # 12. Volume Surge Indicator
        # Identifies unusual volume that might signal short covering
        if len(total_volume) >= 10:
            recent_vol = np.mean(total_volume[-3:])
            past_vol = np.mean(total_volume[-10:-3])
            volume_surge = recent_vol / max(past_vol, 1e-8) - 1
        else:
            volume_surge = 0
        eng.append(volume_surge)
        
        # 13. Days to Cover Change
        # Captures trend in short covering difficulty
        if t > 0:
            dtc_change = data[t, 2] / max(data[t-1, 2], 1e-8) - 1
        else:
            dtc_change = 0
        eng.append(dtc_change)
        
        # 14. Short Volume to Total Volume Ratio Volatility
        # Measures stability of short selling behavior
        short_ratio_std = np.std(short_ratio) if len(short_ratio) > 0 else 0
        eng.append(short_ratio_std)
        
        # 15. Price to Short Cost Ratio
        # Relates price level to cost of shorting
        price_to_short_cost = close_prices[-1] / max(data[t, 65], 1e-8)
        eng.append(price_to_short_cost)
        
        # 16. Short Interest to Days to Cover Ratio
        # Combined measure of short interest and covering difficulty
        si_to_dtc = data[t, 0] / max(data[t, 2], 1e-8)
        eng.append(si_to_dtc)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to ensure consistent size
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
            
        all_features.append(row)
    
    # Stack all rows into a 2D array
    features_array = np.stack(all_features, axis=0)
    
    # Handle NaN and infinite values
    features_array = np.nan_to_num(features_array, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features_array
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (15,) (14,) (15,) (14,) 
⚠️ Function execution failed (attempt 3/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features_list = []
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (most important from previous iterations)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover
        
        # Extract OHLC data for the current timestep
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values instead of all 60 values
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Keep options data which showed importance in previous iterations
        raw_keep.append(data[t, 64])  # options_put_call_volume_ratio
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Calculate how many new features we can add
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (Short Volume / Total Volume) - recent trend
        short_volume_ratio = np.zeros_like(short_volume)
        for i in range(len(short_volume)):
            den = max(abs(total_volume[i]), 1e-8)
            short_volume_ratio[i] = short_volume[i] / den
        
        # Recent short volume ratio (last 5 days average)
        recent_short_ratio = np.mean(short_volume_ratio[-5:])
        eng.append(recent_short_ratio)
        
        # 2. Short Interest to Float Ratio
        shares_outstanding = max(data[t, 67], 1e-8)
        short_interest_to_float = data[t, 0] / shares_outstanding
        eng.append(short_interest_to_float)
        
        # 3. Price momentum (5-day)
        if len(close_prices) >= 5:
            momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1
        else:
            momentum_5d = 0
        eng.append(momentum_5d)
        
        # 4. Price momentum (10-day)
        if len(close_prices) >= 10:
            momentum_10d = (close_prices[-1] / max(close_prices[-10], 1e-8)) - 1
        else:
            momentum_10d = 0
        eng.append(momentum_10d)
        
        # 5. Volatility (standard deviation of returns over last 10 days)
        if len(close_prices) >= 10:
            returns = np.diff(close_prices[-10:]) / np.maximum(close_prices[-11:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0
        else:
            volatility = 0
        eng.append(volatility)
        
        # 6. Average True Range (ATR) - volatility indicator
        atr_sum = 0
        if len(close_prices) >= 2:
            for i in range(1, min(10, len(close_prices))):
                high_low = high_prices[-i] - low_prices[-i]
                high_close = abs(high_prices[-i] - close_prices[-(i+1)])
                low_close = abs(low_prices[-i] - close_prices[-(i+1)])
                true_range = max(high_low, high_close, low_close)
                atr_sum += true_range
            atr = atr_sum / min(9, len(close_prices)-1)
        else:
            atr = 0
        eng.append(atr)
        
        # 7. RSI (Relative Strength Index) - 14 period
        if len(close_prices) >= 15:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain[-14:])
            avg_loss = np.mean(loss[-14:])
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Neutral value when not enough data
        eng.append(rsi)
        
        # 8. Short Volume Trend (ratio of recent 5-day to previous 5-day)
        if len(short_volume) >= 10:
            recent_short = np.sum(short_volume[-5:])
            previous_short = np.sum(short_volume[-10:-5])
            short_trend = recent_short / max(previous_short, 1e-8)
        else:
            short_trend = 1  # Neutral value
        eng.append(short_trend)
        
        # 9. Short Interest Acceleration (change in short interest rate)
        # This is a proxy since we don't have historical short interest in the data
        short_vol_accel = 0
        if len(short_volume_ratio) >= 10:
            recent_change = np.mean(short_volume_ratio[-5:]) - np.mean(short_volume_ratio[-10:-5])
            short_vol_accel = recent_change
        eng.append(short_vol_accel)
        
        # 10. Price to Volume Ratio (normalized)
        price_to_volume = close_prices[-1] / max(np.mean(total_volume[-5:]), 1e-8)
        eng.append(price_to_volume)
        
        # 11. Bollinger Band Width (volatility measure)
        if len(close_prices) >= 10:
            sma = np.mean(close_prices[-10:])
            std = np.std(close_prices[-10:])
            bb_width = (2 * std) / max(sma, 1e-8)
        else:
            bb_width = 0
        eng.append(bb_width)
        
        # 12. MACD Line (momentum indicator)
        if len(close_prices) >= 12:
            ema12 = np.mean(close_prices[-12:])  # Simple approximation of EMA
            ema26 = np.mean(close_prices[-min(26, len(close_prices)):])
            macd_line = ema12 - ema26
        else:
            macd_line = 0
        eng.append(macd_line)
        
        # 13. Options Implied Volatility to Historical Volatility Ratio
        iv_to_hv_ratio = data[t, 66] / max(volatility, 1e-8) if volatility > 0 else 0
        eng.append(iv_to_hv_ratio)
        
        # 14. Short Interest to Days to Cover Ratio
        si_to_dtc = data[t, 0] / max(data[t, 2], 1e-8)
        eng.append(si_to_dtc)
        
        # 15. Short Volume Ratio Volatility (std dev of short volume ratio)
        short_ratio_vol = np.std(short_volume_ratio) if len(short_volume_ratio) > 0 else 0
        eng.append(short_ratio_vol)
        
        # 16. Price Range Ratio (High-Low)/Close - recent average
        price_range_ratio = np.mean((high_prices[-5:] - low_prices[-5:]) / np.maximum(close_prices[-5:], 1e-8))
        eng.append(price_range_ratio)
        
        # 17. Volume Trend (ratio of recent volume to previous period)
        if len(total_volume) >= 10:
            recent_vol = np.sum(total_volume[-5:])
            previous_vol = np.sum(total_volume[-10:-5])
            volume_trend = recent_vol / max(previous_vol, 1e-8)
        else:
            volume_trend = 1
        eng.append(volume_trend)
        
        # 18. Put-Call Ratio Trend (current vs average)
        put_call_ratio = data[t, 64]
        eng.append(put_call_ratio)
        
        # Ensure we don't exceed MAX_NEW features
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to ensure consistent size
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features_list.append(row)
    
    # Stack all rows into a 2D array
    features_array = np.stack(features_list)
    
    # Handle NaN, inf values
    features_array = np.nan_to_num(features_array, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features_array
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: index 14 is out of bounds for axis 0 with size 14
⚠️ Function execution failed (attempt 4/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features_list = []
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (most important from previous iterations)
        raw_keep.append(data[t, 0])  # Short interest
        raw_keep.append(data[t, 1])  # Average daily volume
        raw_keep.append(data[t, 2])  # Days to cover
        
        # Keep options data (important from previous iterations)
        raw_keep.append(data[t, 64])  # Options put/call volume ratio
        raw_keep.append(data[t, 65])  # Options synthetic short cost
        raw_keep.append(data[t, 66])  # Options avg implied volatility
        raw_keep.append(data[t, 67])  # Shares outstanding
        
        # Extract OHLC data for the last 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep only the most recent OHLC values instead of all 60 values
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Calculate MAX_NEW after determining raw features to keep
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (daily short volume / daily total volume)
        # This measures the proportion of daily trading that is short selling
        short_volume_ratio = np.zeros_like(short_volume)
        for i in range(len(short_volume)):
            den = max(abs(total_volume[i]), 1e-8)
            short_volume_ratio[i] = short_volume[i] / den
        
        # Average short volume ratio over the last 5 days
        if len(short_volume_ratio) >= 5:
            avg_short_vol_ratio_5d = np.mean(short_volume_ratio[-5:])
        else:
            avg_short_vol_ratio_5d = 0.0
        eng.append(avg_short_vol_ratio_5d)
        
        # 2. Price momentum features
        if len(close_prices) >= 5:
            # 5-day price momentum (current close / 5-day ago close - 1)
            price_momentum_5d = close_prices[-1] / max(abs(close_prices[-5]), 1e-8) - 1
            eng.append(price_momentum_5d)
            
            # 5-day price volatility (std of returns)
            returns = np.diff(close_prices[-6:]) / np.maximum(abs(close_prices[-6:-1]), 1e-8)
            price_volatility_5d = np.std(returns) if len(returns) > 0 else 0.0
            eng.append(price_volatility_5d)
        else:
            eng.append(0.0)  # placeholder for price_momentum_5d
            eng.append(0.0)  # placeholder for price_volatility_5d
        
        # 3. Volume trend features
        if len(total_volume) >= 5:
            # Volume trend (ratio of recent volume to previous period)
            recent_vol_avg = np.mean(total_volume[-5:])
            prev_vol_avg = np.mean(total_volume[-10:-5]) if len(total_volume) >= 10 else np.mean(total_volume[:-5])
            den = max(abs(prev_vol_avg), 1e-8)
            volume_trend = recent_vol_avg / den - 1
            eng.append(volume_trend)
        else:
            eng.append(0.0)  # placeholder for volume_trend
        
        # 4. Short interest to float ratio
        # This measures how much of the available float is being shorted
        shares_outstanding = data[t, 67]
        short_interest = data[t, 0]
        den = max(abs(shares_outstanding), 1e-8)
        short_interest_to_float = short_interest / den
        eng.append(short_interest_to_float)
        
        # 5. Price range features
        if len(high_prices) >= 5 and len(low_prices) >= 5:
            # Average true range (ATR) - volatility indicator
            tr_values = []
            for i in range(1, min(5, len(high_prices))):
                high_val = high_prices[-i]
                low_val = low_prices[-i]
                prev_close = close_prices[-i-1] if i < len(close_prices) else close_prices[-i]
                tr = max(high_val - low_val, abs(high_val - prev_close), abs(low_val - prev_close))
                tr_values.append(tr)
            atr_5d = np.mean(tr_values) if tr_values else 0.0
            eng.append(atr_5d)
            
            # Normalized price range
            avg_price = np.mean(close_prices[-5:])
            den = max(abs(avg_price), 1e-8)
            norm_atr = atr_5d / den
            eng.append(norm_atr)
        else:
            eng.append(0.0)  # placeholder for atr_5d
            eng.append(0.0)  # placeholder for norm_atr
        
        # 6. Short volume acceleration
        if len(short_volume) >= 10:
            recent_short_vol = np.mean(short_volume[-5:])
            prev_short_vol = np.mean(short_volume[-10:-5])
            den = max(abs(prev_short_vol), 1e-8)
            short_vol_accel = recent_short_vol / den - 1
            eng.append(short_vol_accel)
        else:
            eng.append(0.0)  # placeholder for short_vol_accel
        
        # 7. Options-related features
        # Put/call ratio change
        put_call_ratio = data[t, 64]
        if t > 0:
            prev_put_call_ratio = data[t-1, 64]
            den = max(abs(prev_put_call_ratio), 1e-8)
            put_call_ratio_change = put_call_ratio / den - 1
        else:
            put_call_ratio_change = 0.0
        eng.append(put_call_ratio_change)
        
        # 8. Relative strength index (RSI)
        if len(close_prices) >= 14:
            # Calculate price changes
            delta = np.diff(close_prices[-15:])
            
            # Separate gains (up) from losses (down)
            up = np.maximum(delta, 0)
            down = np.maximum(-delta, 0)
            
            # Calculate average gain and average loss
            avg_gain = np.mean(up)
            avg_loss = np.mean(down)
            
            # Calculate RS and RSI
            den = max(abs(avg_loss), 1e-8)
            rs = avg_gain / den
            rsi = 100 - (100 / (1 + rs))
            eng.append(rsi)
        else:
            eng.append(50.0)  # Default RSI value
        
        # 9. Short interest momentum
        if t > 0:
            prev_short_interest = data[t-1, 0]
            den = max(abs(prev_short_interest), 1e-8)
            short_interest_momentum = short_interest / den - 1
            eng.append(short_interest_momentum)
        else:
            eng.append(0.0)  # placeholder for short_interest_momentum
        
        # 10. Days to cover change
        days_to_cover = data[t, 2]
        if t > 0:
            prev_days_to_cover = data[t-1, 2]
            den = max(abs(prev_days_to_cover), 1e-8)
            days_to_cover_change = days_to_cover / den - 1
            eng.append(days_to_cover_change)
        else:
            eng.append(0.0)  # placeholder for days_to_cover_change
        
        # 11. Bollinger Band Width (volatility measure)
        if len(close_prices) >= 20:
            sma_20 = np.mean(close_prices[-20:])
            std_20 = np.std(close_prices[-20:])
            bb_width = (2 * std_20) / max(abs(sma_20), 1e-8)
            eng.append(bb_width)
        else:
            eng.append(0.0)  # placeholder for bb_width
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to MAX_TOTAL
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant', constant_values=0)
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features_list.append(row)
    
    # Stack all rows into a 2D array
    features_array = np.stack(features_list, axis=0)
    
    # Handle NaN, inf values
    features_array = np.nan_to_num(features_array, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features_array
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: index 14 is out of bounds for axis 0 with size 14
⚠️ Function execution failed (attempt 5/5)
⚠️ All function execution attempts failed, using fallback

🔧 Applying feature selection using fallback function...
Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 1: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 1 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 1}), (1, 'Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 1}), (2, 'Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 1})]
🔄 Retrying... (1/5)
Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 2: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 2 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 2}), (1, 'Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 2}), (2, 'Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 2})]
🔄 Retrying... (2/5)
Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 3: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 3 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 3}), (1, 'Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 3}), (2, 'Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 3})]
🔄 Retrying... (3/5)
Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 4: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 4 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 4}), (1, 'Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 4}), (2, 'Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 4})]
🔄 Retrying... (4/5)
Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 36 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 37 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 38 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 39 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 40 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 41 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 42 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 43 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 44 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 45 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 46 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 47 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 48 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 49 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 50 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 51 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 52 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 53 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 54 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 55 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 56 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 57 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 58 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 59 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 60 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 61 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 62 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 63 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 64 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 65 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 66 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 67 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 68 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 69 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 70 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 71 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 72 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 73 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 74 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 75 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 76 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 77 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 78 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 79 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 80 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 81 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 82 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 83 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 84 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 85 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 86 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 87 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 88 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 89 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 90 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 91 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 92 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 93 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 94 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 95 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 96 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 97 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 98 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 99 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 100 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 101 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 102 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 103 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 104 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 105 in attempt 5: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 5 failed with error: High error rate: 106/106 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 5}), (1, 'Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 5}), (2, 'Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 5})]
⚠️ All 5 attempts failed, using fallback function
🆘 Using fallback feature selection...
Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 1: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 1: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 1 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 1}), (1, 'Error processing sample 1 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 1}), (2, 'Error processing sample 2 in attempt 1: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 1})]
🔄 Retrying... (1/5)
Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 2: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 2: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 2 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 2}), (1, 'Error processing sample 1 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 2}), (2, 'Error processing sample 2 in attempt 2: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 2})]
🔄 Retrying... (2/5)
Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 3: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 3: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 3 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 3}), (1, 'Error processing sample 1 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 3}), (2, 'Error processing sample 2 in attempt 3: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 3})]
🔄 Retrying... (3/5)
Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 4: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 4: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 4 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 4}), (1, 'Error processing sample 1 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 4}), (2, 'Error processing sample 2 in attempt 4: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 4})]
🔄 Retrying... (4/5)
Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 3 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 4 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 5 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 6 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 7 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 8 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 9 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 10 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 11 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 12 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 13 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 14 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 15 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 16 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 17 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 18 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 19 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 20 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 21 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 22 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 23 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 24 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 25 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 26 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 27 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 28 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 29 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 30 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 31 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 32 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 33 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 34 in attempt 5: cannot reshape array of size 95 into shape (15,4)
Error processing sample 35 in attempt 5: cannot reshape array of size 95 into shape (15,4)
❌ Attempt 5 failed with error: High error rate: 36/36 samples failed. Sample errors: [(0, 'Error processing sample 0 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 0, shape: (4, 97)', 'attempt': 5}), (1, 'Error processing sample 1 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 1, shape: (4, 97)', 'attempt': 5}), (2, 'Error processing sample 2 in attempt 5: cannot reshape array of size 95 into shape (15,4)', {'error_type': 'ValueError', 'error_message': 'cannot reshape array of size 95 into shape (15,4)', 'sample_info': 'Sample 2, shape: (4, 97)', 'attempt': 5})]
⚠️ All 5 attempts failed, using fallback function
🆘 Using fallback feature selection...
Training data shape: (106, 4, 97) -> (106, 4, 15)
Validation data shape: (36, 4, 97) -> (36, 4, 15)
⚠️ Total errors encountered: 720
  Error 1: ValueError - cannot reshape array of size 95 into shape (15,4)
  Error 2: ValueError - cannot reshape array of size 95 into shape (15,4)
  Error 3: ValueError - cannot reshape array of size 95 into shape (15,4)

==================================================
Training Iteration 2 (fallback) (SVM)
==================================================
Training SVM model...

Iteration 2 (fallback) Performance:
MAE: 887511.5331
RMSE: 1267641.3191
MAPE: 6.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 43
   • Highly important features (top 5%): 33

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0006, rank=1
   2. Feature_2_t3: importance=0.0005, rank=2
   3. Feature_1_t2: importance=0.0004, rank=3
   4. Feature_2_t2: importance=0.0003, rank=4
   5. Feature_5_t1: importance=0.0003, rank=5
📊 No significant improvement. Change: -1.06%

📈 Current best MAPE: 5.68%
🔄 Iterations without improvement: 2/5

🎯 Final Evaluation on Test Set (Unseen Data)
======================================================================
Using train+validation data for final model training to maximize data usage
Combined train+val data shape: (142, 4, 97)
Test data shape: (36, 4, 97)

📊 BASELINE EVALUATION (Raw Features, Train+Val → Test):

==================================================
Training Baseline Final (Raw Features) (SVM)
==================================================
Training SVM model...

Baseline Final (Raw Features) Performance:
MAE: 437113.1914
RMSE: 560535.7022
MAPE: 5.00%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 215
   • Highly important features (top 5%): 143

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_90_t3: importance=0.0003, rank=1
   2. Feature_88_t1: importance=0.0002, rank=2
   3. Feature_63_t2: importance=0.0002, rank=3
   4. Feature_71_t2: importance=0.0002, rank=4
   5. Feature_64_t2: importance=0.0001, rank=5
   Baseline MAPE: 5.00%
   Baseline MAE: 437113.1914
   Baseline RMSE: 560535.7022
ℹ️ No feature engineering code available, using baseline for final evaluation

======================================================================
ITERATION PERFORMANCE SUMMARY
======================================================================

📊 VALIDATION MAPE TREND:
--------------------------------------------------------------------------------
Iteration  Model                     Validation MAPE Improvement from Last
--------------------------------------------------------------------------------
0          Baseline                  5.68            N/A                 
1          Iteration 1               6.74            -1.06%              
2          Iteration 2               6.74            -1.06%              
--------------------------------------------------------------------------------
🏆 Best: Iteration 1 - MAPE: 6.74%
✅ Saved SLG results to cache/SLG_iterative_results_enhanced.pkl
✅ Summary report saved for SLG

🎉 Process completed successfully for SLG!

================================================================================
PROCESSING TICKER 12/14: HL
================================================================================
🚀 Starting Iterative Agent-Based Feature Selection Process for HL
======================================================================
📊 Loading data from parquet file...
📊 Loading data for HL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data integrity validation passed
✅ Data loaded successfully!
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
Features per timestep: 97
Lookback window: 4

🎯 Step 1: Running baseline model on validation set...

==================================================
Training Baseline (All 97 Features) (SVM)
==================================================
Training SVM model...

Baseline (All 97 Features) Performance:
MAE: 1982072.0950
RMSE: 2392423.0992
MAPE: 10.95%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 144
   • Highly important features (top 5%): 84

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_71_t0: importance=0.0007, rank=1
   2. Feature_65_t2: importance=0.0005, rank=2
   3. Feature_72_t0: importance=0.0004, rank=3
   4. Feature_89_t2: importance=0.0004, rank=4
   5. Feature_76_t1: importance=0.0003, rank=5

📊 Baseline Performance: MAPE = 10.95%

🔄 Starting iterative improvement process...
Max iterations: 2
Min improvement threshold: 0.1%
Patience: 5 iterations without improvement

======================================================================
ITERATION 1
======================================================================
🤖 Calling Claude for iteration 1...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (critical baseline features)
        raw_keep.append(data[t, 0])  # short interest
        raw_keep.append(data[t, 1])  # average daily volume
        raw_keep.append(data[t, 2])  # days to cover
        
        # Keep high-importance features identified in previous iteration
        raw_keep.append(data[t, 65])  # options_synthetic_short_cost
        raw_keep.append(data[t, 66])  # options_avg_implied_volatility
        raw_keep.append(data[t, 67])  # shares_outstanding
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep only the most recent OHLC values instead of all 60 values
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Calculate MAX_NEW after determining raw features to keep
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (recent trend)
        # Ratio of short volume to total volume indicates shorting intensity
        short_ratio = np.divide(short_volume, total_volume, out=np.zeros_like(short_volume), where=total_volume > 1e-8)
        avg_short_ratio = np.mean(short_ratio)
        eng.append(avg_short_ratio)
        
        # 2. Short Volume Ratio Change (acceleration)
        # Captures if shorting activity is accelerating or decelerating
        if len(short_ratio) >= 5:
            short_ratio_change = np.mean(short_ratio[-5:]) - np.mean(short_ratio[:-5])
            eng.append(short_ratio_change)
        else:
            eng.append(0.0)
        
        # 3. Relative Short Interest
        # Short interest relative to shares outstanding
        rel_short_interest = data[t, 0] / max(data[t, 67], 1e-8)  # short interest / shares outstanding
        eng.append(rel_short_interest)
        
        # 4. Price Momentum (5-day)
        # Captures recent price trend direction and strength
        if len(close_prices) >= 5:
            price_momentum = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1.0
            eng.append(price_momentum)
        else:
            eng.append(0.0)
        
        # 5. Price Volatility
        # Measures recent price instability which often correlates with short interest changes
        price_volatility = np.std(close_prices) / max(np.mean(close_prices), 1e-8)
        eng.append(price_volatility)
        
        # 6. Volume Trend
        # Captures if trading volume is increasing or decreasing
        if len(total_volume) >= 5:
            recent_vol = np.mean(total_volume[-5:])
            earlier_vol = np.mean(total_volume[:-5])
            volume_trend = recent_vol / max(earlier_vol, 1e-8) - 1.0
            eng.append(volume_trend)
        else:
            eng.append(0.0)
        
        # 7. Put/Call Ratio Normalized
        # Normalize the options put/call ratio by recent average
        put_call_ratio = data[t, 64]
        eng.append(put_call_ratio)
        
        # 8. Short Cost vs Volatility Ratio
        # Relationship between cost to short and market volatility expectations
        short_cost_vol_ratio = data[t, 65] / max(data[t, 66], 1e-8)
        eng.append(short_cost_vol_ratio)
        
        # 9. True Range (average of last 5 days)
        # Measure of price volatility that accounts for gaps
        if len(high_prices) >= 5 and len(low_prices) >= 5:
            tr_values = high_prices[-5:] - low_prices[-5:]
            avg_tr = np.mean(tr_values)
            eng.append(avg_tr)
        else:
            eng.append(0.0)
        
        # 10. Short Interest to Volume Ratio
        # How many days of current volume would be needed to cover short interest
        si_volume_ratio = data[t, 0] / max(data[t, 1], 1e-8)
        eng.append(si_volume_ratio)
        
        # 11. Price Range Relative to Average
        # Normalized price range as volatility indicator
        if len(high_prices) > 0 and len(low_prices) > 0:
            price_range = (np.max(high_prices) - np.min(low_prices)) / max(np.mean(close_prices), 1e-8)
            eng.append(price_range)
        else:
            eng.append(0.0)
        
        # 12. Short Volume Acceleration
        # Second derivative of short volume to detect changing trends
        if len(short_volume) >= 10:
            recent_change = np.mean(short_volume[-5:]) - np.mean(short_volume[-10:-5])
            earlier_change = np.mean(short_volume[-10:-5]) - np.mean(short_volume[:-10])
            short_accel = recent_change - earlier_change
            eng.append(short_accel)
        else:
            eng.append(0.0)
        
        # 13. Options Implied Volatility to Historical Volatility Ratio
        # Compares market expectations to realized volatility
        hist_vol = price_volatility  # reuse calculated historical volatility
        iv_hv_ratio = data[t, 66] / max(hist_vol, 1e-8)
        eng.append(iv_hv_ratio)
        
        # 14. Short Interest Momentum
        # Rate of change in short interest (if we have previous data points)
        if t > 0:
            si_momentum = data[t, 0] / max(data[t-1, 0], 1e-8) - 1.0
            eng.append(si_momentum)
        else:
            eng.append(0.0)
        
        # 15. Relative Volume
        # Current volume relative to average volume
        if len(total_volume) > 0:
            rel_volume = total_volume[-1] / max(np.mean(total_volume), 1e-8)
            eng.append(rel_volume)
        else:
            eng.append(0.0)
        
        # 16. Price to Volume Correlation
        # Relationship between price movements and volume
        if len(close_prices) >= 5 and len(total_volume) >= 5:
            # Use safe correlation calculation
            price_diffs = np.diff(close_prices[-5:])
            vol_diffs = np.diff(total_volume[-5:])
            if len(price_diffs) > 0 and len(vol_diffs) > 0 and np.std(price_diffs) > 1e-8 and np.std(vol_diffs) > 1e-8:
                price_vol_corr = np.corrcoef(price_diffs, vol_diffs)[0, 1]
                eng.append(price_vol_corr)
            else:
                eng.append(0.0)
        else:
            eng.append(0.0)
        
        # Ensure we don't exceed MAX_NEW engineered features
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent width by padding or truncating
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Clean any NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (15,) (14,) (15,) (14,) 
⚠️ Function execution failed (attempt 1/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    result = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average volume (critical baseline features)
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        raw_keep.append(short_interest)  # Short interest
        raw_keep.append(avg_volume)      # Average daily volume
        raw_keep.append(days_to_cover)   # Days to cover
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values (last day)
        raw_keep.append(close_prices[-1])  # Most recent close price
        
        # Extract options data (high importance in previous iteration)
        put_call_ratio = data[t, 64]
        synthetic_short_cost = data[t, 65]
        implied_volatility = data[t, 66]
        shares_outstanding = data[t, 67]
        
        # Keep important options data
        raw_keep.append(put_call_ratio)
        raw_keep.append(synthetic_short_cost)
        raw_keep.append(implied_volatility)
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep the most recent short volume and total volume
        raw_keep.append(short_volume[-1])
        raw_keep.append(total_volume[-1])
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Volume Ratio (recent trend)
        short_vol_ratio = np.divide(short_volume, total_volume, out=np.zeros_like(short_volume), where=total_volume > 1e-8)
        recent_short_vol_ratio = np.mean(short_vol_ratio[-5:])
        eng.append(recent_short_vol_ratio)
        
        # 2. Short Interest to Outstanding Shares Ratio
        si_to_outstanding = short_interest / max(shares_outstanding, 1e-8)
        eng.append(si_to_outstanding)
        
        # 3. Price momentum (5-day)
        if len(close_prices) >= 5:
            price_momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1
        else:
            price_momentum_5d = 0
        eng.append(price_momentum_5d)
        
        # 4. Price volatility (standard deviation of returns)
        if len(close_prices) >= 2:
            daily_returns = np.diff(close_prices) / close_prices[:-1]
            price_volatility = np.std(daily_returns) if len(daily_returns) > 0 else 0
        else:
            price_volatility = 0
        eng.append(price_volatility)
        
        # 5. Short volume trend (slope of short volume over last 5 days)
        if len(short_volume) >= 5:
            x = np.arange(5)
            y = short_volume[-5:]
            slope = np.polyfit(x, y, 1)[0] if np.any(y) else 0
            short_vol_trend = slope / max(np.mean(short_volume[-5:]), 1e-8)
        else:
            short_vol_trend = 0
        eng.append(short_vol_trend)
        
        # 6. Average True Range (ATR) - volatility indicator
        if len(high_prices) >= 2 and len(low_prices) >= 2 and len(close_prices) >= 2:
            tr_values = []
            for i in range(1, min(10, len(high_prices))):
                high_low = high_prices[-i] - low_prices[-i]
                high_close = abs(high_prices[-i] - close_prices[-(i+1)])
                low_close = abs(low_prices[-i] - close_prices[-(i+1)])
                tr = max(high_low, high_close, low_close)
                tr_values.append(tr)
            atr = np.mean(tr_values) if tr_values else 0
            normalized_atr = atr / max(close_prices[-1], 1e-8)
        else:
            normalized_atr = 0
        eng.append(normalized_atr)
        
        # 7. Short Interest Velocity (rate of change)
        si_velocity = 0
        if t > 0 and data[t-1, 0] > 1e-8:
            si_velocity = (short_interest - data[t-1, 0]) / max(data[t-1, 0], 1e-8)
        eng.append(si_velocity)
        
        # 8. Volume Pressure (ratio of recent volume to longer-term average)
        recent_vol_avg = np.mean(total_volume[-5:]) if len(total_volume) >= 5 else total_volume[-1]
        vol_pressure = recent_vol_avg / max(avg_volume, 1e-8)
        eng.append(vol_pressure)
        
        # 9. Short Interest to Volume Ratio
        si_to_volume = short_interest / max(avg_volume, 1e-8)
        eng.append(si_to_volume)
        
        # 10. Relative Strength Index (RSI) - simplified version
        if len(close_prices) >= 14:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain[-14:])
            avg_loss = np.mean(loss[-14:])
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Neutral value when not enough data
        eng.append(rsi)
        
        # 11. Bollinger Band Width (volatility measure)
        if len(close_prices) >= 20:
            sma_20 = np.mean(close_prices[-20:])
            std_20 = np.std(close_prices[-20:])
            bb_width = (2 * std_20) / max(sma_20, 1e-8)
        else:
            bb_width = 0
        eng.append(bb_width)
        
        # 12. Implied Volatility to Historical Volatility Ratio
        iv_to_hv_ratio = implied_volatility / max(price_volatility, 1e-8)
        eng.append(iv_to_hv_ratio)
        
        # 13. Short Interest Acceleration (second derivative)
        si_acceleration = 0
        if t > 1:
            prev_velocity = (data[t-1, 0] - data[t-2, 0]) / max(data[t-2, 0], 1e-8)
            si_acceleration = si_velocity - prev_velocity
        eng.append(si_acceleration)
        
        # 14. Price to Volume Correlation
        if len(close_prices) >= 5 and len(total_volume) >= 5:
            try:
                price_vol_corr = np.corrcoef(close_prices[-5:], total_volume[-5:])[0, 1]
                if np.isnan(price_vol_corr):
                    price_vol_corr = 0
            except:
                price_vol_corr = 0
        else:
            price_vol_corr = 0
        eng.append(price_vol_corr)
        
        # 15. Short Volume Concentration (ratio of short volume to total volume in recent days)
        short_vol_concentration = np.sum(short_volume[-5:]) / max(np.sum(total_volume[-5:]), 1e-8) if len(short_volume) >= 5 else 0
        eng.append(short_vol_concentration)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to ensure consistent size
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        result[t] = row
    
    # Handle NaN, inf values
    result = np.nan_to_num(result, nan=0.0, posinf=0.0, neginf=0.0)
    
    return result
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (15,) (14,) (15,) (14,) 
⚠️ Function execution failed (attempt 2/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    result = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Always keep short interest and average daily volume (critical baseline features)
        short_interest = data[t, 0]
        avg_daily_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        raw_keep.append(short_interest)
        raw_keep.append(avg_daily_volume)
        raw_keep.append(days_to_cover)
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent OHLC values (last day)
        last_open = open_prices[-1]
        last_high = high_prices[-1]
        last_low = low_prices[-1]
        last_close = close_prices[-1]
        
        raw_keep.append(last_close)  # Most recent close price is highly relevant
        
        # Extract options data (high importance from previous iteration)
        put_call_ratio = data[t, 64]
        synthetic_short_cost = data[t, 65]
        implied_volatility = data[t, 66]
        shares_outstanding = data[t, 67]
        
        # Keep important options data
        raw_keep.append(put_call_ratio)
        raw_keep.append(synthetic_short_cost)
        raw_keep.append(implied_volatility)
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep the most recent short volume and total volume
        raw_keep.append(short_volume[-1])
        raw_keep.append(total_volume[-1])
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Feature 1: Short Interest to Shares Outstanding Ratio
        # This measures what percentage of the float is being shorted
        si_to_shares_ratio = short_interest / max(shares_outstanding, 1e-8)
        eng.append(si_to_shares_ratio)
        
        # Feature 2: Recent Short Volume Ratio (last 5 days)
        # Higher ratio indicates increased shorting activity
        recent_short_volume = np.sum(short_volume[-5:])
        recent_total_volume = np.sum(total_volume[-5:])
        recent_short_ratio = recent_short_volume / max(recent_total_volume, 1e-8)
        eng.append(recent_short_ratio)
        
        # Feature 3: Short Volume Trend (slope over last 10 days)
        # Positive slope indicates increasing short pressure
        if len(short_volume) >= 10:
            x = np.arange(10)
            y = short_volume[-10:]
            # Simple linear regression slope calculation
            slope_numerator = np.sum((x - np.mean(x)) * (y - np.mean(y)))
            slope_denominator = np.sum((x - np.mean(x))**2)
            short_volume_trend = slope_numerator / max(slope_denominator, 1e-8)
        else:
            short_volume_trend = 0
        eng.append(short_volume_trend)
        
        # Feature 4: Price Momentum (5-day)
        # Negative momentum with high short interest suggests continued downward pressure
        if len(close_prices) >= 5:
            price_momentum = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1
        else:
            price_momentum = 0
        eng.append(price_momentum)
        
        # Feature 5: Volatility (standard deviation of returns over past 10 days)
        # High volatility with high short interest can indicate a potential short squeeze
        if len(close_prices) >= 10:
            returns = np.diff(close_prices[-11:]) / np.maximum(close_prices[-11:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0
        else:
            volatility = 0
        eng.append(volatility)
        
        # Feature 6: Short Interest Change Rate
        # Rate of change in short interest can signal changing sentiment
        if t > 0:
            prev_short_interest = data[t-1, 0]
            si_change_rate = (short_interest / max(prev_short_interest, 1e-8)) - 1
        else:
            si_change_rate = 0
        eng.append(si_change_rate)
        
        # Feature 7: Average True Range (ATR) - volatility indicator
        # Higher ATR with high short interest can indicate potential for larger price moves
        if len(close_prices) >= 2:
            true_ranges = []
            for i in range(1, min(14, len(close_prices))):
                high_low = high_prices[-i] - low_prices[-i]
                high_close = abs(high_prices[-i] - close_prices[-(i+1)])
                low_close = abs(low_prices[-i] - close_prices[-(i+1)])
                true_ranges.append(max(high_low, high_close, low_close))
            atr = np.mean(true_ranges) if true_ranges else 0
        else:
            atr = 0
        eng.append(atr)
        
        # Feature 8: RSI (Relative Strength Index)
        # Extreme RSI values with high short interest can signal reversal points
        if len(close_prices) >= 14:
            delta = np.diff(close_prices[-15:])
            gain = np.sum(np.where(delta > 0, delta, 0))
            loss = np.sum(np.where(delta < 0, -delta, 0))
            avg_gain = gain / 14
            avg_loss = loss / 14
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Neutral value when not enough data
        eng.append(rsi)
        
        # Feature 9: Short Volume to Average Daily Volume Ratio
        # Compares recent short volume to historical average volume
        short_vol_to_avg_vol = np.mean(short_volume[-5:]) / max(avg_daily_volume, 1e-8)
        eng.append(short_vol_to_avg_vol)
        
        # Feature 10: Price to Moving Average Ratio
        # Position of current price relative to its moving average
        if len(close_prices) >= 10:
            ma10 = np.mean(close_prices[-10:])
            price_to_ma_ratio = last_close / max(ma10, 1e-8)
        else:
            price_to_ma_ratio = 1
        eng.append(price_to_ma_ratio)
        
        # Feature 11: Bollinger Band Position
        # Where price is within volatility bands, useful for identifying extreme conditions
        if len(close_prices) >= 20:
            ma20 = np.mean(close_prices[-20:])
            std20 = np.std(close_prices[-20:])
            bb_position = (last_close - ma20) / max(std20, 1e-8)
        else:
            bb_position = 0
        eng.append(bb_position)
        
        # Feature 12: Short Interest to Days to Cover Ratio
        # Combines two important metrics for a more comprehensive view
        si_to_dtc_ratio = short_interest / max(days_to_cover, 1e-8)
        eng.append(si_to_dtc_ratio)
        
        # Feature 13: Implied Volatility to Historical Volatility Ratio
        # Compares market expectations to realized volatility
        if len(close_prices) >= 20:
            returns = np.diff(close_prices[-21:]) / np.maximum(close_prices[-21:-1], 1e-8)
            hist_vol = np.std(returns) * np.sqrt(252)  # Annualized
            iv_to_hv_ratio = implied_volatility / max(hist_vol, 1e-8)
        else:
            iv_to_hv_ratio = 1
        eng.append(iv_to_hv_ratio)
        
        # Feature 14: Short Volume Acceleration
        # Second derivative of short volume - rate of change of the rate of change
        if len(short_volume) >= 3:
            short_vol_diff1 = short_volume[-1] - short_volume[-2]
            short_vol_diff2 = short_volume[-2] - short_volume[-3]
            short_vol_accel = short_vol_diff1 - short_vol_diff2
        else:
            short_vol_accel = 0
        eng.append(short_vol_accel)
        
        # Feature 15: Price Range Ratio
        # Normalized price range, indicates volatility
        daily_range_ratio = (last_high - last_low) / max(last_close, 1e-8)
        eng.append(daily_range_ratio)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to ensure consistent size
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        result[t] = row
    
    # Handle NaN, inf values
    result = np.nan_to_num(result, nan=0.0, posinf=0.0, neginf=0.0)
    
    return result
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 1 (claude) (SVM)
==================================================
Training SVM model...

Iteration 1 (claude) Performance:
MAE: 1835606.7195
RMSE: 2278034.4069
MAPE: 10.11%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 80
   • Highly important features (top 5%): 67

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_13_t3: importance=0.0009, rank=1
   2. Feature_7_t1: importance=0.0007, rank=2
   3. Feature_22_t1: importance=0.0007, rank=3
   4. Feature_16_t0: importance=0.0006, rank=4
   5. Feature_8_t1: importance=0.0005, rank=5
💾 Saved code for iteration 1 to iteration_codes dictionary
🎉 IMPROVEMENT! MAPE improved by 0.84%

📈 Current best MAPE: 10.11%
🔄 Iterations without improvement: 0/5

======================================================================
ITERATION 2
======================================================================
🤖 Calling Claude for iteration 2...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    result = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw features to keep and engineered features
        raw_keep = []
        eng = []
        
        # Extract key raw features
        short_interest = data[t, 0]
        avg_daily_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        # Always keep these critical baseline features
        raw_keep.append(short_interest)
        raw_keep.append(avg_daily_volume)
        raw_keep.append(days_to_cover)
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Keep only the most recent close price (high importance in previous iteration)
        last_close = close_prices[-1]
        raw_keep.append(last_close)
        
        # Extract options data (high importance from previous iterations)
        put_call_ratio = data[t, 64]
        synthetic_short_cost = data[t, 65]
        implied_volatility = data[t, 66]
        shares_outstanding = data[t, 67]
        
        # Keep important options data
        raw_keep.append(put_call_ratio)
        raw_keep.append(synthetic_short_cost)
        raw_keep.append(implied_volatility)
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep the most recent short volume and total volume
        raw_keep.append(short_volume[-1])
        raw_keep.append(total_volume[-1])
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Feature 1: Short Interest to Shares Outstanding Ratio (utilization rate)
        # This was a high importance feature in previous iteration
        si_to_shares_ratio = short_interest / max(shares_outstanding, 1e-8)
        eng.append(si_to_shares_ratio)
        
        # Feature 2: Recent Short Volume Ratio (last 5 days)
        # Higher ratio indicates increased shorting activity
        recent_short_volume = np.sum(short_volume[-5:])
        recent_total_volume = np.sum(total_volume[-5:])
        recent_short_ratio = recent_short_volume / max(recent_total_volume, 1e-8)
        eng.append(recent_short_ratio)
        
        # Feature 3: Exponential Short Volume Ratio (weighted toward most recent days)
        # Gives more weight to recent short activity
        if len(short_volume) >= 5:
            weights = np.exp(np.arange(5) / 2)  # Exponential weights
            weights = weights / np.sum(weights)  # Normalize weights
            exp_short_ratio = np.sum(weights * short_volume[-5:]) / max(np.sum(weights * total_volume[-5:]), 1e-8)
        else:
            exp_short_ratio = 0
        eng.append(exp_short_ratio)
        
        # Feature 4: Price Momentum (5-day)
        # Negative momentum with high short interest suggests continued downward pressure
        if len(close_prices) >= 5:
            price_momentum = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1
        else:
            price_momentum = 0
        eng.append(price_momentum)
        
        # Feature 5: Volatility (standard deviation of returns over past 10 days)
        # High volatility with high short interest can indicate a potential short squeeze
        if len(close_prices) >= 10:
            returns = np.diff(close_prices[-11:]) / np.maximum(close_prices[-11:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0
        else:
            volatility = 0
        eng.append(volatility)
        
        # Feature 6: Short Interest Change Rate
        # Rate of change in short interest can signal changing sentiment
        if t > 0:
            prev_short_interest = data[t-1, 0]
            si_change_rate = (short_interest / max(prev_short_interest, 1e-8)) - 1
        else:
            si_change_rate = 0
        eng.append(si_change_rate)
        
        # Feature 7: RSI (Relative Strength Index)
        # Extreme RSI values with high short interest can signal reversal points
        if len(close_prices) >= 14:
            delta = np.diff(close_prices[-15:])
            gain = np.sum(np.where(delta > 0, delta, 0))
            loss = np.sum(np.where(delta < 0, -delta, 0))
            avg_gain = gain / 14
            avg_loss = loss / 14
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Neutral value when not enough data
        eng.append(rsi)
        
        # Feature 8: Short Volume Acceleration (second derivative)
        # Measures the acceleration of shorting activity
        if len(short_volume) >= 3:
            short_vol_diff1 = short_volume[-1] - short_volume[-2]
            short_vol_diff2 = short_volume[-2] - short_volume[-3]
            short_vol_accel = short_vol_diff1 - short_vol_diff2
            # Normalize by average volume to make it comparable across stocks
            short_vol_accel_norm = short_vol_accel / max(avg_daily_volume, 1e-8)
        else:
            short_vol_accel_norm = 0
        eng.append(short_vol_accel_norm)
        
        # Feature 9: Bollinger Band Position
        # Where price is within volatility bands, useful for identifying extreme conditions
        if len(close_prices) >= 20:
            ma20 = np.mean(close_prices[-20:])
            std20 = np.std(close_prices[-20:])
            bb_position = (last_close - ma20) / max(std20, 1e-8)
        else:
            bb_position = 0
        eng.append(bb_position)
        
        # Feature 10: Implied Volatility to Historical Volatility Ratio
        # Compares market expectations to realized volatility
        if volatility > 0:
            iv_to_hv_ratio = implied_volatility / max(volatility * np.sqrt(252), 1e-8)  # Annualized
        else:
            iv_to_hv_ratio = 1
        eng.append(iv_to_hv_ratio)
        
        # Feature 11: Short Interest to Days to Cover Ratio
        # Combines two important metrics for a more comprehensive view
        si_to_dtc_ratio = short_interest / max(days_to_cover, 1e-8)
        eng.append(si_to_dtc_ratio)
        
        # Feature 12: Short Interest Concentration (ratio of recent to total)
        # Measures how concentrated recent shorting activity is
        if len(short_volume) >= 5:
            short_concentration = np.sum(short_volume[-5:]) / max(short_interest, 1e-8)
        else:
            short_concentration = 0
        eng.append(short_concentration)
        
        # Feature 13: Price Trend Strength (ADX-inspired)
        # Measures the strength of the current price trend
        if len(close_prices) >= 14:
            up_moves = np.zeros(13)
            down_moves = np.zeros(13)
            
            for i in range(13):
                if high_prices[-i-1] > high_prices[-i-2]:
                    up_moves[i] = high_prices[-i-1] - high_prices[-i-2]
                if low_prices[-i-1] < low_prices[-i-2]:
                    down_moves[i] = low_prices[-i-2] - low_prices[-i-1]
            
            avg_up = np.mean(up_moves)
            avg_down = np.mean(down_moves)
            
            if avg_up + avg_down > 0:
                trend_strength = np.abs(avg_up - avg_down) / (avg_up + avg_down)
            else:
                trend_strength = 0
        else:
            trend_strength = 0
        eng.append(trend_strength)
        
        # Feature 14: Short Interest to Price Ratio
        # Normalizes short interest by price to make it comparable across stocks
        si_to_price_ratio = short_interest / max(last_close, 1e-8)
        eng.append(si_to_price_ratio)
        
        # Feature 15: Short Volume Trend Reversal Signal
        # Detects potential reversals in shorting activity
        if len(short_volume) >= 10:
            short_vol_ma5 = np.mean(short_volume[-5:])
            short_vol_ma10 = np.mean(short_volume[-10:])
            short_vol_reversal = short_vol_ma5 / max(short_vol_ma10, 1e-8) - 1
        else:
            short_vol_reversal = 0
        eng.append(short_vol_reversal)
        
        # Feature 16: Options Pressure Indicator
        # Combines put/call ratio with implied volatility to gauge market sentiment
        options_pressure = put_call_ratio * implied_volatility
        eng.append(options_pressure)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Pad or truncate to ensure consistent size
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        result[t] = row
    
    # Handle NaN, inf values
    result = np.nan_to_num(result, nan=0.0, posinf=0.0, neginf=0.0)
    
    return result
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 2 (claude) (SVM)
==================================================
Training SVM model...

Iteration 2 (claude) Performance:
MAE: 1890166.0650
RMSE: 2336389.9256
MAPE: 10.23%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 82
   • Highly important features (top 5%): 62

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_14_t2: importance=0.0015, rank=1
   2. Feature_21_t2: importance=0.0008, rank=2
   3. Feature_18_t3: importance=0.0007, rank=3
   4. Feature_5_t2: importance=0.0007, rank=4
   5. Feature_18_t2: importance=0.0006, rank=5
💾 Saved code for iteration 2 to iteration_codes dictionary
📊 No significant improvement. Change: -0.13%

📈 Current best MAPE: 10.11%
🔄 Iterations without improvement: 1/5

🎯 Final Evaluation on Test Set (Unseen Data)
======================================================================
Using train+validation data for final model training to maximize data usage
Combined train+val data shape: (142, 4, 97)
Test data shape: (36, 4, 97)

📊 BASELINE EVALUATION (Raw Features, Train+Val → Test):

==================================================
Training Baseline Final (Raw Features) (SVM)
==================================================
Training SVM model...

Baseline Final (Raw Features) Performance:
MAE: 2353785.5622
RMSE: 2830303.8659
MAPE: 11.80%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 153
   • Highly important features (top 5%): 82

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_72_t0: importance=0.0006, rank=1
   2. Feature_90_t1: importance=0.0005, rank=2
   3. Feature_65_t3: importance=0.0004, rank=3
   4. Feature_71_t0: importance=0.0003, rank=4
   5. Feature_0_t3: importance=0.0003, rank=5
   Baseline MAPE: 11.80%
   Baseline MAE: 2353785.5622
   Baseline RMSE: 2830303.8659

🔧 BEST MODEL EVALUATION (Processed Features, Train+Val → Test):
Applying best feature engineering to all data...
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Processed train+val shape: (142, 4, 25)
Processed test shape: (36, 4, 25)

==================================================
Training Best Model Final (Processed Features) (SVM)
==================================================
Training SVM model...

Best Model Final (Processed Features) Performance:
MAE: 2433426.4054
RMSE: 2937967.5413
MAPE: 12.15%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 85
   • Highly important features (top 5%): 74

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_23_t2: importance=0.0007, rank=1
   2. Feature_22_t1: importance=0.0007, rank=2
   3. Feature_16_t3: importance=0.0006, rank=3
   4. Feature_10_t0: importance=0.0006, rank=4
   5. Feature_11_t3: importance=0.0006, rank=5

📊 Best Model Test Set Performance:
   MAPE: 12.15%
   MAE: 2433426.4054
   RMSE: 2937967.5413

🎯 IMPROVEMENT OVER BASELINE:
   Baseline MAPE: 11.80%
   Best Model MAPE: 12.15%
   Absolute Improvement: -0.35%
   Relative Improvement: -3.0%

======================================================================
ITERATION PERFORMANCE SUMMARY
======================================================================

📊 VALIDATION MAPE TREND:
--------------------------------------------------------------------------------
Iteration  Model                     Validation MAPE Improvement from Last
--------------------------------------------------------------------------------
0          Baseline                  10.95           N/A                 
1          Iteration 1               10.11           +0.84%              
2          Iteration 2               10.23           -0.13%              
--------------------------------------------------------------------------------
🏆 Best: Iteration 1 - MAPE: 10.11%
✅ Saved HL results to cache/HL_iterative_results_enhanced.pkl
✅ Summary report saved for HL

🎉 Process completed successfully for HL!

================================================================================
PROCESSING TICKER 13/14: ANDE
================================================================================
🚀 Starting Iterative Agent-Based Feature Selection Process for ANDE
======================================================================
📊 Loading data from parquet file...
📊 Loading data for ANDE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ANDE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data integrity validation passed
✅ Data loaded successfully!
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
Features per timestep: 97
Lookback window: 4

🎯 Step 1: Running baseline model on validation set...

==================================================
Training Baseline (All 97 Features) (SVM)
==================================================
Training SVM model...

Baseline (All 97 Features) Performance:
MAE: 112138.4092
RMSE: 143882.3549
MAPE: 15.28%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 160
   • Highly important features (top 5%): 77

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_88_t0: importance=0.0006, rank=1
   2. Feature_69_t3: importance=0.0004, rank=2
   3. Feature_65_t3: importance=0.0004, rank=3
   4. Feature_64_t3: importance=0.0004, rank=4
   5. Feature_78_t2: importance=0.0003, rank=5

📊 Baseline Performance: MAPE = 15.28%

🔄 Starting iterative improvement process...
Max iterations: 2
Min improvement threshold: 0.1%
Patience: 5 iterations without improvement

======================================================================
ITERATION 1
======================================================================
🤖 Calling Claude for iteration 1...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Constructs features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Always keep short interest and average volume
        raw_keep = [
            data[t, 0],  # short interest
            data[t, 1],  # average daily volume
            data[t, 2],  # days to cover
            data[t, 64],  # options_put_call_volume_ratio
            data[t, 65],  # options_synthetic_short_cost
            data[t, 66],  # options_avg_implied_volatility
            data[t, 67],  # shares_outstanding
        ]
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract short interest volume and total trading volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # Initialize engineered features list
        eng = []
        
        # 1. Short Interest Ratio (Short Volume / Total Volume)
        # This ratio indicates the proportion of short selling relative to total trading
        short_ratio = np.mean(short_volume / np.maximum(total_volume, 1e-8))
        eng.append(short_ratio)
        
        # 2. Short Interest Momentum (5-day vs 15-day)
        # Captures recent changes in short interest activity
        short_momentum = np.mean(short_volume[:5]) / np.maximum(np.mean(short_volume), 1e-8) - 1
        eng.append(short_momentum)
        
        # 3. Price Volatility (standard deviation of returns)
        # Higher volatility often correlates with short interest changes
        daily_returns = np.diff(close_prices) / np.maximum(close_prices[:-1], 1e-8)
        price_volatility = np.std(daily_returns) if len(daily_returns) > 0 else 0
        eng.append(price_volatility)
        
        # 4. Recent Price Trend (5-day momentum)
        # Short sellers often target stocks with negative momentum
        price_trend = (close_prices[-1] / np.maximum(close_prices[-6] if len(close_prices) >= 6 else close_prices[0], 1e-8)) - 1
        eng.append(price_trend)
        
        # 5. Short Volume Trend
        # Captures if short selling is increasing or decreasing
        short_vol_trend = (np.mean(short_volume[-3:]) / np.maximum(np.mean(short_volume[:3]), 1e-8)) - 1
        eng.append(short_vol_trend)
        
        # 6. Volume Pressure (ratio of recent volume to longer-term average)
        # Unusual volume can signal changing sentiment
        volume_pressure = (np.mean(total_volume[-3:]) / np.maximum(np.mean(total_volume), 1e-8)) - 1
        eng.append(volume_pressure)
        
        # 7. Short Interest to Float Ratio
        # Relates short interest to available shares
        short_to_float = data[t, 0] / np.maximum(data[t, 67], 1e-8)
        eng.append(short_to_float)
        
        # 8. Relative Strength Index (RSI)
        # Overbought/oversold indicator that can signal potential reversals
        if len(daily_returns) >= 14:
            gains = np.maximum(daily_returns, 0)
            losses = np.maximum(-daily_returns, 0)
            avg_gain = np.mean(gains[-14:])
            avg_loss = np.mean(losses[-14:])
            rs = avg_gain / np.maximum(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Default value if not enough data
        eng.append(rsi)
        
        # 9. High-Low Range Volatility
        # Measures intraday volatility
        hl_range = np.mean((high_prices - low_prices) / np.maximum(low_prices, 1e-8))
        eng.append(hl_range)
        
        # 10. Options Implied Volatility to Historical Volatility Ratio
        # Compares market expectations to realized volatility
        iv_hv_ratio = data[t, 66] / np.maximum(price_volatility, 1e-8)
        eng.append(iv_hv_ratio)
        
        # 11. Short Cost to Volatility Ratio
        # Relates borrowing cost to potential profit opportunity
        short_cost_vol_ratio = data[t, 65] / np.maximum(price_volatility, 1e-8)
        eng.append(short_cost_vol_ratio)
        
        # 12. Short Interest Acceleration
        # Second derivative of short interest to capture changing momentum
        if t >= 2:
            si_t = data[t, 0]
            si_t1 = data[t-1, 0]
            si_t2 = data[t-2, 0]
            si_velocity_current = si_t - si_t1
            si_velocity_previous = si_t1 - si_t2
            si_acceleration = si_velocity_current - si_velocity_previous
        else:
            si_acceleration = 0
        eng.append(si_acceleration)
        
        # 13. Put-Call Ratio Trend
        # Captures changing options sentiment
        if t >= 1:
            pc_trend = data[t, 64] / np.maximum(data[t-1, 64], 1e-8) - 1
        else:
            pc_trend = 0
        eng.append(pc_trend)
        
        # 14. Short Volume Volatility
        # Measures consistency of short selling
        short_vol_volatility = np.std(short_volume) / np.maximum(np.mean(short_volume), 1e-8)
        eng.append(short_vol_volatility)
        
        # 15. Price to Volume Correlation
        # Measures if price movements are supported by volume
        if len(close_prices) > 5 and len(total_volume) > 5:
            price_changes = np.diff(close_prices[-6:])
            volume_subset = total_volume[-5:]
            if np.std(price_changes) > 0 and np.std(volume_subset) > 0:
                price_vol_corr = np.corrcoef(price_changes, volume_subset)[0, 1]
                price_vol_corr = 0 if np.isnan(price_vol_corr) else price_vol_corr
            else:
                price_vol_corr = 0
        else:
            price_vol_corr = 0
        eng.append(price_vol_corr)
        
        # 16. Short Interest to Days to Cover Ratio
        # Relates short interest to potential covering time
        si_dtc_ratio = data[t, 0] / np.maximum(data[t, 2], 1e-8)
        eng.append(si_dtc_ratio)
        
        # 17. OHLC Candlestick Pattern: Bullish/Bearish Signal
        # Simple pattern recognition for recent price action
        if len(close_prices) >= 3:
            recent_candle = (close_prices[-1] - open_prices[-1]) / np.maximum(open_prices[-1], 1e-8)
            prev_candle = (close_prices[-2] - open_prices[-2]) / np.maximum(open_prices[-2], 1e-8)
            candle_pattern = recent_candle - prev_candle  # Positive = bullish shift, Negative = bearish shift
        else:
            candle_pattern = 0
        eng.append(candle_pattern)
        
        # 18. Short Volume to Price Volatility Ratio
        # Relates short selling activity to price movement
        short_vol_price_vol_ratio = np.mean(short_volume) / np.maximum(price_volatility * np.mean(total_volume), 1e-8)
        eng.append(short_vol_price_vol_ratio)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent size
        if row.size < MAX_TOTAL:
            # Pad with zeros if needed
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            # Truncate if needed
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN, inf values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
❌ Error executing generated code: Function failed test execution: operands could not be broadcast together with shapes (15,) (14,) 
⚠️ Function execution failed (attempt 1/5)
🔄 Retrying function execution with error feedback...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Constructs features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Keep essential raw features
        raw_keep = [
            data[t, 0],  # short interest
            data[t, 1],  # average daily volume
            data[t, 2],  # days to cover
            data[t, 64], # options_put_call_volume_ratio
            data[t, 65], # options_synthetic_short_cost
            data[t, 66]  # options_avg_implied_volatility
        ]
        
        # Extract OHLC data for the last 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract short interest volume and total volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        eng = []
        
        # 1. Recent price trend (last 5 days vs previous 5 days)
        recent_close_avg = np.mean(close_prices[-5:])
        prev_close_avg = np.mean(close_prices[-10:-5])
        den = max(abs(prev_close_avg), 1e-8)
        price_trend = (recent_close_avg / den) - 1
        eng.append(price_trend)
        
        # 2. Volatility (standard deviation of returns over last 10 days)
        returns = np.diff(close_prices[-11:]) / np.maximum(close_prices[-11:-1], 1e-8)
        volatility = np.std(returns) if len(returns) > 1 else 0
        eng.append(volatility)
        
        # 3. Short volume ratio (average of last 5 days)
        short_ratio = np.mean(short_volume[-5:] / np.maximum(total_volume[-5:], 1e-8))
        eng.append(short_ratio)
        
        # 4. Short volume trend (last 5 days vs previous 5 days)
        recent_short_avg = np.mean(short_volume[-5:])
        prev_short_avg = np.mean(short_volume[-10:-5])
        den = max(abs(prev_short_avg), 1e-8)
        short_trend = (recent_short_avg / den) - 1
        eng.append(short_trend)
        
        # 5. Price range relative to average (volatility indicator)
        avg_price = np.mean(close_prices)
        price_range = np.mean(high_prices - low_prices)
        den = max(abs(avg_price), 1e-8)
        relative_range = price_range / den
        eng.append(relative_range)
        
        # 6. RSI (Relative Strength Index) - 14 period
        if len(close_prices) >= 14:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain[-14:])
            avg_loss = np.mean(loss[-14:])
            den = max(avg_loss, 1e-8)
            rs = avg_gain / den
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Default value if not enough data
        eng.append(rsi)
        
        # 7. Short interest to shares outstanding ratio
        shares_outstanding = data[t, 67]
        den = max(abs(shares_outstanding), 1e-8)
        short_to_outstanding = data[t, 0] / den
        eng.append(short_to_outstanding)
        
        # 8. Volume trend (increasing or decreasing)
        recent_vol_avg = np.mean(total_volume[-5:])
        prev_vol_avg = np.mean(total_volume[-10:-5])
        den = max(abs(prev_vol_avg), 1e-8)
        volume_trend = (recent_vol_avg / den) - 1
        eng.append(volume_trend)
        
        # 9. Short interest momentum (rate of change)
        if t > 0:
            prev_short_interest = data[t-1, 0]
            den = max(abs(prev_short_interest), 1e-8)
            short_momentum = (data[t, 0] / den) - 1
        else:
            short_momentum = 0
        eng.append(short_momentum)
        
        # 10. Price to volume correlation (last 10 days)
        if len(close_prices) >= 10 and len(total_volume) >= 10:
            # Avoid using np.corrcoef directly as it can be unstable
            # Instead, calculate a simplified correlation metric
            price_std = np.std(close_prices[-10:])
            vol_std = np.std(total_volume[-10:])
            if price_std > 1e-8 and vol_std > 1e-8:
                price_norm = (close_prices[-10:] - np.mean(close_prices[-10:])) / price_std
                vol_norm = (total_volume[-10:] - np.mean(total_volume[-10:])) / vol_std
                price_vol_corr = np.mean(price_norm * vol_norm)
            else:
                price_vol_corr = 0
        else:
            price_vol_corr = 0
        eng.append(price_vol_corr)
        
        # 11. OHLC summary: last day's close
        eng.append(close_prices[-1])
        
        # 12. OHLC summary: average true range (ATR)
        tr_values = []
        for i in range(1, len(close_prices)):
            high_low = high_prices[i] - low_prices[i]
            high_close = abs(high_prices[i] - close_prices[i-1])
            low_close = abs(low_prices[i] - close_prices[i-1])
            tr = max(high_low, high_close, low_close)
            tr_values.append(tr)
        atr = np.mean(tr_values) if tr_values else 0
        eng.append(atr)
        
        # 13. Options implied volatility to historical volatility ratio
        implied_vol = data[t, 66]
        den = max(volatility, 1e-8)
        iv_hv_ratio = implied_vol / den
        eng.append(iv_hv_ratio)
        
        # 14. Short interest to average volume ratio (alternative to days to cover)
        den = max(data[t, 1], 1e-8)
        si_volume_ratio = data[t, 0] / den
        eng.append(si_volume_ratio)
        
        # 15. Short volume acceleration (second derivative)
        if len(short_volume) >= 10:
            short_vol_diff = np.diff(short_volume[-10:])
            short_accel = np.mean(np.diff(short_vol_diff))
        else:
            short_accel = 0
        eng.append(short_accel)
        
        # 16. Price momentum (rate of change over 5 days)
        if len(close_prices) >= 5:
            den = max(abs(close_prices[-5]), 1e-8)
            price_momentum = (close_prices[-1] / den) - 1
        else:
            price_momentum = 0
        eng.append(price_momentum)
        
        # 17. Short cost to implied volatility ratio
        short_cost = data[t, 65]
        den = max(implied_vol, 1e-8)
        cost_vol_ratio = short_cost / den
        eng.append(cost_vol_ratio)
        
        # 18. Bollinger Band width (volatility measure)
        if len(close_prices) >= 10:
            sma = np.mean(close_prices[-10:])
            std = np.std(close_prices[-10:])
            bb_width = (2 * std) / max(abs(sma), 1e-8)
        else:
            bb_width = 0
        eng.append(bb_width)
        
        # 19. Short interest to put/call ratio
        put_call_ratio = data[t, 64]
        den = max(abs(put_call_ratio), 1e-8)
        si_pc_ratio = data[t, 0] / den
        eng.append(si_pc_ratio)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent width by padding or truncating
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN and infinity values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 1 (claude) (SVM)
==================================================
Training SVM model...

Iteration 1 (claude) Performance:
MAE: 110212.1764
RMSE: 132380.7236
MAPE: 14.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 91
   • Highly important features (top 5%): 66

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_19_t0: importance=0.0007, rank=1
   2. Feature_6_t1: importance=0.0005, rank=2
   3. Feature_21_t1: importance=0.0005, rank=3
   4. Feature_11_t2: importance=0.0005, rank=4
   5. Feature_23_t2: importance=0.0004, rank=5
💾 Saved code for iteration 1 to iteration_codes dictionary
🎉 IMPROVEMENT! MAPE improved by 0.34%

📈 Current best MAPE: 14.94%
🔄 Iterations without improvement: 0/5

======================================================================
ITERATION 2
======================================================================
🤖 Calling Claude for iteration 2...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    """
    Constructs features for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of shape (lookback_window, MAX_TOTAL)
    """
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Keep essential raw features based on previous importance analysis
        # Keeping short interest, avg daily volume, days to cover, and options metrics
        raw_keep = [
            data[t, 0],  # short interest (always keep)
            data[t, 1],  # average daily volume (always keep)
            data[t, 2],  # days to cover
            data[t, 64], # options_put_call_volume_ratio (high importance)
            data[t, 65], # options_synthetic_short_cost (high importance)
            data[t, 66], # options_avg_implied_volatility (high importance)
            data[t, 67]  # shares_outstanding (needed for ratio calculations)
        ]
        
        # Extract OHLC data for the last 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract short interest volume and total volume
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        eng = []
        
        # 1. Short interest to shares outstanding ratio (high importance from previous iteration)
        shares_outstanding = data[t, 67]
        den = max(abs(shares_outstanding), 1e-8)
        short_to_outstanding = data[t, 0] / den
        eng.append(short_to_outstanding)
        
        # 2. Short interest to put/call ratio (high importance from previous iteration)
        put_call_ratio = data[t, 64]
        den = max(abs(put_call_ratio), 1e-8)
        si_pc_ratio = data[t, 0] / den
        eng.append(si_pc_ratio)
        
        # 3. Short volume ratio (average of last 5 days)
        # Improved by using weighted average (more recent days have higher weight)
        weights = np.array([1, 1.5, 2, 2.5, 3])
        weights = weights / np.sum(weights)
        short_ratio_values = short_volume[-5:] / np.maximum(total_volume[-5:], 1e-8)
        short_ratio = np.sum(short_ratio_values * weights)
        eng.append(short_ratio)
        
        # 4. Recent price trend with exponential weighting (last 5 days vs previous 5 days)
        # Improved by using exponential weighting for recency bias
        recent_weights = np.array([1, 1.2, 1.4, 1.7, 2.0])
        recent_weights = recent_weights / np.sum(recent_weights)
        recent_close_avg = np.sum(close_prices[-5:] * recent_weights)
        
        prev_weights = np.array([1, 1.1, 1.2, 1.3, 1.4])
        prev_weights = prev_weights / np.sum(prev_weights)
        prev_close_avg = np.sum(close_prices[-10:-5] * prev_weights)
        
        den = max(abs(prev_close_avg), 1e-8)
        price_trend = (recent_close_avg / den) - 1
        eng.append(price_trend)
        
        # 5. Volatility (standard deviation of returns over last 10 days)
        # Improved by using Parkinson's volatility estimator which uses high-low range
        if len(high_prices) >= 10 and len(low_prices) >= 10:
            ln_hl_ratio = np.log(high_prices[-10:] / np.maximum(low_prices[-10:], 1e-8))
            parkinson_vol = np.sqrt(np.sum(ln_hl_ratio**2) / (4 * np.log(2) * 10))
            volatility = parkinson_vol
        else:
            returns = np.diff(close_prices[-11:]) / np.maximum(close_prices[-11:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 1 else 0
        eng.append(volatility)
        
        # 6. RSI (Relative Strength Index) - 14 period
        # Kept from previous iteration due to high importance
        if len(close_prices) >= 14:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain[-14:])
            avg_loss = np.mean(loss[-14:])
            den = max(avg_loss, 1e-8)
            rs = avg_gain / den
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Default value if not enough data
        eng.append(rsi)
        
        # 7. Short interest momentum (rate of change)
        # Improved by using exponential smoothing if previous data available
        if t > 0:
            prev_short_interest = data[t-1, 0]
            den = max(abs(prev_short_interest), 1e-8)
            short_momentum = (data[t, 0] / den) - 1
            
            # Add exponential smoothing if more history available
            if t > 2:
                alpha = 0.7  # Weight for current observation
                prev_momentum = (data[t-1, 0] / max(abs(data[t-2, 0]), 1e-8)) - 1
                short_momentum = alpha * short_momentum + (1-alpha) * prev_momentum
        else:
            short_momentum = 0
        eng.append(short_momentum)
        
        # 8. Options implied volatility to historical volatility ratio
        # Kept from previous iteration due to high importance
        implied_vol = data[t, 66]
        den = max(volatility, 1e-8)
        iv_hv_ratio = implied_vol / den
        eng.append(iv_hv_ratio)
        
        # 9. Short cost to implied volatility ratio
        # Kept from previous iteration due to high importance
        short_cost = data[t, 65]
        den = max(implied_vol, 1e-8)
        cost_vol_ratio = short_cost / den
        eng.append(cost_vol_ratio)
        
        # 10. Bollinger Band width (volatility measure)
        # Improved by using adaptive lookback based on available data
        lookback = min(10, len(close_prices))
        if lookback >= 5:
            sma = np.mean(close_prices[-lookback:])
            std = np.std(close_prices[-lookback:])
            bb_width = (2 * std) / max(abs(sma), 1e-8)
        else:
            bb_width = 0
        eng.append(bb_width)
        
        # 11. OHLC summary: average true range (ATR)
        # Kept from previous iteration due to high importance
        tr_values = []
        for i in range(1, len(close_prices)):
            high_low = high_prices[i] - low_prices[i]
            high_close = abs(high_prices[i] - close_prices[i-1])
            low_close = abs(low_prices[i] - close_prices[i-1])
            tr = max(high_low, high_close, low_close)
            tr_values.append(tr)
        atr = np.mean(tr_values) if tr_values else 0
        eng.append(atr)
        
        # 12. NEW: Short interest to ATR ratio
        # Measures short interest relative to price volatility
        den = max(atr, 1e-8)
        si_atr_ratio = data[t, 0] / den
        eng.append(si_atr_ratio)
        
        # 13. NEW: Short volume trend with acceleration
        # Combines trend and acceleration into a single metric
        if len(short_volume) >= 10:
            recent_short_avg = np.mean(short_volume[-5:])
            prev_short_avg = np.mean(short_volume[-10:-5])
            den = max(abs(prev_short_avg), 1e-8)
            short_trend = (recent_short_avg / den) - 1
            
            # Calculate acceleration component
            short_vol_diff = np.diff(short_volume[-10:])
            short_accel = np.mean(np.diff(short_vol_diff))
            
            # Combine trend and acceleration
            short_trend_accel = short_trend + (0.5 * short_accel)
        else:
            short_trend_accel = 0
        eng.append(short_trend_accel)
        
        # 14. NEW: Money Flow Index (MFI) - volume-weighted RSI
        if len(close_prices) >= 14 and len(total_volume) >= 14:
            typical_price = (high_prices[-14:] + low_prices[-14:] + close_prices[-14:]) / 3
            money_flow = typical_price * total_volume[-14:]
            
            delta_tp = np.diff(np.concatenate(([typical_price[0]], typical_price)))
            pos_flow = np.sum(np.where(delta_tp >= 0, money_flow, 0))
            neg_flow = np.sum(np.where(delta_tp < 0, money_flow, 0))
            
            den = max(neg_flow, 1e-8)
            money_ratio = pos_flow / den
            mfi = 100 - (100 / (1 + money_ratio))
        else:
            mfi = 50
        eng.append(mfi)
        
        # 15. NEW: Short interest to volume volatility ratio
        # Measures short interest relative to volume volatility
        vol_std = np.std(total_volume) if len(total_volume) > 1 else 1
        den = max(vol_std, 1e-8)
        si_vol_vol_ratio = data[t, 0] / den
        eng.append(si_vol_vol_ratio)
        
        # 16. NEW: Chaikin Money Flow (CMF)
        if len(close_prices) >= 10:
            mf_multiplier = ((close_prices[-10:] - low_prices[-10:]) - 
                            (high_prices[-10:] - close_prices[-10:])) / np.maximum(high_prices[-10:] - low_prices[-10:], 1e-8)
            mf_volume = mf_multiplier * total_volume[-10:]
            cmf = np.sum(mf_volume) / np.sum(total_volume[-10:])
        else:
            cmf = 0
        eng.append(cmf)
        
        # 17. NEW: Short interest to CMF ratio
        den = max(abs(cmf), 1e-8)
        si_cmf_ratio = data[t, 0] / den
        eng.append(si_cmf_ratio)
        
        # 18. NEW: Normalized short interest (z-score)
        if t >= 3:  # Need at least 3 previous points
            si_history = [data[max(0, t-i), 0] for i in range(4)]
            si_mean = np.mean(si_history)
            si_std = np.std(si_history)
            den = max(si_std, 1e-8)
            si_zscore = (data[t, 0] - si_mean) / den
        else:
            si_zscore = 0
        eng.append(si_zscore)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent width by padding or truncating
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN and infinity values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 2 (claude) (SVM)
==================================================
Training SVM model...

Iteration 2 (claude) Performance:
MAE: 108713.7760
RMSE: 131242.7978
MAPE: 14.58%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 91
   • Highly important features (top 5%): 73

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_20_t2: importance=0.0008, rank=1
   2. Feature_4_t3: importance=0.0007, rank=2
   3. Feature_13_t1: importance=0.0006, rank=3
   4. Feature_6_t3: importance=0.0006, rank=4
   5. Feature_10_t1: importance=0.0006, rank=5
💾 Saved code for iteration 2 to iteration_codes dictionary
🎉 IMPROVEMENT! MAPE improved by 0.35%

📈 Current best MAPE: 14.58%
🔄 Iterations without improvement: 0/5

🎯 Final Evaluation on Test Set (Unseen Data)
======================================================================
Using train+validation data for final model training to maximize data usage
Combined train+val data shape: (142, 4, 97)
Test data shape: (36, 4, 97)

📊 BASELINE EVALUATION (Raw Features, Train+Val → Test):

==================================================
Training Baseline Final (Raw Features) (SVM)
==================================================
Training SVM model...

Baseline Final (Raw Features) Performance:
MAE: 96444.9026
RMSE: 132965.5732
MAPE: 13.70%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 246
   • Highly important features (top 5%): 83

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t2: importance=0.0004, rank=1
   2. Feature_2_t0: importance=0.0004, rank=2
   3. Feature_63_t0: importance=0.0003, rank=3
   4. Feature_87_t0: importance=0.0002, rank=4
   5. Feature_67_t3: importance=0.0002, rank=5
   Baseline MAPE: 13.70%
   Baseline MAE: 96444.9026
   Baseline RMSE: 132965.5732

🔧 BEST MODEL EVALUATION (Processed Features, Train+Val → Test):
Applying best feature engineering to all data...
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Processed train+val shape: (142, 4, 25)
Processed test shape: (36, 4, 25)

==================================================
Training Best Model Final (Processed Features) (SVM)
==================================================
Training SVM model...

Best Model Final (Processed Features) Performance:
MAE: 98870.9053
RMSE: 123531.3005
MAPE: 13.79%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 77
   • Highly important features (top 5%): 60

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_16_t2: importance=0.0022, rank=1
   2. Feature_13_t1: importance=0.0006, rank=2
   3. Feature_22_t2: importance=0.0006, rank=3
   4. Feature_4_t2: importance=0.0006, rank=4
   5. Feature_6_t0: importance=0.0005, rank=5

📊 Best Model Test Set Performance:
   MAPE: 13.79%
   MAE: 98870.9053
   RMSE: 123531.3005

🎯 IMPROVEMENT OVER BASELINE:
   Baseline MAPE: 13.70%
   Best Model MAPE: 13.79%
   Absolute Improvement: -0.09%
   Relative Improvement: -0.7%

======================================================================
ITERATION PERFORMANCE SUMMARY
======================================================================

📊 VALIDATION MAPE TREND:
--------------------------------------------------------------------------------
Iteration  Model                     Validation MAPE Improvement from Last
--------------------------------------------------------------------------------
0          Baseline                  15.28           N/A                 
1          Iteration 1               14.94           +0.34%              
2          Iteration 2               14.58           +0.35%              
--------------------------------------------------------------------------------
🏆 Best: Iteration 2 - MAPE: 14.58%
✅ Saved ANDE results to cache/ANDE_iterative_results_enhanced.pkl
✅ Summary report saved for ANDE

🎉 Process completed successfully for ANDE!

================================================================================
PROCESSING TICKER 14/14: AROC
================================================================================
🚀 Starting Iterative Agent-Based Feature Selection Process for AROC
======================================================================
📊 Loading data from parquet file...
📊 Loading data for AROC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AROC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data integrity validation passed
✅ Data loaded successfully!
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
Features per timestep: 97
Lookback window: 4

🎯 Step 1: Running baseline model on validation set...

==================================================
Training Baseline (All 97 Features) (SVM)
==================================================
Training SVM model...

Baseline (All 97 Features) Performance:
MAE: 454892.2948
RMSE: 553447.6698
MAPE: 10.54%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 335
   • Highly important features (top 5%): 192

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_69_t3: importance=0.0018, rank=1
   2. Feature_70_t3: importance=0.0016, rank=2
   3. Feature_72_t3: importance=0.0015, rank=3
   4. Feature_71_t3: importance=0.0014, rank=4
   5. Feature_74_t3: importance=0.0009, rank=5

📊 Baseline Performance: MAPE = 10.54%

🔄 Starting iterative improvement process...
Max iterations: 2
Min improvement threshold: 0.1%
Patience: 5 iterations without improvement

======================================================================
ITERATION 1
======================================================================
🤖 Calling Claude for iteration 1...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Extract key data components
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        # Reshape OHLC data for easier access
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract other important data
        put_call_ratio = data[t, 64]
        synthetic_short_cost = data[t, 65]
        implied_volatility = data[t, 66]
        shares_outstanding = data[t, 67]
        daily_short_volume = data[t, 68:83]
        daily_total_volume = data[t, 83:98]
        
        # Keep essential raw features
        raw_keep = [
            short_interest,                # Short interest (target-related)
            avg_volume,                    # Average volume (liquidity indicator)
            days_to_cover,                 # Days to cover (short squeeze risk)
            close_prices[-1],              # Latest close price
            put_call_ratio,                # Options sentiment
            synthetic_short_cost,          # Cost of shorting
            implied_volatility,            # Market volatility expectations
            shares_outstanding,            # Total shares outstanding
            daily_short_volume[-1],        # Most recent short volume
            daily_total_volume[-1]         # Most recent total volume
        ]
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        eng = []
        
        # 1. Short Interest Ratio (SI to shares outstanding)
        si_ratio = short_interest / max(shares_outstanding, 1e-8)
        eng.append(si_ratio)
        
        # 2. Short Volume Ratio (recent average)
        short_volume_ratio = np.mean(daily_short_volume) / max(np.mean(daily_total_volume), 1e-8)
        eng.append(short_volume_ratio)
        
        # 3. Recent Short Volume Trend (last 5 days vs previous 10)
        recent_short_ratio = np.mean(daily_short_volume[-5:]) / max(np.mean(daily_short_volume[:-5]), 1e-8)
        eng.append(recent_short_ratio)
        
        # 4. Price momentum (5-day)
        if len(close_prices) >= 5:
            price_momentum_5d = close_prices[-1] / max(close_prices[-5], 1e-8) - 1
        else:
            price_momentum_5d = 0
        eng.append(price_momentum_5d)
        
        # 5. Price volatility (standard deviation of returns)
        if len(close_prices) > 1:
            returns = np.diff(close_prices) / np.maximum(close_prices[:-1], 1e-8)
            price_volatility = np.std(returns) if len(returns) > 0 else 0
        else:
            price_volatility = 0
        eng.append(price_volatility)
        
        # 6. Average True Range (ATR) - volatility measure
        true_ranges = []
        for i in range(1, len(high_prices)):
            tr1 = high_prices[i] - low_prices[i]
            tr2 = abs(high_prices[i] - close_prices[i-1])
            tr3 = abs(low_prices[i] - close_prices[i-1])
            true_ranges.append(max(tr1, tr2, tr3))
        atr = np.mean(true_ranges) if true_ranges else 0
        eng.append(atr)
        
        # 7. Short Interest to Float Ratio
        si_to_float = short_interest / max(shares_outstanding, 1e-8)
        eng.append(si_to_float)
        
        # 8. Short Volume Acceleration (change in short volume)
        if len(daily_short_volume) >= 3:
            short_vol_diff = daily_short_volume[-1] - daily_short_volume[-3]
            short_vol_accel = short_vol_diff / max(daily_short_volume[-3], 1e-8)
        else:
            short_vol_accel = 0
        eng.append(short_vol_accel)
        
        # 9. Relative Strength Index (RSI) - 14 period
        if len(close_prices) >= 14:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain[-14:])
            avg_loss = np.mean(loss[-14:])
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Neutral value when not enough data
        eng.append(rsi)
        
        # 10. Short Interest to Days to Cover Ratio
        si_to_dtc = short_interest / max(days_to_cover, 1e-8)
        eng.append(si_to_dtc)
        
        # 11. Bollinger Band Width (volatility measure)
        if len(close_prices) >= 5:
            sma = np.mean(close_prices[-5:])
            std = np.std(close_prices[-5:])
            bb_width = (2 * std) / max(sma, 1e-8)
        else:
            bb_width = 0
        eng.append(bb_width)
        
        # 12. Short Interest Change Rate
        # Using previous data point if available in the lookback window
        if t > 0:
            prev_si = data[t-1, 0]
            si_change_rate = (short_interest - prev_si) / max(prev_si, 1e-8)
        else:
            si_change_rate = 0
        eng.append(si_change_rate)
        
        # 13. Volume Pressure (ratio of volume to average)
        volume_pressure = daily_total_volume[-1] / max(avg_volume, 1e-8)
        eng.append(volume_pressure)
        
        # 14. Price to Volatility Ratio
        price_vol_ratio = close_prices[-1] / max(implied_volatility, 1e-8)
        eng.append(price_vol_ratio)
        
        # 15. Short Cost Efficiency (days to cover / synthetic short cost)
        short_cost_efficiency = days_to_cover / max(synthetic_short_cost, 1e-8)
        eng.append(short_cost_efficiency)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent size by padding or truncating
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle any NaN or infinite values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 1 (claude) (SVM)
==================================================
Training SVM model...

Iteration 1 (claude) Performance:
MAE: 413101.7760
RMSE: 499140.5090
MAPE: 9.65%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 77
   • Highly important features (top 5%): 48

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_19_t3: importance=0.0045, rank=1
   2. Feature_1_t3: importance=0.0031, rank=2
   3. Feature_11_t3: importance=0.0030, rank=3
   4. Feature_1_t1: importance=0.0025, rank=4
   5. Feature_12_t3: importance=0.0023, rank=5
💾 Saved code for iteration 1 to iteration_codes dictionary
🎉 IMPROVEMENT! MAPE improved by 0.89%

📈 Current best MAPE: 9.65%
🔄 Iterations without improvement: 0/5

======================================================================
ITERATION 2
======================================================================
🤖 Calling Claude for iteration 2...
✅ Claude response received!

📝 Claude's Response:
--------------------------------------------------
```python
def construct_features(data):
    RAW_DIM = 97
    MAX_TOTAL = 25
    
    lookback_window = data.shape[0]
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Extract key data components
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        # Reshape OHLC data for easier access
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract other important data
        put_call_ratio = data[t, 64]
        synthetic_short_cost = data[t, 65]
        implied_volatility = data[t, 66]
        shares_outstanding = data[t, 67]
        daily_short_volume = data[t, 68:83]
        daily_total_volume = data[t, 83:98]
        
        # Keep essential raw features based on previous importance analysis
        # Reduced from 10 to 8 raw features to make room for more engineered features
        raw_keep = [
            short_interest,                # Short interest (target-related)
            avg_volume,                    # Average volume (liquidity indicator)
            days_to_cover,                 # Days to cover (short squeeze risk)
            close_prices[-1],              # Latest close price
            put_call_ratio,                # Options sentiment
            synthetic_short_cost,          # Cost of shorting
            implied_volatility,            # Market volatility expectations
            daily_short_volume[-1]/max(daily_total_volume[-1], 1e-8)  # Most recent short volume ratio
        ]
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        eng = []
        
        # 1. Short Interest Ratio (SI to shares outstanding) - high importance from previous iteration
        si_ratio = short_interest / max(shares_outstanding, 1e-8)
        eng.append(si_ratio)
        
        # 2. Short Interest Change Rate - using more robust calculation
        if t > 0:
            prev_si = data[t-1, 0]
            si_change_rate = (short_interest - prev_si) / max(prev_si, 1e-8)
        else:
            si_change_rate = 0
        eng.append(si_change_rate)
        
        # 3. Short Volume Trend - 3-day vs 7-day (refined from previous iteration)
        if len(daily_short_volume) >= 10:
            recent_short_trend = np.mean(daily_short_volume[-3:]) / max(np.mean(daily_short_volume[-10:-3]), 1e-8) - 1
        else:
            recent_short_trend = 0
        eng.append(recent_short_trend)
        
        # 4. Short Volume Acceleration - refined calculation
        if len(daily_short_volume) >= 5:
            recent_change = np.mean(daily_short_volume[-2:]) - np.mean(daily_short_volume[-5:-2])
            base = max(np.mean(daily_short_volume[-5:-2]), 1e-8)
            short_vol_accel = recent_change / base
        else:
            short_vol_accel = 0
        eng.append(short_vol_accel)
        
        # 5. Price momentum (3-day) - shorter timeframe for more recent signal
        if len(close_prices) >= 3:
            price_momentum_3d = close_prices[-1] / max(close_prices[-3], 1e-8) - 1
        else:
            price_momentum_3d = 0
        eng.append(price_momentum_3d)
        
        # 6. Price momentum (7-day) - medium timeframe
        if len(close_prices) >= 7:
            price_momentum_7d = close_prices[-1] / max(close_prices[-7], 1e-8) - 1
        else:
            price_momentum_7d = 0
        eng.append(price_momentum_7d)
        
        # 7. Relative Strength Index (RSI) - 14 period - high importance from previous iteration
        if len(close_prices) >= 14:
            delta = np.diff(close_prices)
            gain = np.where(delta > 0, delta, 0)
            loss = np.where(delta < 0, -delta, 0)
            avg_gain = np.mean(gain[-14:])
            avg_loss = np.mean(loss[-14:])
            rs = avg_gain / max(avg_loss, 1e-8)
            rsi = 100 - (100 / (1 + rs))
        else:
            rsi = 50  # Neutral value when not enough data
        eng.append(rsi)
        
        # 8. Bollinger Band Position - where is price relative to bands?
        if len(close_prices) >= 5:
            sma = np.mean(close_prices[-5:])
            std = np.std(close_prices[-5:])
            upper_band = sma + 2 * std
            lower_band = sma - 2 * std
            band_width = (upper_band - lower_band) / max(sma, 1e-8)
            # Position within bands (-1 to +1 scale)
            bb_position = (close_prices[-1] - sma) / max(upper_band - sma, 1e-8) if close_prices[-1] > sma else (close_prices[-1] - sma) / max(sma - lower_band, 1e-8)
            bb_position = max(min(bb_position, 1), -1)  # Clamp to [-1, 1]
        else:
            bb_position = 0
            band_width = 0
        eng.append(bb_position)
        eng.append(band_width)
        
        # 9. Volume Pressure (ratio of recent volume to longer-term average) - refined
        recent_vol_avg = np.mean(daily_total_volume[-3:])
        volume_pressure = recent_vol_avg / max(avg_volume, 1e-8)
        eng.append(volume_pressure)
        
        # 10. Short Cost Efficiency (days to cover / synthetic short cost) - high importance
        short_cost_efficiency = days_to_cover / max(synthetic_short_cost, 1e-8)
        eng.append(short_cost_efficiency)
        
        # 11. Average True Range (ATR) - normalized by price
        true_ranges = []
        for i in range(1, len(high_prices)):
            tr1 = high_prices[i] - low_prices[i]
            tr2 = abs(high_prices[i] - close_prices[i-1])
            tr3 = abs(low_prices[i] - close_prices[i-1])
            true_ranges.append(max(tr1, tr2, tr3))
        atr = np.mean(true_ranges) if true_ranges else 0
        norm_atr = atr / max(close_prices[-1], 1e-8)  # Normalize by current price
        eng.append(norm_atr)
        
        # 12. MACD Signal - Momentum indicator
        if len(close_prices) >= 12:
            ema12 = np.mean(close_prices[-12:])  # Simplified EMA
            ema26 = np.mean(close_prices)  # Use all available data for longer EMA
            macd = ema12 - ema26
            macd_signal = macd / max(close_prices[-1], 1e-8)  # Normalize by price
        else:
            macd_signal = 0
        eng.append(macd_signal)
        
        # 13. Short Interest to Float Ratio Change - rate of change in short interest relative to float
        if t > 0:
            prev_si_ratio = data[t-1, 0] / max(shares_outstanding, 1e-8)
            si_ratio_change = (si_ratio - prev_si_ratio) / max(prev_si_ratio, 1e-8)
        else:
            si_ratio_change = 0
        eng.append(si_ratio_change)
        
        # 14. Short Volume to Total Volume Ratio Trend
        if len(daily_short_volume) >= 10 and len(daily_total_volume) >= 10:
            recent_ratio = np.sum(daily_short_volume[-3:]) / max(np.sum(daily_total_volume[-3:]), 1e-8)
            older_ratio = np.sum(daily_short_volume[-10:-3]) / max(np.sum(daily_total_volume[-10:-3]), 1e-8)
            sv_ratio_trend = recent_ratio / max(older_ratio, 1e-8) - 1
        else:
            sv_ratio_trend = 0
        eng.append(sv_ratio_trend)
        
        # 15. Implied Volatility to Historical Volatility Ratio
        if len(close_prices) > 1:
            returns = np.diff(close_prices) / np.maximum(close_prices[:-1], 1e-8)
            hist_vol = np.std(returns) * np.sqrt(252)  # Annualized
            iv_hv_ratio = implied_volatility / max(hist_vol, 1e-8)
        else:
            iv_hv_ratio = 1
        eng.append(iv_hv_ratio)
        
        # 16. Price Gap Analysis - significant overnight gaps
        price_gaps = []
        for i in range(1, len(open_prices)):
            gap = (open_prices[i] - close_prices[i-1]) / max(close_prices[i-1], 1e-8)
            price_gaps.append(gap)
        avg_gap = np.mean(price_gaps) if price_gaps else 0
        eng.append(avg_gap)
        
        # 17. Short Interest to Days to Cover Change Rate
        si_to_dtc = short_interest / max(days_to_cover, 1e-8)
        if t > 0:
            prev_si_to_dtc = data[t-1, 0] / max(data[t-1, 2], 1e-8)
            si_dtc_change = (si_to_dtc - prev_si_to_dtc) / max(prev_si_to_dtc, 1e-8)
        else:
            si_dtc_change = 0
        eng.append(si_dtc_change)
        
        # Ensure we don't exceed MAX_NEW
        eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent size by padding or truncating
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle any NaN or infinite values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
--------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Function executed successfully and passed validation!

🔧 Applying feature selection using claude function...
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Training data shape: (106, 4, 97) -> (106, 4, 25)
Validation data shape: (36, 4, 97) -> (36, 4, 25)

==================================================
Training Iteration 2 (claude) (SVM)
==================================================
Training SVM model...

Iteration 2 (claude) Performance:
MAE: 408814.2141
RMSE: 487082.4469
MAPE: 9.53%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 84
   • Highly important features (top 5%): 63

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0037, rank=1
   2. Feature_23_t1: importance=0.0019, rank=2
   3. Feature_6_t1: importance=0.0012, rank=3
   4. Feature_17_t1: importance=0.0012, rank=4
   5. Feature_8_t1: importance=0.0011, rank=5
💾 Saved code for iteration 2 to iteration_codes dictionary
🎉 IMPROVEMENT! MAPE improved by 0.12%

📈 Current best MAPE: 9.53%
🔄 Iterations without improvement: 0/5

🎯 Final Evaluation on Test Set (Unseen Data)
======================================================================
Using train+validation data for final model training to maximize data usage
Combined train+val data shape: (142, 4, 97)
Test data shape: (36, 4, 97)

📊 BASELINE EVALUATION (Raw Features, Train+Val → Test):

==================================================
Training Baseline Final (Raw Features) (SVM)
==================================================
Training SVM model...

Baseline Final (Raw Features) Performance:
MAE: 494427.6401
RMSE: 646601.0801
MAPE: 9.53%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 303
   • Highly important features (top 5%): 160

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t3: importance=0.0019, rank=1
   2. Feature_69_t3: importance=0.0013, rank=2
   3. Feature_72_t3: importance=0.0013, rank=3
   4. Feature_71_t3: importance=0.0013, rank=4
   5. Feature_74_t3: importance=0.0007, rank=5
   Baseline MAPE: 9.53%
   Baseline MAE: 494427.6401
   Baseline RMSE: 646601.0801

🔧 BEST MODEL EVALUATION (Processed Features, Train+Val → Test):
Applying best feature engineering to all data...
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Feature selection applied successfully on attempt 1
✅ Feature selection applied successfully on attempt 1
Processed train+val shape: (142, 4, 25)
Processed test shape: (36, 4, 25)

==================================================
Training Best Model Final (Processed Features) (SVM)
==================================================
Training SVM model...

Best Model Final (Processed Features) Performance:
MAE: 486206.6431
RMSE: 633416.8160
MAPE: 9.32%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 100
   • Important features (top 10%): 78
   • Highly important features (top 5%): 60

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0038, rank=1
   2. Feature_6_t3: importance=0.0012, rank=2
   3. Feature_13_t1: importance=0.0011, rank=3
   4. Feature_6_t2: importance=0.0010, rank=4
   5. Feature_6_t1: importance=0.0010, rank=5

📊 Best Model Test Set Performance:
   MAPE: 9.32%
   MAE: 486206.6431
   RMSE: 633416.8160

🎯 IMPROVEMENT OVER BASELINE:
   Baseline MAPE: 9.53%
   Best Model MAPE: 9.32%
   Absolute Improvement: 0.21%
   Relative Improvement: 2.2%

======================================================================
ITERATION PERFORMANCE SUMMARY
======================================================================

📊 VALIDATION MAPE TREND:
--------------------------------------------------------------------------------
Iteration  Model                     Validation MAPE Improvement from Last
--------------------------------------------------------------------------------
0          Baseline                  10.54           N/A                 
1          Iteration 1               9.65            +0.89%              
2          Iteration 2               9.53            +0.12%              
--------------------------------------------------------------------------------
🏆 Best: Iteration 2 - MAPE: 9.53%
✅ Saved AROC results to cache/AROC_iterative_results_enhanced.pkl
✅ Summary report saved for AROC

🎉 Process completed successfully for AROC!

================================================================================
GENERATING UNIVERSAL FEATURE ENGINEERING CODE
================================================================================
Successfully processed 12 tickers: ABCB, EIG, FSS, ABM, IART, SRPT, EXTR, SCSC, SLG, HL, ANDE, AROC

🤖 Calling Claude to generate universal feature engineering code...
✅ Universal function validation passed! Output shape: (4, 25)
✅ Universal code generated and validated successfully!
✅ Universal code response received!

📝 Claude's Universal Feature Engineering Code:
------------------------------------------------------------
```python
def construct_features(data):
    """
    Universal feature construction function for short interest prediction.
    
    Args:
        data: numpy array of shape (lookback_window, 97)
        
    Returns:
        numpy array of engineered features
    """
    # Determine if we're using 15 or 25 features based on input data characteristics
    lookback_window = data.shape[0]
    
    # Analyze the data to determine optimal feature count
    # Higher volatility stocks benefit from more features
    if lookback_window > 1:
        price_volatility = np.std(data[:, 3:63].reshape(-1, 15, 4)[:, :, 3]) / np.mean(data[:, 3:63].reshape(-1, 15, 4)[:, :, 3])
        si_volatility = np.std(data[:, 0]) / max(np.mean(data[:, 0]), 1e-8)
        combined_volatility = (price_volatility + si_volatility) / 2
        MAX_TOTAL = 25 if combined_volatility > 0.05 else 15
    else:
        MAX_TOTAL = 25  # Default to higher feature count when we can't determine volatility
    
    features = np.zeros((lookback_window, MAX_TOTAL), dtype=np.float32)
    
    for t in range(lookback_window):
        # Initialize lists for raw and engineered features
        raw_keep = []
        eng = []
        
        # Extract key raw features
        short_interest = data[t, 0]
        avg_volume = data[t, 1]
        days_to_cover = data[t, 2]
        
        # Extract OHLC data for the past 15 days
        ohlc = data[t, 3:63].reshape(15, 4)
        open_prices, high_prices, low_prices, close_prices = ohlc[:, 0], ohlc[:, 1], ohlc[:, 2], ohlc[:, 3]
        
        # Extract options data
        put_call_ratio = data[t, 64]
        synthetic_short_cost = data[t, 65]
        implied_volatility = data[t, 66]
        shares_outstanding = data[t, 67]
        
        # Extract short volume and total volume data
        short_volume = data[t, 68:83]
        total_volume = data[t, 83:98]
        
        # Keep critical raw features (consistent across all best models)
        raw_keep.append(short_interest)  # Short interest (always keep)
        raw_keep.append(avg_volume)      # Average daily volume (always keep)
        raw_keep.append(days_to_cover)   # Days to cover (high importance)
        raw_keep.append(close_prices[-1])  # Most recent close price
        raw_keep.append(put_call_ratio)  # Options put/call ratio
        raw_keep.append(synthetic_short_cost)  # Cost of shorting
        raw_keep.append(implied_volatility)  # Implied volatility
        
        # Calculate MAX_NEW based on raw features kept
        MAX_NEW = MAX_TOTAL - len(raw_keep)
        
        # 1. Short Interest to Shares Outstanding Ratio
        # Measures what percentage of available shares are being shorted
        si_to_shares = short_interest / max(shares_outstanding, 1e-8)
        eng.append(si_to_shares)
        
        # 2. Short Volume Ratio (recent 5 days)
        # Higher ratio indicates more selling pressure
        recent_short_ratio = np.mean(short_volume[-5:] / np.maximum(total_volume[-5:], 1e-8))
        eng.append(recent_short_ratio)
        
        # 3. Short Volume Trend (slope over last 10 days)
        # Positive slope indicates increasing short selling activity
        if len(short_volume) >= 10:
            x = np.arange(10)
            y = short_volume[-10:]
            slope = np.polyfit(x, y, 1)[0] if np.any(y) else 0.0
            # Normalize by average short volume
            slope = slope / max(np.mean(short_volume[-10:]), 1e-8)
            eng.append(slope)
        else:
            eng.append(0.0)
        
        # 4. Price Momentum (5-day)
        # Captures recent price trend direction and strength
        if len(close_prices) >= 5:
            momentum_5d = (close_prices[-1] / max(close_prices[-5], 1e-8)) - 1.0
            eng.append(momentum_5d)
        else:
            eng.append(0.0)
        
        # 5. Price Volatility (standard deviation of returns)
        # Higher volatility often correlates with higher short interest
        if len(close_prices) >= 5:
            returns = np.diff(close_prices[-6:]) / np.maximum(close_prices[-6:-1], 1e-8)
            volatility = np.std(returns) if len(returns) > 0 else 0.0
            eng.append(volatility)
        else:
            eng.append(0.0)
        
        # 6. Short Interest Momentum
        # Rate of change in short interest, indicating acceleration/deceleration
        if t > 0 and data[t-1, 0] > 1e-8:
            si_momentum = (short_interest / max(data[t-1, 0], 1e-8)) - 1.0
            eng.append(si_momentum)
        else:
            eng.append(0.0)
        
        # 7. Short Interest to Volume Ratio
        # Indicates how many days of average volume the short interest represents
        si_to_volume = short_interest / max(avg_volume, 1e-8)
        eng.append(si_to_volume)
        
        # 8. Relative Strength Index (RSI)
        # Overbought/oversold indicator that may correlate with short interest changes
        if len(close_prices) >= 14:
            delta = np.diff(close_prices[-15:])
            gain = np.sum(np.where(delta > 0, delta, 0))
            loss = np.sum(np.where(delta < 0, -delta, 0))
            
            if loss > 1e-8:
                rs = gain / max(loss, 1e-8)
                rsi = 100 - (100 / (1 + rs))
            else:
                rsi = 100.0 if gain > 0 else 50.0
            eng.append(rsi)
        else:
            eng.append(50.0)  # Neutral RSI value
        
        # If we have space for more features, add these high-importance ones
        if MAX_TOTAL > 15:
            # 9. Short Volume Acceleration
            # Second derivative of short volume
            if len(short_volume) >= 3:
                short_vol_diff1 = short_volume[-1] - short_volume[-2]
                short_vol_diff2 = short_volume[-2] - short_volume[-3]
                short_accel = short_vol_diff1 - short_vol_diff2
                short_accel = short_accel / max(np.mean(short_volume[-3:]), 1e-8)  # Normalize
                eng.append(short_accel)
            else:
                eng.append(0.0)
            
            # 10. VWAP Deviation
            # Distance of current price from volume-weighted average price
            if len(close_prices) >= 5 and np.sum(total_volume[-5:]) > 0:
                vwap = np.sum(close_prices[-5:] * total_volume[-5:]) / max(np.sum(total_volume[-5:]), 1e-8)
                vwap_dev = (close_prices[-1] / max(vwap, 1e-8)) - 1.0
                eng.append(vwap_dev)
            else:
                eng.append(0.0)
            
            # 11. Bollinger Band Position
            # Where price is within volatility bands
            if len(close_prices) >= 10:
                sma = np.mean(close_prices[-10:])
                std = np.std(close_prices[-10:])
                bb_position = (close_prices[-1] - sma) / max(2 * std, 1e-8)  # Normalized position
                eng.append(bb_position)
            else:
                eng.append(0.0)
            
            # 12. Implied Volatility to Historical Volatility Ratio
            # Compares market expectations to realized volatility
            if volatility > 0:
                iv_hv_ratio = implied_volatility / max(volatility, 1e-8)
                eng.append(iv_hv_ratio)
            else:
                eng.append(1.0)  # Default when historical volatility is unavailable
            
            # 13. Short Interest to Days to Cover Ratio
            # Relates absolute short interest to relative coverage difficulty
            si_to_dtc = short_interest / max(days_to_cover, 1e-8)
            eng.append(si_to_dtc)
            
            # 14. Average True Range (ATR) - Normalized
            # Volatility measure normalized by price
            if len(high_prices) >= 5 and len(low_prices) >= 5 and len(close_prices) >= 6:
                tr_values = []
                for i in range(1, min(5, len(high_prices))):
                    high_low = high_prices[-i] - low_prices[-i]
                    high_close = abs(high_prices[-i] - close_prices[-(i+1)])
                    low_close = abs(low_prices[-i] - close_prices[-(i+1)])
                    tr = max(high_low, high_close, low_close)
                    tr_values.append(tr)
                atr = np.mean(tr_values) if tr_values else 0
                normalized_atr = atr / max(close_prices[-1], 1e-8)
                eng.append(normalized_atr)
            else:
                eng.append(0.0)
            
            # 15. Short Volume to Total Volume Ratio Change
            # Measures the acceleration in short selling relative to total volume
            if len(short_volume) >= 5 and len(total_volume) >= 5:
                recent_ratio = short_volume[-1] / max(total_volume[-1], 1e-8)
                past_ratio = np.mean(short_volume[-5:-1]) / max(np.mean(total_volume[-5:-1]), 1e-8)
                ratio_change = recent_ratio - past_ratio
                eng.append(ratio_change)
            else:
                eng.append(0.0)
            
            # 16. Price Gap Analysis
            # Identifies significant overnight price gaps
            if len(close_prices) >= 2 and len(open_prices) >= 1:
                overnight_gap = (open_prices[-1] / max(close_prices[-2], 1e-8)) - 1.0
                eng.append(overnight_gap)
            else:
                eng.append(0.0)
            
            # 17. Short Cost to Price Ratio
            # Relates borrowing cost to price level
            short_cost_to_price = synthetic_short_cost / max(close_prices[-1], 1e-8)
            eng.append(short_cost_to_price)
            
            # 18. Normalized Short Interest Position
            # Current SI relative to recent range
            if t >= 5:
                historical_si = [data[max(0, t-i), 0] for i in range(5)]
                si_min, si_max = min(historical_si), max(historical_si)
                si_range = si_max - si_min
                if si_range > 1e-8:
                    norm_si = (short_interest - si_min) / si_range
                else:
                    norm_si = 0.5  # Default to middle if no range
                eng.append(norm_si)
            else:
                eng.append(0.5)
        
        # Ensure we don't exceed MAX_NEW
        if len(eng) > MAX_NEW:
            eng = eng[:MAX_NEW]
        
        # Combine raw and engineered features
        row = np.array(raw_keep + eng, dtype=np.float32)
        
        # Ensure consistent width by padding or truncating
        if row.size < MAX_TOTAL:
            row = np.pad(row, (0, MAX_TOTAL - row.size), 'constant')
        elif row.size > MAX_TOTAL:
            row = row[:MAX_TOTAL]
        
        features[t] = row
    
    # Handle NaN and infinity values
    features = np.nan_to_num(features, nan=0.0, posinf=0.0, neginf=0.0)
    
    return features
```
------------------------------------------------------------
✅ Successfully Extracted Function Code!
Test output shape: (4, 25)
✅ Universal function extracted and validated successfully!
💾 Universal code saved to: cache/universal_feature_engineering_code.py
💾 Comprehensive results saved to: cache/comprehensive_multi_ticker_results.pkl

================================================================================
ITERATIVE PROCESS SUMMARY
================================================================================

ABCB:
  Best MAPE: 8.40%
  Improvement: 0.35%
  Feature count: 25
  Iterations: 2

EIG:
  Best MAPE: 15.22%
  Improvement: 0.59%
  Feature count: 25
  Iterations: 2

FSS:
  Best MAPE: 11.12%
  Improvement: -0.04%
  Feature count: 15
  Iterations: 1

ABM:
  Best MAPE: 14.46%
  Improvement: 1.45%
  Feature count: 15
  Iterations: 1

IART:
  Best MAPE: 8.65%
  Improvement: 1.37%
  Feature count: 25
  Iterations: 2

SRPT:
  Best MAPE: 10.60%
  Improvement: -1.22%
  Feature count: 15
  Iterations: 0

EXTR:
  Best MAPE: 7.33%
  Improvement: 0.31%
  Feature count: 25
  Iterations: 2

SCSC:
  Best MAPE: 14.12%
  Improvement: 0.03%
  Feature count: 25
  Iterations: 2

SLG:
  Best MAPE: 6.74%
  Improvement: -1.06%
  Feature count: 15
  Iterations: 0

HL:
  Best MAPE: 10.11%
  Improvement: 0.84%
  Feature count: 25
  Iterations: 2

ANDE:
  Best MAPE: 14.58%
  Improvement: 0.70%
  Feature count: 25
  Iterations: 2

AROC:
  Best MAPE: 9.53%
  Improvement: 1.00%
  Feature count: 25
  Iterations: 2

================================================================================
STARTING VALIDATION PHASE
================================================================================
Testing universal feature engineering on all available tickers...

================================================================================
TESTING UNIVERSAL FEATURE ENGINEERING ON MULTIPLE TICKERS
================================================================================
Testing on 464 tickers: AAP, AAT, ABCB, ABG, ABM, ABR, ACAD, ACHC, ACIW, ACLS, ADMA, ADNT, ADUS, AEIS, AEO, AGO, AGYS, AHH, AIN, AIR, AKR, AL, ALEX, ALG, ALGT, ALKS, ALRM, AMN, AMPH, AMSF, AMWD, ANDE, ANGI, ANIP, AOSL, APAM, APLE, APOG, ARCB, ARI, AROC, ARR, ARWR, ASIX, ASTE, ATEN, ATGE, AVA, AWI, AWR, AXL, AZZ, BANC, BANF, BANR, BCC, BCPC, BDN, BFS, BHE, BJRI, BKE, BKU, BL, BLFS, BLMN, BMI, BOH, BOOT, BOX, BRC, BTU, BWA, BXMT, CABO, CAKE, CAL, CALM, CALX, CARG, CARS, CASH, CATY, CBRL, CBU, CC, CCOI, CCS, CE, CENT, CENTA, CENX, CEVA, CFFN, CHCO, CHEF, CLB, CNK, CNMD, CNS, CNXN, COHU, COLL, CORT, CPF, CPK, CPRX, CRI, CRK, CRVL, CSGS, CTRE, CTS, CUBI, CVBF, CVCO, CVI, CWT, CXW, CZR, DAN, DCOM, DEA, DEI, DFIN, DGII, DIOD, DLX, DNOW, DORM, DRH, DVAX, DXC, DXPE, DY, EAT, ECPG, EFC, EGBN, EIG, ENPH, ENR, ENVA, EPC, ESE, ETSY, EVTC, EXPI, EXTR, EYE, EZPW, FBK, FBNC, FBP, FCF, FCPT, FDP, FELE, FFBC, FHB, FIZZ, FMC, FORM, FOXF, FRPT, FSS, FUL, FULT, FUN, FWRD, GBX, GDEN, GEO, GES, GFF, GIII, GKOS, GNL, GNW, GOGO, GOLF, GPI, GRBK, GTY, GVA, HAFC, HASI, HBI, HCC, HCI, HCSG, HELE, HFWA, HI, HIW, HL, HLIT, HLX, HMN, HNI, HOPE, HP, HSII, HSTM, HTH, HTLD, HUBG, HWKN, HZO, IAC, IART, IBP, ICHR, ICUI, IDCC, IIIN, IIPR, INDB, INN, INSW, INVA, IOSP, IPAR, ITGR, ITRI, JBGS, JBLU, JBSS, JJSF, JOE, KAI, KALU, KAR, KFY, KLIC, KMT, KN, KOP, KREF, KRYS, KSS, KW, KWR, LCII, LEG, LGIH, LGND, LKFN, LMAT, LNC, LNN, LPG, LQDT, LRN, LTC, LXP, LZB, MAC, MAN, MARA, MATW, MATX, MC, MCRI, MCY, MD, MDU, MGEE, MGPI, MHO, MKTX, MMI, MMSI, MNRO, MPW, MRCY, MRTN, MSEX, MTH, MTRN, MTX, MWA, MXL, MYGN, MYRG, NAVI, NBHC, NBTB, NEO, NEOG, NGVT, NHC, NMIH, NOG, NPK, NPO, NSIT, NTCT, NWBI, NWL, NWN, NX, NXRT, OFG, OI, OII, OMCL, OSIS, OTTR, OUT, OXM, PAHC, PARR, PATK, PBH, PBI, PCRX, PDFS, PEB, PENN, PFBC, PFS, PI, PINC, PJT, PLAB, PLAY, PLUS, PLXS, PMT, POWL, PRA, PRAA, PRGS, PRK, PRLB, PSMT, PTEN, PTGX, PZZA, QDEL, QNST, QRVO, QTWO, RDN, RDNT, RES, REX, RGR, RHI, RHP, RNST, ROCK, ROG, RUN, RUSHA, RWT, SAFE, SABR, SAFT, SAH, SANM, SBCF, SBH, SBSI, SCHL, SCL, SCSC, SCVL, SEDG, SEE, SEM, SFBS, SFNC, SHAK, SHEN, SHO, SHOO, SIG, SKT, SKY, SKYW, SLG, SM, SMP, SMPL, SMTC, SNDR, SPSC, SPXC, SRPT, SSTK, STAA, STBA, STC, STRA, STRL, SUPN, SXC, SXI, SXT, TBBK, TDC, TDS, TDW, TFX, TGNA, TGTX, THRM, THS, TILE, TMP, TNC, TNDM, TPH, TR, TRIP, TRMK, TRN, TRNO, TRST, TRUP, TTMI, TWI, TWO, UCTT, UE, UFCS, UFPT, UHT, UNF, UNFI, UNIT, URBN, USNA, USPH, UTL, UVV, VBTX, VCEL, VCYT, VECO, VIAV, VICR, VIRT, VRTS, VSAT, VSH, WABC, WAFD, WD, WDFC, WEN, WERN, WGO, WOR, WRLD, WSC, WSFS, WSR, WWW, XHR, XNCR, YELP

============================================================
TESTING TICKER 1/464: AAP
============================================================
📊 Loading data for AAP...
📊 Loading data for AAP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing AAP: 'AAP'

============================================================
TESTING TICKER 2/464: AAT
============================================================
📊 Loading data for AAT...
📊 Loading data for AAT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AAT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AAT...

==================================================
Training Baseline AAT (SVM)
==================================================
Training SVM model...

Baseline AAT Performance:
MAE: 140893.9384
RMSE: 197656.6948
MAPE: 13.28%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 156
   • Highly important features (top 5%): 104

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0012, rank=1
   2. Feature_2_t3: importance=0.0006, rank=2
   3. Feature_64_t1: importance=0.0005, rank=3
   4. Feature_64_t3: importance=0.0005, rank=4
   5. Feature_71_t3: importance=0.0005, rank=5

🔧 Applying universal feature engineering for AAT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AAT...

==================================================
Training Enhanced AAT (SVM)
==================================================
Training SVM model...

Enhanced AAT Performance:
MAE: 139784.2155
RMSE: 198129.1917
MAPE: 13.48%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 38
   • Highly important features (top 5%): 13

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0033, rank=1
   2. Feature_2_t3: importance=0.0030, rank=2
   3. Feature_1_t0: importance=0.0030, rank=3
   4. Feature_2_t1: importance=0.0029, rank=4
   5. Feature_0_t3: importance=0.0015, rank=5

📊 AAT Results:
  Baseline MAPE: 13.28%
  Enhanced MAPE: 13.48%
  MAPE Improvement: -0.20% (-1.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 3/464: ABCB
============================================================
📊 Loading data for ABCB...
📊 Loading data for ABCB from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ABCB...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ABCB...

==================================================
Training Baseline ABCB (SVM)
==================================================
Training SVM model...

Baseline ABCB Performance:
MAE: 129751.4220
RMSE: 162121.3225
MAPE: 12.17%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 260
   • Highly important features (top 5%): 144

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0002, rank=1
   2. Feature_93_t3: importance=0.0002, rank=2
   3. Feature_83_t3: importance=0.0002, rank=3
   4. Feature_0_t3: importance=0.0001, rank=4
   5. Feature_0_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for ABCB...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ABCB...

==================================================
Training Enhanced ABCB (SVM)
==================================================
Training SVM model...

Enhanced ABCB Performance:
MAE: 135638.4303
RMSE: 169171.6744
MAPE: 12.49%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 29
   • Highly important features (top 5%): 11

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0012, rank=1
   2. Feature_0_t1: importance=0.0010, rank=2
   3. Feature_0_t3: importance=0.0010, rank=3
   4. Feature_2_t0: importance=0.0007, rank=4
   5. Feature_2_t3: importance=0.0005, rank=5

📊 ABCB Results:
  Baseline MAPE: 12.17%
  Enhanced MAPE: 12.49%
  MAPE Improvement: -0.32% (-2.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 4/464: ABG
============================================================
📊 Loading data for ABG...
📊 Loading data for ABG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ABG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ABG...

==================================================
Training Baseline ABG (SVM)
==================================================
Training SVM model...

Baseline ABG Performance:
MAE: 80934.0509
RMSE: 109833.9063
MAPE: 4.76%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 177
   • Highly important features (top 5%): 80

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_76_t2: importance=0.0000, rank=1
   2. Feature_93_t0: importance=0.0000, rank=2
   3. Feature_64_t3: importance=0.0000, rank=3
   4. Feature_77_t3: importance=0.0000, rank=4
   5. Feature_67_t3: importance=0.0000, rank=5

🔧 Applying universal feature engineering for ABG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ABG...

==================================================
Training Enhanced ABG (SVM)
==================================================
Training SVM model...

Enhanced ABG Performance:
MAE: 102674.3191
RMSE: 125609.7925
MAPE: 5.76%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 24
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0001, rank=1
   2. Feature_0_t2: importance=0.0001, rank=2
   3. Feature_2_t0: importance=0.0001, rank=3
   4. Feature_5_t0: importance=0.0001, rank=4
   5. Feature_0_t0: importance=0.0001, rank=5

📊 ABG Results:
  Baseline MAPE: 4.76%
  Enhanced MAPE: 5.76%
  MAPE Improvement: -0.99% (-20.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 5/464: ABM
============================================================
📊 Loading data for ABM...
📊 Loading data for ABM from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ABM...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ABM...

==================================================
Training Baseline ABM (SVM)
==================================================
Training SVM model...

Baseline ABM Performance:
MAE: 243256.9853
RMSE: 309317.1754
MAPE: 14.65%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 268
   • Highly important features (top 5%): 143

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t2: importance=0.0005, rank=1
   2. Feature_92_t0: importance=0.0003, rank=2
   3. Feature_69_t3: importance=0.0003, rank=3
   4. Feature_71_t1: importance=0.0003, rank=4
   5. Feature_73_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for ABM...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ABM...

==================================================
Training Enhanced ABM (SVM)
==================================================
Training SVM model...

Enhanced ABM Performance:
MAE: 239655.6154
RMSE: 279930.3863
MAPE: 15.00%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 52
   • Highly important features (top 5%): 32

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0021, rank=1
   2. Feature_1_t2: importance=0.0018, rank=2
   3. Feature_2_t2: importance=0.0016, rank=3
   4. Feature_6_t0: importance=0.0015, rank=4
   5. Feature_2_t3: importance=0.0015, rank=5

📊 ABM Results:
  Baseline MAPE: 14.65%
  Enhanced MAPE: 15.00%
  MAPE Improvement: -0.35% (-2.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 6/464: ABR
============================================================
📊 Loading data for ABR...
📊 Loading data for ABR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ABR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ABR...

==================================================
Training Baseline ABR (SVM)
==================================================
Training SVM model...

Baseline ABR Performance:
MAE: 4701050.0388
RMSE: 5500051.5279
MAPE: 7.40%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 330
   • Highly important features (top 5%): 180

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t3: importance=0.0008, rank=1
   2. Feature_67_t3: importance=0.0005, rank=2
   3. Feature_77_t0: importance=0.0004, rank=3
   4. Feature_91_t2: importance=0.0003, rank=4
   5. Feature_82_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for ABR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ABR...

==================================================
Training Enhanced ABR (SVM)
==================================================
Training SVM model...

Enhanced ABR Performance:
MAE: 2951715.8093
RMSE: 3408796.1092
MAPE: 4.72%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 55
   • Highly important features (top 5%): 43

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0026, rank=1
   2. Feature_2_t1: importance=0.0018, rank=2
   3. Feature_1_t2: importance=0.0012, rank=3
   4. Feature_0_t3: importance=0.0009, rank=4
   5. Feature_5_t1: importance=0.0008, rank=5

📊 ABR Results:
  Baseline MAPE: 7.40%
  Enhanced MAPE: 4.72%
  MAPE Improvement: +2.68% (+36.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 7/464: ACAD
============================================================
📊 Loading data for ACAD...
📊 Loading data for ACAD from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing ACAD: 'ACAD'

============================================================
TESTING TICKER 8/464: ACHC
============================================================
📊 Loading data for ACHC...
📊 Loading data for ACHC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ACHC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ACHC...

==================================================
Training Baseline ACHC (SVM)
==================================================
Training SVM model...

Baseline ACHC Performance:
MAE: 479796.4464
RMSE: 654871.0911
MAPE: 8.47%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 135
   • Highly important features (top 5%): 78

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_89_t1: importance=0.0001, rank=1
   2. Feature_90_t0: importance=0.0001, rank=2
   3. Feature_70_t3: importance=0.0001, rank=3
   4. Feature_85_t0: importance=0.0001, rank=4
   5. Feature_87_t0: importance=0.0001, rank=5

🔧 Applying universal feature engineering for ACHC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ACHC...

==================================================
Training Enhanced ACHC (SVM)
==================================================
Training SVM model...

Enhanced ACHC Performance:
MAE: 457658.1574
RMSE: 611728.2652
MAPE: 8.14%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 30
   • Highly important features (top 5%): 14

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0007, rank=1
   2. Feature_2_t0: importance=0.0004, rank=2
   3. Feature_0_t0: importance=0.0003, rank=3
   4. Feature_2_t3: importance=0.0002, rank=4
   5. Feature_0_t1: importance=0.0002, rank=5

📊 ACHC Results:
  Baseline MAPE: 8.47%
  Enhanced MAPE: 8.14%
  MAPE Improvement: +0.34% (+4.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 9/464: ACIW
============================================================
📊 Loading data for ACIW...
📊 Loading data for ACIW from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ACIW...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ACIW...

==================================================
Training Baseline ACIW (SVM)
==================================================
Training SVM model...

Baseline ACIW Performance:
MAE: 142225.0009
RMSE: 183058.1556
MAPE: 5.82%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 192
   • Highly important features (top 5%): 104

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0008, rank=1
   2. Feature_63_t1: importance=0.0003, rank=2
   3. Feature_65_t0: importance=0.0002, rank=3
   4. Feature_85_t3: importance=0.0002, rank=4
   5. Feature_64_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for ACIW...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ACIW...

==================================================
Training Enhanced ACIW (SVM)
==================================================
Training SVM model...

Enhanced ACIW Performance:
MAE: 154178.5924
RMSE: 198253.9850
MAPE: 6.35%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 53
   • Highly important features (top 5%): 45

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0009, rank=1
   2. Feature_6_t3: importance=0.0009, rank=2
   3. Feature_4_t3: importance=0.0008, rank=3
   4. Feature_1_t2: importance=0.0007, rank=4
   5. Feature_7_t3: importance=0.0007, rank=5

📊 ACIW Results:
  Baseline MAPE: 5.82%
  Enhanced MAPE: 6.35%
  MAPE Improvement: -0.53% (-9.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 10/464: ACLS
============================================================
📊 Loading data for ACLS...
📊 Loading data for ACLS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ACLS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ACLS...

==================================================
Training Baseline ACLS (SVM)
==================================================
Training SVM model...

Baseline ACLS Performance:
MAE: 271324.7126
RMSE: 486498.5573
MAPE: 8.81%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 287
   • Highly important features (top 5%): 142

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t3: importance=0.0004, rank=1
   2. Feature_67_t3: importance=0.0004, rank=2
   3. Feature_84_t3: importance=0.0003, rank=3
   4. Feature_68_t0: importance=0.0003, rank=4
   5. Feature_89_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for ACLS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ACLS...

==================================================
Training Enhanced ACLS (SVM)
==================================================
Training SVM model...

Enhanced ACLS Performance:
MAE: 344415.3302
RMSE: 528201.5654
MAPE: 10.12%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0026, rank=1
   2. Feature_2_t1: importance=0.0017, rank=2
   3. Feature_0_t2: importance=0.0012, rank=3
   4. Feature_0_t0: importance=0.0011, rank=4
   5. Feature_0_t3: importance=0.0011, rank=5

📊 ACLS Results:
  Baseline MAPE: 8.81%
  Enhanced MAPE: 10.12%
  MAPE Improvement: -1.31% (-14.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 11/464: ADMA
============================================================
📊 Loading data for ADMA...
📊 Loading data for ADMA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing ADMA: 'ADMA'

============================================================
TESTING TICKER 12/464: ADNT
============================================================
📊 Loading data for ADNT...
📊 Loading data for ADNT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing ADNT: 'ADNT'

============================================================
TESTING TICKER 13/464: ADUS
============================================================
📊 Loading data for ADUS...
📊 Loading data for ADUS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ADUS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Error: Ticker 'ADUS' not found in short volume data.
Retrieved short volume data for 0 days
Creating short volume features with 15 days lookback...
No short volume data available, creating zero features
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ADUS...

==================================================
Training Baseline ADUS (SVM)
==================================================
Training SVM model...

Baseline ADUS Performance:
MAE: 51351.3655
RMSE: 62842.5580
MAPE: 10.70%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 74
   • Highly important features (top 5%): 14

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0029, rank=1
   2. Feature_65_t1: importance=0.0023, rank=2
   3. Feature_0_t3: importance=0.0015, rank=3
   4. Feature_65_t0: importance=0.0011, rank=4
   5. Feature_0_t0: importance=0.0011, rank=5

🔧 Applying universal feature engineering for ADUS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ADUS...

==================================================
Training Enhanced ADUS (SVM)
==================================================
Training SVM model...

Enhanced ADUS Performance:
MAE: 59202.8548
RMSE: 73495.5926
MAPE: 11.60%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 46
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0052, rank=1
   2. Feature_0_t0: importance=0.0035, rank=2
   3. Feature_1_t0: importance=0.0025, rank=3
   4. Feature_0_t3: importance=0.0014, rank=4
   5. Feature_1_t2: importance=0.0014, rank=5

📊 ADUS Results:
  Baseline MAPE: 10.70%
  Enhanced MAPE: 11.60%
  MAPE Improvement: -0.90% (-8.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 14/464: AEIS
============================================================
📊 Loading data for AEIS...
📊 Loading data for AEIS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AEIS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AEIS...

==================================================
Training Baseline AEIS (SVM)
==================================================
Training SVM model...

Baseline AEIS Performance:
MAE: 148971.3535
RMSE: 184198.9808
MAPE: 6.09%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 309
   • Highly important features (top 5%): 176

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_85_t3: importance=0.0002, rank=1
   2. Feature_67_t0: importance=0.0001, rank=2
   3. Feature_74_t2: importance=0.0001, rank=3
   4. Feature_65_t0: importance=0.0001, rank=4
   5. Feature_65_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for AEIS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AEIS...

==================================================
Training Enhanced AEIS (SVM)
==================================================
Training SVM model...

Enhanced AEIS Performance:
MAE: 198260.3952
RMSE: 239482.3476
MAPE: 7.99%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 36
   • Highly important features (top 5%): 21

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0013, rank=1
   2. Feature_2_t0: importance=0.0007, rank=2
   3. Feature_7_t2: importance=0.0005, rank=3
   4. Feature_1_t2: importance=0.0004, rank=4
   5. Feature_2_t3: importance=0.0004, rank=5

📊 AEIS Results:
  Baseline MAPE: 6.09%
  Enhanced MAPE: 7.99%
  MAPE Improvement: -1.91% (-31.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 15/464: AEO
============================================================
📊 Loading data for AEO...
📊 Loading data for AEO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AEO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AEO...

==================================================
Training Baseline AEO (SVM)
==================================================
Training SVM model...

Baseline AEO Performance:
MAE: 1955760.6697
RMSE: 2711903.9663
MAPE: 11.29%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 138
   • Highly important features (top 5%): 68

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t3: importance=0.0003, rank=1
   2. Feature_2_t1: importance=0.0003, rank=2
   3. Feature_91_t3: importance=0.0003, rank=3
   4. Feature_2_t2: importance=0.0003, rank=4
   5. Feature_65_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for AEO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AEO...

==================================================
Training Enhanced AEO (SVM)
==================================================
Training SVM model...

Enhanced AEO Performance:
MAE: 1954018.6233
RMSE: 2694244.7909
MAPE: 11.52%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 29
   • Highly important features (top 5%): 21

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0032, rank=1
   2. Feature_0_t3: importance=0.0018, rank=2
   3. Feature_2_t1: importance=0.0013, rank=3
   4. Feature_2_t0: importance=0.0012, rank=4
   5. Feature_9_t2: importance=0.0009, rank=5

📊 AEO Results:
  Baseline MAPE: 11.29%
  Enhanced MAPE: 11.52%
  MAPE Improvement: -0.23% (-2.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 16/464: AGO
============================================================
📊 Loading data for AGO...
📊 Loading data for AGO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AGO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AGO...

==================================================
Training Baseline AGO (SVM)
==================================================
Training SVM model...

Baseline AGO Performance:
MAE: 115552.6199
RMSE: 152179.5279
MAPE: 11.95%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 224
   • Highly important features (top 5%): 111

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_81_t1: importance=0.0009, rank=1
   2. Feature_78_t0: importance=0.0006, rank=2
   3. Feature_65_t3: importance=0.0006, rank=3
   4. Feature_80_t0: importance=0.0005, rank=4
   5. Feature_76_t2: importance=0.0004, rank=5

🔧 Applying universal feature engineering for AGO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AGO...

==================================================
Training Enhanced AGO (SVM)
==================================================
Training SVM model...

Enhanced AGO Performance:
MAE: 118702.5756
RMSE: 165204.8180
MAPE: 12.43%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 49
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0021, rank=1
   2. Feature_2_t3: importance=0.0018, rank=2
   3. Feature_2_t0: importance=0.0018, rank=3
   4. Feature_4_t2: importance=0.0014, rank=4
   5. Feature_1_t3: importance=0.0013, rank=5

📊 AGO Results:
  Baseline MAPE: 11.95%
  Enhanced MAPE: 12.43%
  MAPE Improvement: -0.48% (-4.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 17/464: AGYS
============================================================
📊 Loading data for AGYS...
📊 Loading data for AGYS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AGYS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AGYS...

==================================================
Training Baseline AGYS (SVM)
==================================================
Training SVM model...

Baseline AGYS Performance:
MAE: 85949.7377
RMSE: 113746.6145
MAPE: 11.66%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 315
   • Highly important features (top 5%): 151

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0003, rank=1
   2. Feature_70_t1: importance=0.0003, rank=2
   3. Feature_67_t3: importance=0.0003, rank=3
   4. Feature_68_t1: importance=0.0002, rank=4
   5. Feature_93_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for AGYS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AGYS...

==================================================
Training Enhanced AGYS (SVM)
==================================================
Training SVM model...

Enhanced AGYS Performance:
MAE: 84186.1857
RMSE: 111852.0899
MAPE: 11.63%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 22
   • Highly important features (top 5%): 9

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0037, rank=1
   2. Feature_1_t2: importance=0.0032, rank=2
   3. Feature_2_t3: importance=0.0027, rank=3
   4. Feature_1_t0: importance=0.0022, rank=4
   5. Feature_0_t3: importance=0.0015, rank=5

📊 AGYS Results:
  Baseline MAPE: 11.66%
  Enhanced MAPE: 11.63%
  MAPE Improvement: +0.04% (+0.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 18/464: AHH
============================================================
📊 Loading data for AHH...
📊 Loading data for AHH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AHH...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AHH...

==================================================
Training Baseline AHH (SVM)
==================================================
Training SVM model...

Baseline AHH Performance:
MAE: 229752.7251
RMSE: 311560.4948
MAPE: 16.91%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 205
   • Highly important features (top 5%): 83

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_87_t0: importance=0.0013, rank=1
   2. Feature_84_t3: importance=0.0012, rank=2
   3. Feature_2_t2: importance=0.0010, rank=3
   4. Feature_63_t3: importance=0.0009, rank=4
   5. Feature_70_t0: importance=0.0008, rank=5

🔧 Applying universal feature engineering for AHH...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AHH...

==================================================
Training Enhanced AHH (SVM)
==================================================
Training SVM model...

Enhanced AHH Performance:
MAE: 249867.8331
RMSE: 325074.6470
MAPE: 18.18%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 56
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0063, rank=1
   2. Feature_1_t1: importance=0.0033, rank=2
   3. Feature_0_t0: importance=0.0024, rank=3
   4. Feature_2_t1: importance=0.0024, rank=4
   5. Feature_2_t2: importance=0.0020, rank=5

📊 AHH Results:
  Baseline MAPE: 16.91%
  Enhanced MAPE: 18.18%
  MAPE Improvement: -1.28% (-7.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 19/464: AIN
============================================================
📊 Loading data for AIN...
📊 Loading data for AIN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing AIN: 'AIN'

============================================================
TESTING TICKER 20/464: AIR
============================================================
📊 Loading data for AIR...
📊 Loading data for AIR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AIR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AIR...

==================================================
Training Baseline AIR (SVM)
==================================================
Training SVM model...

Baseline AIR Performance:
MAE: 101031.8834
RMSE: 124222.2561
MAPE: 13.60%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 199
   • Highly important features (top 5%): 53

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t2: importance=0.0003, rank=1
   2. Feature_2_t0: importance=0.0003, rank=2
   3. Feature_2_t1: importance=0.0002, rank=3
   4. Feature_90_t1: importance=0.0002, rank=4
   5. Feature_94_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for AIR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AIR...

==================================================
Training Enhanced AIR (SVM)
==================================================
Training SVM model...

Enhanced AIR Performance:
MAE: 120896.9476
RMSE: 144302.4182
MAPE: 16.28%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 44
   • Highly important features (top 5%): 36

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_11_t3: importance=0.0010, rank=1
   2. Feature_0_t0: importance=0.0009, rank=2
   3. Feature_12_t3: importance=0.0008, rank=3
   4. Feature_6_t0: importance=0.0007, rank=4
   5. Feature_1_t3: importance=0.0007, rank=5

📊 AIR Results:
  Baseline MAPE: 13.60%
  Enhanced MAPE: 16.28%
  MAPE Improvement: -2.67% (-19.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 21/464: AKR
============================================================
📊 Loading data for AKR...
📊 Loading data for AKR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AKR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AKR...

==================================================
Training Baseline AKR (SVM)
==================================================
Training SVM model...

Baseline AKR Performance:
MAE: 1081543.8579
RMSE: 2266526.3131
MAPE: 20.18%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 244
   • Highly important features (top 5%): 73

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_67_t3: importance=0.0007, rank=1
   2. Feature_91_t0: importance=0.0006, rank=2
   3. Feature_70_t1: importance=0.0005, rank=3
   4. Feature_77_t0: importance=0.0005, rank=4
   5. Feature_65_t0: importance=0.0004, rank=5

🔧 Applying universal feature engineering for AKR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AKR...

==================================================
Training Enhanced AKR (SVM)
==================================================
Training SVM model...

Enhanced AKR Performance:
MAE: 1364812.3777
RMSE: 2244629.6387
MAPE: 22.11%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 53
   • Highly important features (top 5%): 34

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0054, rank=1
   2. Feature_2_t3: importance=0.0022, rank=2
   3. Feature_2_t1: importance=0.0016, rank=3
   4. Feature_0_t0: importance=0.0016, rank=4
   5. Feature_2_t2: importance=0.0015, rank=5

📊 AKR Results:
  Baseline MAPE: 20.18%
  Enhanced MAPE: 22.11%
  MAPE Improvement: -1.93% (-9.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 22/464: AL
============================================================
📊 Loading data for AL...
📊 Loading data for AL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AL...

==================================================
Training Baseline AL (SVM)
==================================================
Training SVM model...

Baseline AL Performance:
MAE: 406539.2583
RMSE: 607169.4741
MAPE: 12.15%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 286
   • Highly important features (top 5%): 184

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_94_t2: importance=0.0005, rank=1
   2. Feature_67_t3: importance=0.0004, rank=2
   3. Feature_63_t2: importance=0.0004, rank=3
   4. Feature_78_t2: importance=0.0004, rank=4
   5. Feature_95_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for AL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AL...

==================================================
Training Enhanced AL (SVM)
==================================================
Training SVM model...

Enhanced AL Performance:
MAE: 415274.8558
RMSE: 609908.2017
MAPE: 12.96%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 38
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0029, rank=1
   2. Feature_1_t3: importance=0.0021, rank=2
   3. Feature_1_t2: importance=0.0014, rank=3
   4. Feature_0_t0: importance=0.0007, rank=4
   5. Feature_5_t3: importance=0.0006, rank=5

📊 AL Results:
  Baseline MAPE: 12.15%
  Enhanced MAPE: 12.96%
  MAPE Improvement: -0.81% (-6.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 23/464: ALEX
============================================================
📊 Loading data for ALEX...
📊 Loading data for ALEX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ALEX...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ALEX...

==================================================
Training Baseline ALEX (SVM)
==================================================
Training SVM model...

Baseline ALEX Performance:
MAE: 90158.0219
RMSE: 114443.8643
MAPE: 13.93%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 300
   • Highly important features (top 5%): 129

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t3: importance=0.0010, rank=1
   2. Feature_2_t1: importance=0.0008, rank=2
   3. Feature_68_t0: importance=0.0007, rank=3
   4. Feature_91_t0: importance=0.0006, rank=4
   5. Feature_94_t0: importance=0.0005, rank=5

🔧 Applying universal feature engineering for ALEX...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ALEX...

==================================================
Training Enhanced ALEX (SVM)
==================================================
Training SVM model...

Enhanced ALEX Performance:
MAE: 75063.5254
RMSE: 98080.1004
MAPE: 12.09%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 54
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t1: importance=0.0034, rank=1
   2. Feature_0_t3: importance=0.0030, rank=2
   3. Feature_2_t3: importance=0.0019, rank=3
   4. Feature_2_t1: importance=0.0018, rank=4
   5. Feature_0_t2: importance=0.0017, rank=5

📊 ALEX Results:
  Baseline MAPE: 13.93%
  Enhanced MAPE: 12.09%
  MAPE Improvement: +1.83% (+13.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 24/464: ALG
============================================================
📊 Loading data for ALG...
📊 Loading data for ALG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ALG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ALG...

==================================================
Training Baseline ALG (SVM)
==================================================
Training SVM model...

Baseline ALG Performance:
MAE: 27604.2884
RMSE: 33626.2750
MAPE: 8.39%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 301
   • Highly important features (top 5%): 155

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_75_t2: importance=0.0006, rank=1
   2. Feature_2_t3: importance=0.0004, rank=2
   3. Feature_1_t0: importance=0.0004, rank=3
   4. Feature_63_t3: importance=0.0004, rank=4
   5. Feature_85_t1: importance=0.0004, rank=5

🔧 Applying universal feature engineering for ALG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ALG...

==================================================
Training Enhanced ALG (SVM)
==================================================
Training SVM model...

Enhanced ALG Performance:
MAE: 24907.0969
RMSE: 31565.3103
MAPE: 7.61%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 49
   • Highly important features (top 5%): 36

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0020, rank=1
   2. Feature_0_t3: importance=0.0019, rank=2
   3. Feature_6_t3: importance=0.0011, rank=3
   4. Feature_0_t1: importance=0.0011, rank=4
   5. Feature_0_t0: importance=0.0010, rank=5

📊 ALG Results:
  Baseline MAPE: 8.39%
  Enhanced MAPE: 7.61%
  MAPE Improvement: +0.79% (+9.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 25/464: ALGT
============================================================
📊 Loading data for ALGT...
📊 Loading data for ALGT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ALGT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ALGT...

==================================================
Training Baseline ALGT (SVM)
==================================================
Training SVM model...

Baseline ALGT Performance:
MAE: 146515.4483
RMSE: 178665.7064
MAPE: 11.72%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 276
   • Highly important features (top 5%): 120

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_67_t0: importance=0.0010, rank=1
   2. Feature_81_t1: importance=0.0008, rank=2
   3. Feature_85_t1: importance=0.0007, rank=3
   4. Feature_74_t0: importance=0.0007, rank=4
   5. Feature_74_t2: importance=0.0007, rank=5

🔧 Applying universal feature engineering for ALGT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
⚠️ Some errors in feature engineering: 3 train, 0 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ALGT...

==================================================
Training Enhanced ALGT (SVM)
==================================================
Training SVM model...
❌ Error testing ALGT: X has 100 features, but StandardScaler is expecting 60 features as input.

============================================================
TESTING TICKER 26/464: ALKS
============================================================
📊 Loading data for ALKS...
📊 Loading data for ALKS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ALKS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Error: Ticker 'ALKS' not found in short volume data.
Retrieved short volume data for 0 days
Creating short volume features with 15 days lookback...
No short volume data available, creating zero features
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ALKS...

==================================================
Training Baseline ALKS (SVM)
==================================================
Training SVM model...

Baseline ALKS Performance:
MAE: 1067127.2665
RMSE: 1306325.3096
MAPE: 7.79%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 44
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t2: importance=0.0010, rank=1
   2. Feature_1_t3: importance=0.0008, rank=2
   3. Feature_65_t3: importance=0.0005, rank=3
   4. Feature_2_t3: importance=0.0003, rank=4
   5. Feature_1_t0: importance=0.0003, rank=5

🔧 Applying universal feature engineering for ALKS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ALKS...

==================================================
Training Enhanced ALKS (SVM)
==================================================
Training SVM model...

Enhanced ALKS Performance:
MAE: 1219219.1421
RMSE: 1501284.3729
MAPE: 9.06%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 30
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0010, rank=1
   2. Feature_0_t1: importance=0.0007, rank=2
   3. Feature_0_t3: importance=0.0003, rank=3
   4. Feature_2_t1: importance=0.0003, rank=4
   5. Feature_2_t3: importance=0.0003, rank=5

📊 ALKS Results:
  Baseline MAPE: 7.79%
  Enhanced MAPE: 9.06%
  MAPE Improvement: -1.26% (-16.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 27/464: ALRM
============================================================
📊 Loading data for ALRM...
📊 Loading data for ALRM from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ALRM...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ALRM...

==================================================
Training Baseline ALRM (SVM)
==================================================
Training SVM model...

Baseline ALRM Performance:
MAE: 141114.3049
RMSE: 224522.2885
MAPE: 6.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 213
   • Highly important features (top 5%): 92

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_84_t3: importance=0.0001, rank=1
   2. Feature_67_t3: importance=0.0001, rank=2
   3. Feature_81_t2: importance=0.0001, rank=3
   4. Feature_90_t1: importance=0.0001, rank=4
   5. Feature_2_t0: importance=0.0000, rank=5

🔧 Applying universal feature engineering for ALRM...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ALRM...

==================================================
Training Enhanced ALRM (SVM)
==================================================
Training SVM model...

Enhanced ALRM Performance:
MAE: 147598.6726
RMSE: 227379.6482
MAPE: 7.22%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 45
   • Highly important features (top 5%): 29

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0004, rank=1
   2. Feature_2_t3: importance=0.0003, rank=2
   3. Feature_2_t0: importance=0.0002, rank=3
   4. Feature_2_t2: importance=0.0002, rank=4
   5. Feature_9_t2: importance=0.0002, rank=5

📊 ALRM Results:
  Baseline MAPE: 6.94%
  Enhanced MAPE: 7.22%
  MAPE Improvement: -0.29% (-4.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 28/464: AMN
============================================================
📊 Loading data for AMN...
📊 Loading data for AMN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AMN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AMN...

==================================================
Training Baseline AMN (SVM)
==================================================
Training SVM model...

Baseline AMN Performance:
MAE: 484885.3100
RMSE: 555109.4668
MAPE: 10.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 104
   • Highly important features (top 5%): 32

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t1: importance=0.0006, rank=1
   2. Feature_63_t2: importance=0.0005, rank=2
   3. Feature_76_t2: importance=0.0003, rank=3
   4. Feature_2_t0: importance=0.0003, rank=4
   5. Feature_2_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for AMN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AMN...

==================================================
Training Enhanced AMN (SVM)
==================================================
Training SVM model...

Enhanced AMN Performance:
MAE: 559467.2511
RMSE: 675675.4218
MAPE: 12.45%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 27

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0012, rank=1
   2. Feature_1_t3: importance=0.0011, rank=2
   3. Feature_2_t3: importance=0.0011, rank=3
   4. Feature_2_t2: importance=0.0009, rank=4
   5. Feature_0_t1: importance=0.0009, rank=5

📊 AMN Results:
  Baseline MAPE: 10.74%
  Enhanced MAPE: 12.45%
  MAPE Improvement: -1.71% (-15.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 29/464: AMPH
============================================================
📊 Loading data for AMPH...
📊 Loading data for AMPH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AMPH...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AMPH...

==================================================
Training Baseline AMPH (SVM)
==================================================
Training SVM model...

Baseline AMPH Performance:
MAE: 268324.1678
RMSE: 333650.4617
MAPE: 6.89%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 317
   • Highly important features (top 5%): 252

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_76_t2: importance=0.0001, rank=1
   2. Feature_87_t2: importance=0.0001, rank=2
   3. Feature_64_t2: importance=0.0001, rank=3
   4. Feature_85_t2: importance=0.0001, rank=4
   5. Feature_90_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for AMPH...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AMPH...

==================================================
Training Enhanced AMPH (SVM)
==================================================
Training SVM model...

Enhanced AMPH Performance:
MAE: 219653.7692
RMSE: 278089.1643
MAPE: 5.61%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 45
   • Highly important features (top 5%): 36

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_12_t1: importance=0.0009, rank=1
   2. Feature_13_t1: importance=0.0009, rank=2
   3. Feature_6_t1: importance=0.0008, rank=3
   4. Feature_10_t1: importance=0.0008, rank=4
   5. Feature_5_t1: importance=0.0008, rank=5

📊 AMPH Results:
  Baseline MAPE: 6.89%
  Enhanced MAPE: 5.61%
  MAPE Improvement: +1.28% (+18.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 30/464: AMSF
============================================================
📊 Loading data for AMSF...
📊 Loading data for AMSF from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AMSF...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AMSF...

==================================================
Training Baseline AMSF (SVM)
==================================================
Training SVM model...

Baseline AMSF Performance:
MAE: 34746.1150
RMSE: 48800.2418
MAPE: 16.89%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 263
   • Highly important features (top 5%): 168

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_80_t1: importance=0.0006, rank=1
   2. Feature_69_t2: importance=0.0004, rank=2
   3. Feature_82_t1: importance=0.0003, rank=3
   4. Feature_90_t1: importance=0.0003, rank=4
   5. Feature_70_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for AMSF...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AMSF...

==================================================
Training Enhanced AMSF (SVM)
==================================================
Training SVM model...

Enhanced AMSF Performance:
MAE: 33123.2832
RMSE: 44046.2802
MAPE: 16.18%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 56
   • Highly important features (top 5%): 50

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_11_t1: importance=0.0014, rank=1
   2. Feature_1_t3: importance=0.0013, rank=2
   3. Feature_1_t0: importance=0.0013, rank=3
   4. Feature_2_t2: importance=0.0012, rank=4
   5. Feature_1_t1: importance=0.0012, rank=5

📊 AMSF Results:
  Baseline MAPE: 16.89%
  Enhanced MAPE: 16.18%
  MAPE Improvement: +0.71% (+4.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 31/464: AMWD
============================================================
📊 Loading data for AMWD...
📊 Loading data for AMWD from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AMWD...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AMWD...

==================================================
Training Baseline AMWD (SVM)
==================================================
Training SVM model...

Baseline AMWD Performance:
MAE: 48258.5218
RMSE: 67413.8527
MAPE: 11.41%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 358
   • Highly important features (top 5%): 230

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_77_t1: importance=0.0004, rank=1
   2. Feature_65_t2: importance=0.0003, rank=2
   3. Feature_75_t1: importance=0.0003, rank=3
   4. Feature_2_t3: importance=0.0003, rank=4
   5. Feature_2_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for AMWD...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AMWD...

==================================================
Training Enhanced AMWD (SVM)
==================================================
Training SVM model...

Enhanced AMWD Performance:
MAE: 59434.8376
RMSE: 79016.7943
MAPE: 13.88%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 52
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0038, rank=1
   2. Feature_2_t2: importance=0.0031, rank=2
   3. Feature_2_t3: importance=0.0020, rank=3
   4. Feature_9_t3: importance=0.0014, rank=4
   5. Feature_8_t1: importance=0.0013, rank=5

📊 AMWD Results:
  Baseline MAPE: 11.41%
  Enhanced MAPE: 13.88%
  MAPE Improvement: -2.47% (-21.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 32/464: ANDE
============================================================
📊 Loading data for ANDE...
📊 Loading data for ANDE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ANDE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ANDE...

==================================================
Training Baseline ANDE (SVM)
==================================================
Training SVM model...

Baseline ANDE Performance:
MAE: 96444.9026
RMSE: 132965.5732
MAPE: 13.70%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 292
   • Highly important features (top 5%): 166

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_78_t2: importance=0.0003, rank=1
   2. Feature_88_t0: importance=0.0003, rank=2
   3. Feature_65_t1: importance=0.0003, rank=3
   4. Feature_89_t3: importance=0.0003, rank=4
   5. Feature_79_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for ANDE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ANDE...

==================================================
Training Enhanced ANDE (SVM)
==================================================
Training SVM model...

Enhanced ANDE Performance:
MAE: 89714.8129
RMSE: 119057.0450
MAPE: 12.75%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 54
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0035, rank=1
   2. Feature_1_t1: importance=0.0014, rank=2
   3. Feature_2_t2: importance=0.0013, rank=3
   4. Feature_1_t0: importance=0.0013, rank=4
   5. Feature_0_t0: importance=0.0012, rank=5

📊 ANDE Results:
  Baseline MAPE: 13.70%
  Enhanced MAPE: 12.75%
  MAPE Improvement: +0.95% (+6.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 33/464: ANGI
============================================================
📊 Loading data for ANGI...
📊 Loading data for ANGI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ANGI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ANGI...

==================================================
Training Baseline ANGI (SVM)
==================================================
Training SVM model...

Baseline ANGI Performance:
MAE: 817343.8123
RMSE: 2022541.0995
MAPE: 27.47%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 172
   • Highly important features (top 5%): 85

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t2: importance=0.0005, rank=1
   2. Feature_77_t0: importance=0.0004, rank=2
   3. Feature_63_t3: importance=0.0003, rank=3
   4. Feature_82_t2: importance=0.0003, rank=4
   5. Feature_80_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for ANGI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ANGI...

==================================================
Training Enhanced ANGI (SVM)
==================================================
Training SVM model...

Enhanced ANGI Performance:
MAE: 952962.4565
RMSE: 2014280.7207
MAPE: 28.36%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 38
   • Highly important features (top 5%): 22

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0015, rank=1
   2. Feature_0_t3: importance=0.0012, rank=2
   3. Feature_2_t2: importance=0.0009, rank=3
   4. Feature_2_t0: importance=0.0007, rank=4
   5. Feature_1_t2: importance=0.0006, rank=5

📊 ANGI Results:
  Baseline MAPE: 27.47%
  Enhanced MAPE: 28.36%
  MAPE Improvement: -0.89% (-3.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 34/464: ANIP
============================================================
📊 Loading data for ANIP...
📊 Loading data for ANIP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ANIP...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ANIP...

==================================================
Training Baseline ANIP (SVM)
==================================================
Training SVM model...

Baseline ANIP Performance:
MAE: 181079.0796
RMSE: 314007.1613
MAPE: 12.83%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 188
   • Highly important features (top 5%): 84

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t0: importance=0.0003, rank=1
   2. Feature_78_t3: importance=0.0003, rank=2
   3. Feature_1_t1: importance=0.0003, rank=3
   4. Feature_65_t0: importance=0.0003, rank=4
   5. Feature_80_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for ANIP...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ANIP...

==================================================
Training Enhanced ANIP (SVM)
==================================================
Training SVM model...

Enhanced ANIP Performance:
MAE: 169202.3914
RMSE: 302997.2390
MAPE: 14.84%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 25

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t1: importance=0.0014, rank=1
   2. Feature_0_t2: importance=0.0014, rank=2
   3. Feature_0_t3: importance=0.0014, rank=3
   4. Feature_2_t2: importance=0.0009, rank=4
   5. Feature_6_t0: importance=0.0007, rank=5

📊 ANIP Results:
  Baseline MAPE: 12.83%
  Enhanced MAPE: 14.84%
  MAPE Improvement: -2.01% (-15.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 35/464: AOSL
============================================================
📊 Loading data for AOSL...
📊 Loading data for AOSL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AOSL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AOSL...

==================================================
Training Baseline AOSL (SVM)
==================================================
Training SVM model...

Baseline AOSL Performance:
MAE: 130680.1799
RMSE: 184863.4008
MAPE: 9.50%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 76
   • Highly important features (top 5%): 27

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0016, rank=1
   2. Feature_69_t0: importance=0.0010, rank=2
   3. Feature_70_t1: importance=0.0008, rank=3
   4. Feature_2_t0: importance=0.0006, rank=4
   5. Feature_67_t1: importance=0.0006, rank=5

🔧 Applying universal feature engineering for AOSL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AOSL...

==================================================
Training Enhanced AOSL (SVM)
==================================================
Training SVM model...

Enhanced AOSL Performance:
MAE: 115467.7918
RMSE: 171493.6852
MAPE: 8.31%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 21
   • Highly important features (top 5%): 4

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0039, rank=1
   2. Feature_11_t1: importance=0.0013, rank=2
   3. Feature_1_t0: importance=0.0012, rank=3
   4. Feature_1_t2: importance=0.0012, rank=4
   5. Feature_7_t1: importance=0.0007, rank=5

📊 AOSL Results:
  Baseline MAPE: 9.50%
  Enhanced MAPE: 8.31%
  MAPE Improvement: +1.19% (+12.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 36/464: APAM
============================================================
📊 Loading data for APAM...
📊 Loading data for APAM from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for APAM...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for APAM...

==================================================
Training Baseline APAM (SVM)
==================================================
Training SVM model...

Baseline APAM Performance:
MAE: 235049.3411
RMSE: 287342.2151
MAPE: 8.60%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 312
   • Highly important features (top 5%): 176

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_82_t3: importance=0.0010, rank=1
   2. Feature_70_t3: importance=0.0005, rank=2
   3. Feature_67_t3: importance=0.0005, rank=3
   4. Feature_74_t3: importance=0.0005, rank=4
   5. Feature_85_t3: importance=0.0004, rank=5

🔧 Applying universal feature engineering for APAM...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for APAM...

==================================================
Training Enhanced APAM (SVM)
==================================================
Training SVM model...

Enhanced APAM Performance:
MAE: 177853.5008
RMSE: 232413.0619
MAPE: 6.64%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 27

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0024, rank=1
   2. Feature_2_t3: importance=0.0020, rank=2
   3. Feature_1_t1: importance=0.0015, rank=3
   4. Feature_1_t2: importance=0.0014, rank=4
   5. Feature_11_t0: importance=0.0012, rank=5

📊 APAM Results:
  Baseline MAPE: 8.60%
  Enhanced MAPE: 6.64%
  MAPE Improvement: +1.96% (+22.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 37/464: APLE
============================================================
📊 Loading data for APLE...
📊 Loading data for APLE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing APLE: 'APLE'

============================================================
TESTING TICKER 38/464: APOG
============================================================
📊 Loading data for APOG...
📊 Loading data for APOG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for APOG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for APOG...

==================================================
Training Baseline APOG (SVM)
==================================================
Training SVM model...

Baseline APOG Performance:
MAE: 72888.7481
RMSE: 90775.9306
MAPE: 9.35%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 250
   • Highly important features (top 5%): 123

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t2: importance=0.0004, rank=1
   2. Feature_74_t3: importance=0.0004, rank=2
   3. Feature_2_t0: importance=0.0002, rank=3
   4. Feature_65_t1: importance=0.0002, rank=4
   5. Feature_81_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for APOG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for APOG...

==================================================
Training Enhanced APOG (SVM)
==================================================
Training SVM model...

Enhanced APOG Performance:
MAE: 77100.6878
RMSE: 98997.9636
MAPE: 10.07%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 53
   • Highly important features (top 5%): 32

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0013, rank=1
   2. Feature_1_t3: importance=0.0012, rank=2
   3. Feature_1_t2: importance=0.0009, rank=3
   4. Feature_2_t0: importance=0.0008, rank=4
   5. Feature_4_t1: importance=0.0007, rank=5

📊 APOG Results:
  Baseline MAPE: 9.35%
  Enhanced MAPE: 10.07%
  MAPE Improvement: -0.72% (-7.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 39/464: ARCB
============================================================
📊 Loading data for ARCB...
📊 Loading data for ARCB from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ARCB...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ARCB...

==================================================
Training Baseline ARCB (SVM)
==================================================
Training SVM model...

Baseline ARCB Performance:
MAE: 113488.3515
RMSE: 144998.7987
MAPE: 8.23%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 147
   • Highly important features (top 5%): 69

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0006, rank=1
   2. Feature_65_t0: importance=0.0006, rank=2
   3. Feature_65_t1: importance=0.0005, rank=3
   4. Feature_63_t0: importance=0.0004, rank=4
   5. Feature_85_t1: importance=0.0004, rank=5

🔧 Applying universal feature engineering for ARCB...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ARCB...

==================================================
Training Enhanced ARCB (SVM)
==================================================
Training SVM model...

Enhanced ARCB Performance:
MAE: 134498.0144
RMSE: 173694.6476
MAPE: 10.13%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 36
   • Highly important features (top 5%): 26

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0048, rank=1
   2. Feature_0_t3: importance=0.0014, rank=2
   3. Feature_2_t2: importance=0.0011, rank=3
   4. Feature_2_t0: importance=0.0010, rank=4
   5. Feature_1_t0: importance=0.0010, rank=5

📊 ARCB Results:
  Baseline MAPE: 8.23%
  Enhanced MAPE: 10.13%
  MAPE Improvement: -1.90% (-23.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 40/464: ARI
============================================================
📊 Loading data for ARI...
📊 Loading data for ARI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ARI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ARI...

==================================================
Training Baseline ARI (SVM)
==================================================
Training SVM model...

Baseline ARI Performance:
MAE: 344079.6948
RMSE: 441441.9705
MAPE: 8.68%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 274
   • Highly important features (top 5%): 134

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_80_t1: importance=0.0004, rank=1
   2. Feature_93_t3: importance=0.0003, rank=2
   3. Feature_81_t1: importance=0.0003, rank=3
   4. Feature_67_t3: importance=0.0002, rank=4
   5. Feature_66_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for ARI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ARI...

==================================================
Training Enhanced ARI (SVM)
==================================================
Training SVM model...

Enhanced ARI Performance:
MAE: 331180.3890
RMSE: 428897.8221
MAPE: 8.44%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 25

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0054, rank=1
   2. Feature_13_t2: importance=0.0010, rank=2
   3. Feature_1_t2: importance=0.0009, rank=3
   4. Feature_0_t3: importance=0.0009, rank=4
   5. Feature_12_t2: importance=0.0007, rank=5

📊 ARI Results:
  Baseline MAPE: 8.68%
  Enhanced MAPE: 8.44%
  MAPE Improvement: +0.23% (+2.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 41/464: AROC
============================================================
📊 Loading data for AROC...
📊 Loading data for AROC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AROC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AROC...

==================================================
Training Baseline AROC (SVM)
==================================================
Training SVM model...

Baseline AROC Performance:
MAE: 494427.6401
RMSE: 646601.0801
MAPE: 9.53%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 309
   • Highly important features (top 5%): 206

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t3: importance=0.0016, rank=1
   2. Feature_71_t3: importance=0.0015, rank=2
   3. Feature_69_t3: importance=0.0014, rank=3
   4. Feature_72_t3: importance=0.0011, rank=4
   5. Feature_1_t3: importance=0.0008, rank=5

🔧 Applying universal feature engineering for AROC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AROC...

==================================================
Training Enhanced AROC (SVM)
==================================================
Training SVM model...

Enhanced AROC Performance:
MAE: 539305.6850
RMSE: 692732.4103
MAPE: 10.19%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 49
   • Highly important features (top 5%): 39

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0100, rank=1
   2. Feature_2_t3: importance=0.0030, rank=2
   3. Feature_0_t1: importance=0.0020, rank=3
   4. Feature_1_t2: importance=0.0019, rank=4
   5. Feature_2_t0: importance=0.0014, rank=5

📊 AROC Results:
  Baseline MAPE: 9.53%
  Enhanced MAPE: 10.19%
  MAPE Improvement: -0.66% (-6.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 42/464: ARR
============================================================
📊 Loading data for ARR...
📊 Loading data for ARR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ARR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ARR...

==================================================
Training Baseline ARR (SVM)
==================================================
Training SVM model...

Baseline ARR Performance:
MAE: 987392.0938
RMSE: 1339876.7169
MAPE: 17.72%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 143
   • Highly important features (top 5%): 79

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t1: importance=0.0026, rank=1
   2. Feature_89_t0: importance=0.0024, rank=2
   3. Feature_65_t2: importance=0.0018, rank=3
   4. Feature_68_t1: importance=0.0016, rank=4
   5. Feature_71_t3: importance=0.0014, rank=5

🔧 Applying universal feature engineering for ARR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ARR...

==================================================
Training Enhanced ARR (SVM)
==================================================
Training SVM model...

Enhanced ARR Performance:
MAE: 1071923.6392
RMSE: 1375130.1958
MAPE: 19.25%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 39
   • Highly important features (top 5%): 31

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0231, rank=1
   2. Feature_2_t2: importance=0.0036, rank=2
   3. Feature_2_t3: importance=0.0022, rank=3
   4. Feature_1_t3: importance=0.0020, rank=4
   5. Feature_11_t1: importance=0.0020, rank=5

📊 ARR Results:
  Baseline MAPE: 17.72%
  Enhanced MAPE: 19.25%
  MAPE Improvement: -1.53% (-8.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 43/464: ARWR
============================================================
📊 Loading data for ARWR...
📊 Loading data for ARWR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ARWR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ARWR...

==================================================
Training Baseline ARWR (SVM)
==================================================
Training SVM model...

Baseline ARWR Performance:
MAE: 612348.1903
RMSE: 738534.7043
MAPE: 6.36%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 125
   • Highly important features (top 5%): 74

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_92_t3: importance=0.0002, rank=1
   2. Feature_84_t3: importance=0.0001, rank=2
   3. Feature_69_t1: importance=0.0001, rank=3
   4. Feature_73_t1: importance=0.0001, rank=4
   5. Feature_67_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for ARWR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ARWR...

==================================================
Training Enhanced ARWR (SVM)
==================================================
Training SVM model...

Enhanced ARWR Performance:
MAE: 884371.6435
RMSE: 1019316.2307
MAPE: 8.96%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 26
   • Highly important features (top 5%): 16

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0006, rank=1
   2. Feature_0_t2: importance=0.0004, rank=2
   3. Feature_1_t1: importance=0.0003, rank=3
   4. Feature_1_t3: importance=0.0003, rank=4
   5. Feature_0_t1: importance=0.0003, rank=5

📊 ARWR Results:
  Baseline MAPE: 6.36%
  Enhanced MAPE: 8.96%
  MAPE Improvement: -2.59% (-40.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 44/464: ASIX
============================================================
📊 Loading data for ASIX...
📊 Loading data for ASIX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ASIX...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ASIX...

==================================================
Training Baseline ASIX (SVM)
==================================================
Training SVM model...

Baseline ASIX Performance:
MAE: 37811.3317
RMSE: 46272.3256
MAPE: 11.77%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 233
   • Highly important features (top 5%): 138

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t1: importance=0.0010, rank=1
   2. Feature_64_t1: importance=0.0007, rank=2
   3. Feature_89_t1: importance=0.0006, rank=3
   4. Feature_2_t2: importance=0.0006, rank=4
   5. Feature_63_t3: importance=0.0006, rank=5

🔧 Applying universal feature engineering for ASIX...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ASIX...

==================================================
Training Enhanced ASIX (SVM)
==================================================
Training SVM model...

Enhanced ASIX Performance:
MAE: 44740.9103
RMSE: 52574.5877
MAPE: 13.76%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 18
   • Highly important features (top 5%): 8

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0077, rank=1
   2. Feature_1_t1: importance=0.0049, rank=2
   3. Feature_0_t1: importance=0.0035, rank=3
   4. Feature_1_t3: importance=0.0033, rank=4
   5. Feature_2_t0: importance=0.0026, rank=5

📊 ASIX Results:
  Baseline MAPE: 11.77%
  Enhanced MAPE: 13.76%
  MAPE Improvement: -1.99% (-16.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 45/464: ASTE
============================================================
📊 Loading data for ASTE...
📊 Loading data for ASTE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ASTE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ASTE...

==================================================
Training Baseline ASTE (SVM)
==================================================
Training SVM model...

Baseline ASTE Performance:
MAE: 50791.6298
RMSE: 60943.0233
MAPE: 12.31%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 142
   • Highly important features (top 5%): 85

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_88_t1: importance=0.0008, rank=1
   2. Feature_95_t0: importance=0.0008, rank=2
   3. Feature_87_t1: importance=0.0004, rank=3
   4. Feature_73_t1: importance=0.0003, rank=4
   5. Feature_95_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for ASTE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ASTE...

==================================================
Training Enhanced ASTE (SVM)
==================================================
Training SVM model...

Enhanced ASTE Performance:
MAE: 56022.7892
RMSE: 68360.9970
MAPE: 13.28%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 52
   • Highly important features (top 5%): 44

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0019, rank=1
   2. Feature_1_t0: importance=0.0012, rank=2
   3. Feature_5_t0: importance=0.0012, rank=3
   4. Feature_1_t2: importance=0.0012, rank=4
   5. Feature_3_t0: importance=0.0011, rank=5

📊 ASTE Results:
  Baseline MAPE: 12.31%
  Enhanced MAPE: 13.28%
  MAPE Improvement: -0.96% (-7.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 46/464: ATEN
============================================================
📊 Loading data for ATEN...
📊 Loading data for ATEN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ATEN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ATEN...

==================================================
Training Baseline ATEN (SVM)
==================================================
Training SVM model...

Baseline ATEN Performance:
MAE: 463846.0877
RMSE: 633462.8777
MAPE: 16.60%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 175
   • Highly important features (top 5%): 73

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_67_t1: importance=0.0012, rank=1
   2. Feature_2_t3: importance=0.0008, rank=2
   3. Feature_74_t2: importance=0.0007, rank=3
   4. Feature_64_t3: importance=0.0006, rank=4
   5. Feature_69_t1: importance=0.0006, rank=5

🔧 Applying universal feature engineering for ATEN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ATEN...

==================================================
Training Enhanced ATEN (SVM)
==================================================
Training SVM model...

Enhanced ATEN Performance:
MAE: 461000.4530
RMSE: 645314.0804
MAPE: 16.22%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 36
   • Highly important features (top 5%): 18

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0033, rank=1
   2. Feature_0_t3: importance=0.0030, rank=2
   3. Feature_2_t3: importance=0.0027, rank=3
   4. Feature_2_t2: importance=0.0022, rank=4
   5. Feature_1_t3: importance=0.0018, rank=5

📊 ATEN Results:
  Baseline MAPE: 16.60%
  Enhanced MAPE: 16.22%
  MAPE Improvement: +0.38% (+2.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 47/464: ATGE
============================================================
📊 Loading data for ATGE...
📊 Loading data for ATGE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ATGE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ATGE...

==================================================
Training Baseline ATGE (SVM)
==================================================
Training SVM model...

Baseline ATGE Performance:
MAE: 200590.8620
RMSE: 279451.9818
MAPE: 15.44%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 191
   • Highly important features (top 5%): 78

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_78_t2: importance=0.0011, rank=1
   2. Feature_83_t1: importance=0.0009, rank=2
   3. Feature_81_t1: importance=0.0007, rank=3
   4. Feature_79_t1: importance=0.0006, rank=4
   5. Feature_77_t2: importance=0.0006, rank=5

🔧 Applying universal feature engineering for ATGE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ATGE...

==================================================
Training Enhanced ATGE (SVM)
==================================================
Training SVM model...

Enhanced ATGE Performance:
MAE: 215929.0109
RMSE: 290612.4252
MAPE: 16.36%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 53
   • Highly important features (top 5%): 45

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0020, rank=1
   2. Feature_0_t0: importance=0.0017, rank=2
   3. Feature_4_t2: importance=0.0016, rank=3
   4. Feature_11_t3: importance=0.0014, rank=4
   5. Feature_9_t2: importance=0.0014, rank=5

📊 ATGE Results:
  Baseline MAPE: 15.44%
  Enhanced MAPE: 16.36%
  MAPE Improvement: -0.92% (-5.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 48/464: AVA
============================================================
📊 Loading data for AVA...
📊 Loading data for AVA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AVA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AVA...

==================================================
Training Baseline AVA (SVM)
==================================================
Training SVM model...

Baseline AVA Performance:
MAE: 204944.8282
RMSE: 257769.2224
MAPE: 6.98%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 282
   • Highly important features (top 5%): 171

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_91_t3: importance=0.0005, rank=1
   2. Feature_82_t3: importance=0.0004, rank=2
   3. Feature_95_t2: importance=0.0004, rank=3
   4. Feature_0_t3: importance=0.0004, rank=4
   5. Feature_94_t2: importance=0.0004, rank=5

🔧 Applying universal feature engineering for AVA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AVA...

==================================================
Training Enhanced AVA (SVM)
==================================================
Training SVM model...

Enhanced AVA Performance:
MAE: 246247.0588
RMSE: 298217.9993
MAPE: 8.18%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 43
   • Highly important features (top 5%): 33

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0068, rank=1
   2. Feature_1_t3: importance=0.0030, rank=2
   3. Feature_0_t0: importance=0.0020, rank=3
   4. Feature_1_t0: importance=0.0018, rank=4
   5. Feature_2_t3: importance=0.0017, rank=5

📊 AVA Results:
  Baseline MAPE: 6.98%
  Enhanced MAPE: 8.18%
  MAPE Improvement: -1.20% (-17.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 49/464: AWI
============================================================
📊 Loading data for AWI...
📊 Loading data for AWI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AWI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AWI...

==================================================
Training Baseline AWI (SVM)
==================================================
Training SVM model...

Baseline AWI Performance:
MAE: 129762.2305
RMSE: 172386.4790
MAPE: 19.19%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 353
   • Highly important features (top 5%): 213

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_90_t3: importance=0.0011, rank=1
   2. Feature_0_t3: importance=0.0005, rank=2
   3. Feature_2_t3: importance=0.0005, rank=3
   4. Feature_74_t3: importance=0.0004, rank=4
   5. Feature_72_t2: importance=0.0004, rank=5

🔧 Applying universal feature engineering for AWI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AWI...

==================================================
Training Enhanced AWI (SVM)
==================================================
Training SVM model...

Enhanced AWI Performance:
MAE: 116378.3438
RMSE: 162486.9697
MAPE: 17.42%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 56
   • Highly important features (top 5%): 41

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0031, rank=1
   2. Feature_0_t3: importance=0.0028, rank=2
   3. Feature_2_t0: importance=0.0019, rank=3
   4. Feature_0_t1: importance=0.0019, rank=4
   5. Feature_2_t2: importance=0.0018, rank=5

📊 AWI Results:
  Baseline MAPE: 19.19%
  Enhanced MAPE: 17.42%
  MAPE Improvement: +1.77% (+9.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 50/464: AWR
============================================================
📊 Loading data for AWR...
📊 Loading data for AWR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AWR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AWR...

==================================================
Training Baseline AWR (SVM)
==================================================
Training SVM model...

Baseline AWR Performance:
MAE: 58962.7989
RMSE: 78794.6604
MAPE: 11.59%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 331
   • Highly important features (top 5%): 176

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_92_t1: importance=0.0005, rank=1
   2. Feature_65_t3: importance=0.0004, rank=2
   3. Feature_67_t0: importance=0.0004, rank=3
   4. Feature_92_t0: importance=0.0004, rank=4
   5. Feature_72_t1: importance=0.0004, rank=5

🔧 Applying universal feature engineering for AWR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AWR...

==================================================
Training Enhanced AWR (SVM)
==================================================
Training SVM model...

Enhanced AWR Performance:
MAE: 63236.4231
RMSE: 81930.8955
MAPE: 12.41%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 13

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0105, rank=1
   2. Feature_2_t3: importance=0.0081, rank=2
   3. Feature_0_t0: importance=0.0022, rank=3
   4. Feature_6_t3: importance=0.0021, rank=4
   5. Feature_2_t2: importance=0.0018, rank=5

📊 AWR Results:
  Baseline MAPE: 11.59%
  Enhanced MAPE: 12.41%
  MAPE Improvement: -0.83% (-7.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 51/464: AXL
============================================================
📊 Loading data for AXL...
📊 Loading data for AXL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing AXL: 'AXL'

============================================================
TESTING TICKER 52/464: AZZ
============================================================
📊 Loading data for AZZ...
📊 Loading data for AZZ from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for AZZ...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for AZZ...

==================================================
Training Baseline AZZ (SVM)
==================================================
Training SVM model...

Baseline AZZ Performance:
MAE: 81425.2466
RMSE: 124878.5800
MAPE: 13.16%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 231
   • Highly important features (top 5%): 107

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t1: importance=0.0014, rank=1
   2. Feature_80_t0: importance=0.0013, rank=2
   3. Feature_0_t3: importance=0.0009, rank=3
   4. Feature_2_t2: importance=0.0009, rank=4
   5. Feature_88_t2: importance=0.0008, rank=5

🔧 Applying universal feature engineering for AZZ...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for AZZ...

==================================================
Training Enhanced AZZ (SVM)
==================================================
Training SVM model...

Enhanced AZZ Performance:
MAE: 78082.9725
RMSE: 122559.7325
MAPE: 12.11%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 52
   • Highly important features (top 5%): 44

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0067, rank=1
   2. Feature_2_t2: importance=0.0022, rank=2
   3. Feature_1_t0: importance=0.0019, rank=3
   4. Feature_14_t3: importance=0.0019, rank=4
   5. Feature_1_t1: importance=0.0017, rank=5

📊 AZZ Results:
  Baseline MAPE: 13.16%
  Enhanced MAPE: 12.11%
  MAPE Improvement: +1.05% (+8.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 53/464: BANC
============================================================
📊 Loading data for BANC...
📊 Loading data for BANC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BANC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BANC...

==================================================
Training Baseline BANC (SVM)
==================================================
Training SVM model...

Baseline BANC Performance:
MAE: 1020227.4181
RMSE: 1443680.1117
MAPE: 8.71%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 142
   • Highly important features (top 5%): 65

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_93_t0: importance=0.0007, rank=1
   2. Feature_64_t1: importance=0.0007, rank=2
   3. Feature_93_t1: importance=0.0006, rank=3
   4. Feature_72_t3: importance=0.0005, rank=4
   5. Feature_92_t0: importance=0.0004, rank=5

🔧 Applying universal feature engineering for BANC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BANC...

==================================================
Training Enhanced BANC (SVM)
==================================================
Training SVM model...

Enhanced BANC Performance:
MAE: 1379832.3732
RMSE: 1667761.7669
MAPE: 11.47%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 28
   • Highly important features (top 5%): 16

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0025, rank=1
   2. Feature_2_t2: importance=0.0020, rank=2
   3. Feature_1_t3: importance=0.0018, rank=3
   4. Feature_1_t2: importance=0.0013, rank=4
   5. Feature_2_t0: importance=0.0012, rank=5

📊 BANC Results:
  Baseline MAPE: 8.71%
  Enhanced MAPE: 11.47%
  MAPE Improvement: -2.76% (-31.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 54/464: BANF
============================================================
📊 Loading data for BANF...
📊 Loading data for BANF from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing BANF: 'BANF'

============================================================
TESTING TICKER 55/464: BANR
============================================================
📊 Loading data for BANR...
📊 Loading data for BANR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BANR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BANR...

==================================================
Training Baseline BANR (SVM)
==================================================
Training SVM model...

Baseline BANR Performance:
MAE: 65832.5994
RMSE: 86822.3858
MAPE: 7.72%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 146
   • Highly important features (top 5%): 86

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0003, rank=1
   2. Feature_77_t0: importance=0.0003, rank=2
   3. Feature_63_t0: importance=0.0002, rank=3
   4. Feature_73_t3: importance=0.0002, rank=4
   5. Feature_2_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for BANR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BANR...

==================================================
Training Enhanced BANR (SVM)
==================================================
Training SVM model...

Enhanced BANR Performance:
MAE: 84972.6029
RMSE: 108886.1626
MAPE: 9.66%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 43
   • Highly important features (top 5%): 28

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0023, rank=1
   2. Feature_1_t2: importance=0.0006, rank=2
   3. Feature_2_t1: importance=0.0006, rank=3
   4. Feature_2_t3: importance=0.0005, rank=4
   5. Feature_0_t2: importance=0.0005, rank=5

📊 BANR Results:
  Baseline MAPE: 7.72%
  Enhanced MAPE: 9.66%
  MAPE Improvement: -1.95% (-25.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 56/464: BCC
============================================================
📊 Loading data for BCC...
📊 Loading data for BCC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BCC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BCC...

==================================================
Training Baseline BCC (SVM)
==================================================
Training SVM model...

Baseline BCC Performance:
MAE: 127919.0391
RMSE: 182720.2933
MAPE: 11.88%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 166
   • Highly important features (top 5%): 95

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t1: importance=0.0009, rank=1
   2. Feature_63_t0: importance=0.0006, rank=2
   3. Feature_65_t2: importance=0.0004, rank=3
   4. Feature_81_t3: importance=0.0004, rank=4
   5. Feature_82_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for BCC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BCC...

==================================================
Training Enhanced BCC (SVM)
==================================================
Training SVM model...

Enhanced BCC Performance:
MAE: 122996.4576
RMSE: 177066.2792
MAPE: 11.32%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 45
   • Highly important features (top 5%): 26

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0029, rank=1
   2. Feature_0_t3: importance=0.0020, rank=2
   3. Feature_1_t0: importance=0.0019, rank=3
   4. Feature_0_t0: importance=0.0018, rank=4
   5. Feature_1_t3: importance=0.0017, rank=5

📊 BCC Results:
  Baseline MAPE: 11.88%
  Enhanced MAPE: 11.32%
  MAPE Improvement: +0.56% (+4.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 57/464: BCPC
============================================================
📊 Loading data for BCPC...
📊 Loading data for BCPC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BCPC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BCPC...

==================================================
Training Baseline BCPC (SVM)
==================================================
Training SVM model...

Baseline BCPC Performance:
MAE: 38258.5765
RMSE: 47317.8840
MAPE: 9.04%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 143
   • Highly important features (top 5%): 65

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_78_t0: importance=0.0003, rank=1
   2. Feature_64_t3: importance=0.0003, rank=2
   3. Feature_87_t1: importance=0.0003, rank=3
   4. Feature_72_t1: importance=0.0002, rank=4
   5. Feature_1_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for BCPC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BCPC...

==================================================
Training Enhanced BCPC (SVM)
==================================================
Training SVM model...

Enhanced BCPC Performance:
MAE: 38581.2344
RMSE: 48510.6235
MAPE: 9.40%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 12
   • Highly important features (top 5%): 7

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0032, rank=1
   2. Feature_0_t3: importance=0.0022, rank=2
   3. Feature_1_t0: importance=0.0021, rank=3
   4. Feature_1_t2: importance=0.0010, rank=4
   5. Feature_2_t1: importance=0.0009, rank=5

📊 BCPC Results:
  Baseline MAPE: 9.04%
  Enhanced MAPE: 9.40%
  MAPE Improvement: -0.36% (-4.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 58/464: BDN
============================================================
📊 Loading data for BDN...
📊 Loading data for BDN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BDN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BDN...

==================================================
Training Baseline BDN (SVM)
==================================================
Training SVM model...

Baseline BDN Performance:
MAE: 717720.8356
RMSE: 1140040.5757
MAPE: 5.66%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 92
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t0: importance=0.0012, rank=1
   2. Feature_96_t1: importance=0.0007, rank=2
   3. Feature_70_t0: importance=0.0007, rank=3
   4. Feature_95_t1: importance=0.0005, rank=4
   5. Feature_81_t0: importance=0.0005, rank=5

🔧 Applying universal feature engineering for BDN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BDN...

==================================================
Training Enhanced BDN (SVM)
==================================================
Training SVM model...

Enhanced BDN Performance:
MAE: 855167.0823
RMSE: 1199476.2193
MAPE: 6.77%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 50
   • Highly important features (top 5%): 35

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0011, rank=1
   2. Feature_2_t1: importance=0.0010, rank=2
   3. Feature_4_t3: importance=0.0010, rank=3
   4. Feature_2_t3: importance=0.0010, rank=4
   5. Feature_1_t1: importance=0.0009, rank=5

📊 BDN Results:
  Baseline MAPE: 5.66%
  Enhanced MAPE: 6.77%
  MAPE Improvement: -1.11% (-19.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 59/464: BFS
============================================================
📊 Loading data for BFS...
📊 Loading data for BFS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing BFS: 'BFS'

============================================================
TESTING TICKER 60/464: BHE
============================================================
📊 Loading data for BHE...
📊 Loading data for BHE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BHE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BHE...

==================================================
Training Baseline BHE (SVM)
==================================================
Training SVM model...

Baseline BHE Performance:
MAE: 117367.9813
RMSE: 146426.7627
MAPE: 11.75%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 302
   • Highly important features (top 5%): 183

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t2: importance=0.0017, rank=1
   2. Feature_2_t3: importance=0.0016, rank=2
   3. Feature_80_t2: importance=0.0013, rank=3
   4. Feature_73_t3: importance=0.0012, rank=4
   5. Feature_95_t2: importance=0.0012, rank=5

🔧 Applying universal feature engineering for BHE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BHE...

==================================================
Training Enhanced BHE (SVM)
==================================================
Training SVM model...

Enhanced BHE Performance:
MAE: 113702.5768
RMSE: 149195.7790
MAPE: 11.09%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 43
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0061, rank=1
   2. Feature_0_t0: importance=0.0049, rank=2
   3. Feature_2_t3: importance=0.0048, rank=3
   4. Feature_1_t2: importance=0.0032, rank=4
   5. Feature_0_t2: importance=0.0027, rank=5

📊 BHE Results:
  Baseline MAPE: 11.75%
  Enhanced MAPE: 11.09%
  MAPE Improvement: +0.66% (+5.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 61/464: BJRI
============================================================
📊 Loading data for BJRI...
📊 Loading data for BJRI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BJRI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BJRI...

==================================================
Training Baseline BJRI (SVM)
==================================================
Training SVM model...

Baseline BJRI Performance:
MAE: 113741.1628
RMSE: 145076.8287
MAPE: 6.57%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 159
   • Highly important features (top 5%): 75

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0004, rank=1
   2. Feature_63_t0: importance=0.0004, rank=2
   3. Feature_95_t2: importance=0.0003, rank=3
   4. Feature_93_t2: importance=0.0002, rank=4
   5. Feature_81_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for BJRI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BJRI...

==================================================
Training Enhanced BJRI (SVM)
==================================================
Training SVM model...

Enhanced BJRI Performance:
MAE: 117124.7197
RMSE: 153503.3014
MAPE: 6.84%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 54
   • Highly important features (top 5%): 42

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0013, rank=1
   2. Feature_2_t2: importance=0.0013, rank=2
   3. Feature_2_t3: importance=0.0012, rank=3
   4. Feature_0_t2: importance=0.0009, rank=4
   5. Feature_1_t1: importance=0.0006, rank=5

📊 BJRI Results:
  Baseline MAPE: 6.57%
  Enhanced MAPE: 6.84%
  MAPE Improvement: -0.27% (-4.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 62/464: BKE
============================================================
📊 Loading data for BKE...
📊 Loading data for BKE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BKE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BKE...

==================================================
Training Baseline BKE (SVM)
==================================================
Training SVM model...

Baseline BKE Performance:
MAE: 227310.4418
RMSE: 292715.2720
MAPE: 7.87%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 201
   • Highly important features (top 5%): 99

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0000, rank=1
   2. Feature_68_t3: importance=0.0000, rank=2
   3. Feature_67_t3: importance=0.0000, rank=3
   4. Feature_65_t3: importance=0.0000, rank=4
   5. Feature_90_t2: importance=0.0000, rank=5

🔧 Applying universal feature engineering for BKE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BKE...

==================================================
Training Enhanced BKE (SVM)
==================================================
Training SVM model...

Enhanced BKE Performance:
MAE: 248834.6907
RMSE: 310506.3772
MAPE: 8.66%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 20
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0004, rank=1
   2. Feature_1_t3: importance=0.0004, rank=2
   3. Feature_5_t1: importance=0.0002, rank=3
   4. Feature_1_t1: importance=0.0002, rank=4
   5. Feature_0_t3: importance=0.0002, rank=5

📊 BKE Results:
  Baseline MAPE: 7.87%
  Enhanced MAPE: 8.66%
  MAPE Improvement: -0.79% (-10.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 63/464: BKU
============================================================
📊 Loading data for BKU...
📊 Loading data for BKU from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BKU...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BKU...

==================================================
Training Baseline BKU (SVM)
==================================================
Training SVM model...

Baseline BKU Performance:
MAE: 228307.1118
RMSE: 277785.1350
MAPE: 7.77%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 268
   • Highly important features (top 5%): 129

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_84_t2: importance=0.0005, rank=1
   2. Feature_80_t1: importance=0.0005, rank=2
   3. Feature_82_t0: importance=0.0004, rank=3
   4. Feature_82_t1: importance=0.0004, rank=4
   5. Feature_74_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for BKU...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BKU...

==================================================
Training Enhanced BKU (SVM)
==================================================
Training SVM model...

Enhanced BKU Performance:
MAE: 310996.1487
RMSE: 387529.5093
MAPE: 10.17%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0035, rank=1
   2. Feature_0_t3: importance=0.0030, rank=2
   3. Feature_1_t1: importance=0.0027, rank=3
   4. Feature_1_t2: importance=0.0021, rank=4
   5. Feature_2_t1: importance=0.0013, rank=5

📊 BKU Results:
  Baseline MAPE: 7.77%
  Enhanced MAPE: 10.17%
  MAPE Improvement: -2.40% (-30.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 64/464: BL
============================================================
📊 Loading data for BL...
📊 Loading data for BL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BL...

==================================================
Training Baseline BL (SVM)
==================================================
Training SVM model...

Baseline BL Performance:
MAE: 398634.5750
RMSE: 536977.8120
MAPE: 9.20%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 73
   • Highly important features (top 5%): 31

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t0: importance=0.0003, rank=1
   2. Feature_67_t0: importance=0.0002, rank=2
   3. Feature_82_t0: importance=0.0002, rank=3
   4. Feature_96_t0: importance=0.0001, rank=4
   5. Feature_84_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for BL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BL...

==================================================
Training Enhanced BL (SVM)
==================================================
Training SVM model...

Enhanced BL Performance:
MAE: 370778.6660
RMSE: 531910.4300
MAPE: 9.05%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 21
   • Highly important features (top 5%): 11

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0009, rank=1
   2. Feature_2_t2: importance=0.0007, rank=2
   3. Feature_1_t2: importance=0.0006, rank=3
   4. Feature_1_t3: importance=0.0005, rank=4
   5. Feature_2_t0: importance=0.0004, rank=5

📊 BL Results:
  Baseline MAPE: 9.20%
  Enhanced MAPE: 9.05%
  MAPE Improvement: +0.15% (+1.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 65/464: BLFS
============================================================
📊 Loading data for BLFS...
📊 Loading data for BLFS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing BLFS: 'BLFS'

============================================================
TESTING TICKER 66/464: BLMN
============================================================
📊 Loading data for BLMN...
📊 Loading data for BLMN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BLMN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BLMN...

==================================================
Training Baseline BLMN (SVM)
==================================================
Training SVM model...

Baseline BLMN Performance:
MAE: 1043235.5495
RMSE: 1425109.4137
MAPE: 13.88%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 225
   • Highly important features (top 5%): 110

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t3: importance=0.0005, rank=1
   2. Feature_72_t3: importance=0.0004, rank=2
   3. Feature_72_t0: importance=0.0002, rank=3
   4. Feature_1_t3: importance=0.0002, rank=4
   5. Feature_96_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for BLMN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BLMN...

==================================================
Training Enhanced BLMN (SVM)
==================================================
Training SVM model...

Enhanced BLMN Performance:
MAE: 1024589.1479
RMSE: 1431199.6009
MAPE: 13.66%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0020, rank=1
   2. Feature_1_t3: importance=0.0016, rank=2
   3. Feature_2_t3: importance=0.0007, rank=3
   4. Feature_4_t3: importance=0.0005, rank=4
   5. Feature_0_t2: importance=0.0005, rank=5

📊 BLMN Results:
  Baseline MAPE: 13.88%
  Enhanced MAPE: 13.66%
  MAPE Improvement: +0.22% (+1.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 67/464: BMI
============================================================
📊 Loading data for BMI...
📊 Loading data for BMI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BMI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BMI...

==================================================
Training Baseline BMI (SVM)
==================================================
Training SVM model...

Baseline BMI Performance:
MAE: 69759.4600
RMSE: 107918.2902
MAPE: 4.92%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 98
   • Highly important features (top 5%): 64

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_88_t2: importance=0.0000, rank=1
   2. Feature_0_t0: importance=0.0000, rank=2
   3. Feature_91_t2: importance=0.0000, rank=3
   4. Feature_2_t0: importance=0.0000, rank=4
   5. Feature_70_t0: importance=0.0000, rank=5

🔧 Applying universal feature engineering for BMI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BMI...

==================================================
Training Enhanced BMI (SVM)
==================================================
Training SVM model...

Enhanced BMI Performance:
MAE: 65451.8200
RMSE: 100164.9076
MAPE: 4.71%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 12
   • Highly important features (top 5%): 9

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0005, rank=1
   2. Feature_2_t0: importance=0.0003, rank=2
   3. Feature_1_t0: importance=0.0002, rank=3
   4. Feature_0_t3: importance=0.0002, rank=4
   5. Feature_1_t2: importance=0.0001, rank=5

📊 BMI Results:
  Baseline MAPE: 4.92%
  Enhanced MAPE: 4.71%
  MAPE Improvement: +0.21% (+4.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 68/464: BOH
============================================================
📊 Loading data for BOH...
📊 Loading data for BOH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BOH...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BOH...

==================================================
Training Baseline BOH (SVM)
==================================================
Training SVM model...

Baseline BOH Performance:
MAE: 179415.4940
RMSE: 230257.4058
MAPE: 3.86%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 189
   • Highly important features (top 5%): 84

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_84_t1: importance=0.0002, rank=1
   2. Feature_63_t3: importance=0.0002, rank=2
   3. Feature_82_t2: importance=0.0002, rank=3
   4. Feature_93_t1: importance=0.0001, rank=4
   5. Feature_83_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for BOH...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BOH...

==================================================
Training Enhanced BOH (SVM)
==================================================
Training SVM model...

Enhanced BOH Performance:
MAE: 208561.1666
RMSE: 271303.7159
MAPE: 4.28%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 40
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0009, rank=1
   2. Feature_2_t2: importance=0.0009, rank=2
   3. Feature_0_t3: importance=0.0009, rank=3
   4. Feature_1_t0: importance=0.0006, rank=4
   5. Feature_13_t1: importance=0.0003, rank=5

📊 BOH Results:
  Baseline MAPE: 3.86%
  Enhanced MAPE: 4.28%
  MAPE Improvement: -0.42% (-11.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 69/464: BOOT
============================================================
📊 Loading data for BOOT...
📊 Loading data for BOOT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BOOT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BOOT...

==================================================
Training Baseline BOOT (SVM)
==================================================
Training SVM model...

Baseline BOOT Performance:
MAE: 361007.3361
RMSE: 435027.7966
MAPE: 11.62%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 289
   • Highly important features (top 5%): 138

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0002, rank=1
   2. Feature_63_t1: importance=0.0002, rank=2
   3. Feature_90_t2: importance=0.0001, rank=3
   4. Feature_68_t3: importance=0.0001, rank=4
   5. Feature_75_t0: importance=0.0001, rank=5

🔧 Applying universal feature engineering for BOOT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BOOT...

==================================================
Training Enhanced BOOT (SVM)
==================================================
Training SVM model...

Enhanced BOOT Performance:
MAE: 379366.1715
RMSE: 471985.6912
MAPE: 12.58%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 54
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0008, rank=1
   2. Feature_2_t1: importance=0.0007, rank=2
   3. Feature_13_t0: importance=0.0006, rank=3
   4. Feature_2_t2: importance=0.0006, rank=4
   5. Feature_12_t0: importance=0.0005, rank=5

📊 BOOT Results:
  Baseline MAPE: 11.62%
  Enhanced MAPE: 12.58%
  MAPE Improvement: -0.95% (-8.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 70/464: BOX
============================================================
📊 Loading data for BOX...
📊 Loading data for BOX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing BOX: 'BOX'

============================================================
TESTING TICKER 71/464: BRC
============================================================
📊 Loading data for BRC...
📊 Loading data for BRC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BRC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BRC...

==================================================
Training Baseline BRC (SVM)
==================================================
Training SVM model...

Baseline BRC Performance:
MAE: 89758.7956
RMSE: 139803.0153
MAPE: 19.52%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 338
   • Highly important features (top 5%): 208

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_88_t2: importance=0.0012, rank=1
   2. Feature_81_t3: importance=0.0008, rank=2
   3. Feature_86_t2: importance=0.0008, rank=3
   4. Feature_0_t3: importance=0.0007, rank=4
   5. Feature_69_t2: importance=0.0007, rank=5

🔧 Applying universal feature engineering for BRC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BRC...

==================================================
Training Enhanced BRC (SVM)
==================================================
Training SVM model...

Enhanced BRC Performance:
MAE: 88387.6377
RMSE: 148866.8181
MAPE: 19.68%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 47
   • Highly important features (top 5%): 31

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0112, rank=1
   2. Feature_1_t2: importance=0.0049, rank=2
   3. Feature_2_t3: importance=0.0033, rank=3
   4. Feature_1_t1: importance=0.0031, rank=4
   5. Feature_1_t0: importance=0.0024, rank=5

📊 BRC Results:
  Baseline MAPE: 19.52%
  Enhanced MAPE: 19.68%
  MAPE Improvement: -0.16% (-0.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 72/464: BTU
============================================================
📊 Loading data for BTU...
📊 Loading data for BTU from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing BTU: 'BTU'

============================================================
TESTING TICKER 73/464: BWA
============================================================
📊 Loading data for BWA...
📊 Loading data for BWA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BWA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BWA...

==================================================
Training Baseline BWA (SVM)
==================================================
Training SVM model...

Baseline BWA Performance:
MAE: 846638.0752
RMSE: 1138647.7820
MAPE: 8.86%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 215
   • Highly important features (top 5%): 129

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t1: importance=0.0004, rank=1
   2. Feature_75_t3: importance=0.0003, rank=2
   3. Feature_1_t1: importance=0.0002, rank=3
   4. Feature_82_t0: importance=0.0002, rank=4
   5. Feature_78_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for BWA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BWA...

==================================================
Training Enhanced BWA (SVM)
==================================================
Training SVM model...

Enhanced BWA Performance:
MAE: 953433.6439
RMSE: 1271017.5747
MAPE: 9.79%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 33
   • Highly important features (top 5%): 12

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0020, rank=1
   2. Feature_1_t0: importance=0.0019, rank=2
   3. Feature_1_t2: importance=0.0012, rank=3
   4. Feature_2_t2: importance=0.0007, rank=4
   5. Feature_11_t0: importance=0.0006, rank=5

📊 BWA Results:
  Baseline MAPE: 8.86%
  Enhanced MAPE: 9.79%
  MAPE Improvement: -0.93% (-10.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 74/464: BXMT
============================================================
📊 Loading data for BXMT...
📊 Loading data for BXMT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for BXMT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for BXMT...

==================================================
Training Baseline BXMT (SVM)
==================================================
Training SVM model...

Baseline BXMT Performance:
MAE: 1632856.2397
RMSE: 2088279.8306
MAPE: 8.70%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 159
   • Highly important features (top 5%): 103

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_91_t0: importance=0.0003, rank=1
   2. Feature_67_t1: importance=0.0002, rank=2
   3. Feature_94_t3: importance=0.0002, rank=3
   4. Feature_65_t3: importance=0.0002, rank=4
   5. Feature_65_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for BXMT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for BXMT...

==================================================
Training Enhanced BXMT (SVM)
==================================================
Training SVM model...

Enhanced BXMT Performance:
MAE: 1473151.2332
RMSE: 1825049.6194
MAPE: 8.23%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 44
   • Highly important features (top 5%): 27

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0023, rank=1
   2. Feature_2_t3: importance=0.0009, rank=2
   3. Feature_2_t1: importance=0.0007, rank=3
   4. Feature_0_t3: importance=0.0007, rank=4
   5. Feature_1_t1: importance=0.0006, rank=5

📊 BXMT Results:
  Baseline MAPE: 8.70%
  Enhanced MAPE: 8.23%
  MAPE Improvement: +0.46% (+5.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 75/464: CABO
============================================================
📊 Loading data for CABO...
📊 Loading data for CABO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing CABO: 'CABO'

============================================================
TESTING TICKER 76/464: CAKE
============================================================
📊 Loading data for CAKE...
📊 Loading data for CAKE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CAKE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CAKE...

==================================================
Training Baseline CAKE (SVM)
==================================================
Training SVM model...

Baseline CAKE Performance:
MAE: 376774.3232
RMSE: 502590.6484
MAPE: 5.27%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 124
   • Highly important features (top 5%): 71

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_84_t2: importance=0.0002, rank=1
   2. Feature_65_t3: importance=0.0002, rank=2
   3. Feature_63_t1: importance=0.0001, rank=3
   4. Feature_72_t0: importance=0.0001, rank=4
   5. Feature_63_t0: importance=0.0001, rank=5

🔧 Applying universal feature engineering for CAKE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CAKE...

==================================================
Training Enhanced CAKE (SVM)
==================================================
Training SVM model...

Enhanced CAKE Performance:
MAE: 442518.8490
RMSE: 554200.7262
MAPE: 6.45%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 35
   • Highly important features (top 5%): 25

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0004, rank=1
   2. Feature_1_t2: importance=0.0003, rank=2
   3. Feature_2_t3: importance=0.0003, rank=3
   4. Feature_0_t3: importance=0.0003, rank=4
   5. Feature_1_t3: importance=0.0002, rank=5

📊 CAKE Results:
  Baseline MAPE: 5.27%
  Enhanced MAPE: 6.45%
  MAPE Improvement: -1.18% (-22.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 77/464: CAL
============================================================
📊 Loading data for CAL...
📊 Loading data for CAL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CAL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CAL...

==================================================
Training Baseline CAL (SVM)
==================================================
Training SVM model...

Baseline CAL Performance:
MAE: 320680.3261
RMSE: 407010.0089
MAPE: 8.22%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 222
   • Highly important features (top 5%): 78

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_69_t3: importance=0.0003, rank=1
   2. Feature_66_t0: importance=0.0003, rank=2
   3. Feature_70_t3: importance=0.0002, rank=3
   4. Feature_65_t1: importance=0.0002, rank=4
   5. Feature_68_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for CAL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CAL...

==================================================
Training Enhanced CAL (SVM)
==================================================
Training SVM model...

Enhanced CAL Performance:
MAE: 347983.3120
RMSE: 422254.2635
MAPE: 8.79%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 47
   • Highly important features (top 5%): 27

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0011, rank=1
   2. Feature_1_t3: importance=0.0009, rank=2
   3. Feature_2_t0: importance=0.0007, rank=3
   4. Feature_2_t2: importance=0.0005, rank=4
   5. Feature_0_t3: importance=0.0005, rank=5

📊 CAL Results:
  Baseline MAPE: 8.22%
  Enhanced MAPE: 8.79%
  MAPE Improvement: -0.57% (-6.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 78/464: CALM
============================================================
📊 Loading data for CALM...
📊 Loading data for CALM from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing CALM: 'CALM'

============================================================
TESTING TICKER 79/464: CALX
============================================================
📊 Loading data for CALX...
📊 Loading data for CALX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CALX...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CALX...

==================================================
Training Baseline CALX (SVM)
==================================================
Training SVM model...

Baseline CALX Performance:
MAE: 302724.5220
RMSE: 374962.8621
MAPE: 11.43%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 176
   • Highly important features (top 5%): 65

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0005, rank=1
   2. Feature_2_t0: importance=0.0004, rank=2
   3. Feature_76_t0: importance=0.0004, rank=3
   4. Feature_78_t1: importance=0.0003, rank=4
   5. Feature_94_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for CALX...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CALX...

==================================================
Training Enhanced CALX (SVM)
==================================================
Training SVM model...

Enhanced CALX Performance:
MAE: 244187.9005
RMSE: 305949.5789
MAPE: 9.15%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 35
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0040, rank=1
   2. Feature_2_t2: importance=0.0029, rank=2
   3. Feature_1_t3: importance=0.0016, rank=3
   4. Feature_0_t0: importance=0.0015, rank=4
   5. Feature_2_t0: importance=0.0015, rank=5

📊 CALX Results:
  Baseline MAPE: 11.43%
  Enhanced MAPE: 9.15%
  MAPE Improvement: +2.29% (+20.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 80/464: CARG
============================================================
📊 Loading data for CARG...
📊 Loading data for CARG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing CARG: 'CARG'

============================================================
TESTING TICKER 81/464: CARS
============================================================
📊 Loading data for CARS...
📊 Loading data for CARS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing CARS: 'CARS'

============================================================
TESTING TICKER 82/464: CASH
============================================================
📊 Loading data for CASH...
📊 Loading data for CASH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing CASH: 'CASH'

============================================================
TESTING TICKER 83/464: CATY
============================================================
📊 Loading data for CATY...
📊 Loading data for CATY from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CATY...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CATY...

==================================================
Training Baseline CATY (SVM)
==================================================
Training SVM model...

Baseline CATY Performance:
MAE: 197429.1019
RMSE: 234300.7265
MAPE: 10.00%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 244
   • Highly important features (top 5%): 142

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0007, rank=1
   2. Feature_91_t2: importance=0.0003, rank=2
   3. Feature_68_t3: importance=0.0003, rank=3
   4. Feature_85_t3: importance=0.0003, rank=4
   5. Feature_63_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for CATY...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CATY...

==================================================
Training Enhanced CATY (SVM)
==================================================
Training SVM model...

Enhanced CATY Performance:
MAE: 170036.8133
RMSE: 209180.5025
MAPE: 8.46%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 44
   • Highly important features (top 5%): 32

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0044, rank=1
   2. Feature_0_t3: importance=0.0013, rank=2
   3. Feature_2_t0: importance=0.0009, rank=3
   4. Feature_1_t1: importance=0.0008, rank=4
   5. Feature_14_t1: importance=0.0006, rank=5

📊 CATY Results:
  Baseline MAPE: 10.00%
  Enhanced MAPE: 8.46%
  MAPE Improvement: +1.54% (+15.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 84/464: CBRL
============================================================
📊 Loading data for CBRL...
📊 Loading data for CBRL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CBRL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CBRL...

==================================================
Training Baseline CBRL (SVM)
==================================================
Training SVM model...

Baseline CBRL Performance:
MAE: 361681.1430
RMSE: 469875.0912
MAPE: 11.60%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 97
   • Highly important features (top 5%): 27

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t3: importance=0.0002, rank=1
   2. Feature_76_t1: importance=0.0002, rank=2
   3. Feature_0_t0: importance=0.0002, rank=3
   4. Feature_65_t3: importance=0.0001, rank=4
   5. Feature_70_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for CBRL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CBRL...

==================================================
Training Enhanced CBRL (SVM)
==================================================
Training SVM model...

Enhanced CBRL Performance:
MAE: 382304.0569
RMSE: 497549.8499
MAPE: 12.03%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 34
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0009, rank=1
   2. Feature_0_t0: importance=0.0007, rank=2
   3. Feature_2_t0: importance=0.0007, rank=3
   4. Feature_1_t3: importance=0.0006, rank=4
   5. Feature_1_t1: importance=0.0005, rank=5

📊 CBRL Results:
  Baseline MAPE: 11.60%
  Enhanced MAPE: 12.03%
  MAPE Improvement: -0.42% (-3.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 85/464: CBU
============================================================
📊 Loading data for CBU...
📊 Loading data for CBU from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CBU...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CBU...

==================================================
Training Baseline CBU (SVM)
==================================================
Training SVM model...

Baseline CBU Performance:
MAE: 88551.8768
RMSE: 108458.9963
MAPE: 5.84%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 230
   • Highly important features (top 5%): 110

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_71_t0: importance=0.0001, rank=1
   2. Feature_79_t2: importance=0.0001, rank=2
   3. Feature_64_t0: importance=0.0001, rank=3
   4. Feature_67_t3: importance=0.0001, rank=4
   5. Feature_72_t0: importance=0.0001, rank=5

🔧 Applying universal feature engineering for CBU...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CBU...

==================================================
Training Enhanced CBU (SVM)
==================================================
Training SVM model...

Enhanced CBU Performance:
MAE: 104926.5746
RMSE: 123816.7202
MAPE: 6.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 33
   • Highly important features (top 5%): 22

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0004, rank=1
   2. Feature_1_t2: importance=0.0004, rank=2
   3. Feature_1_t3: importance=0.0003, rank=3
   4. Feature_11_t1: importance=0.0003, rank=4
   5. Feature_12_t3: importance=0.0003, rank=5

📊 CBU Results:
  Baseline MAPE: 5.84%
  Enhanced MAPE: 6.94%
  MAPE Improvement: -1.10% (-18.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 86/464: CC
============================================================
📊 Loading data for CC...
📊 Loading data for CC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CC...

==================================================
Training Baseline CC (SVM)
==================================================
Training SVM model...

Baseline CC Performance:
MAE: 590013.9648
RMSE: 957455.3626
MAPE: 6.23%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 252
   • Highly important features (top 5%): 101

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_69_t3: importance=0.0003, rank=1
   2. Feature_70_t3: importance=0.0002, rank=2
   3. Feature_66_t0: importance=0.0001, rank=3
   4. Feature_64_t3: importance=0.0001, rank=4
   5. Feature_67_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for CC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CC...

==================================================
Training Enhanced CC (SVM)
==================================================
Training SVM model...

Enhanced CC Performance:
MAE: 602406.5980
RMSE: 915030.5503
MAPE: 6.82%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 39

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0007, rank=1
   2. Feature_1_t2: importance=0.0007, rank=2
   3. Feature_1_t3: importance=0.0006, rank=3
   4. Feature_11_t2: importance=0.0003, rank=4
   5. Feature_0_t0: importance=0.0003, rank=5

📊 CC Results:
  Baseline MAPE: 6.23%
  Enhanced MAPE: 6.82%
  MAPE Improvement: -0.59% (-9.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 87/464: CCOI
============================================================
📊 Loading data for CCOI...
📊 Loading data for CCOI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CCOI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CCOI...

==================================================
Training Baseline CCOI (SVM)
==================================================
Training SVM model...

Baseline CCOI Performance:
MAE: 322520.5422
RMSE: 415123.1182
MAPE: 8.71%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 292
   • Highly important features (top 5%): 141

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t3: importance=0.0002, rank=1
   2. Feature_63_t0: importance=0.0002, rank=2
   3. Feature_90_t0: importance=0.0002, rank=3
   4. Feature_92_t0: importance=0.0002, rank=4
   5. Feature_87_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for CCOI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CCOI...

==================================================
Training Enhanced CCOI (SVM)
==================================================
Training SVM model...

Enhanced CCOI Performance:
MAE: 340772.4769
RMSE: 459691.1854
MAPE: 9.01%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 53
   • Highly important features (top 5%): 45

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_5_t3: importance=0.0008, rank=1
   2. Feature_1_t0: importance=0.0007, rank=2
   3. Feature_3_t3: importance=0.0005, rank=3
   4. Feature_13_t3: importance=0.0005, rank=4
   5. Feature_14_t2: importance=0.0005, rank=5

📊 CCOI Results:
  Baseline MAPE: 8.71%
  Enhanced MAPE: 9.01%
  MAPE Improvement: -0.29% (-3.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 88/464: CCS
============================================================
📊 Loading data for CCS...
📊 Loading data for CCS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CCS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CCS...

==================================================
Training Baseline CCS (SVM)
==================================================
Training SVM model...

Baseline CCS Performance:
MAE: 151382.9995
RMSE: 211381.2043
MAPE: 9.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 159
   • Highly important features (top 5%): 73

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_67_t3: importance=0.0002, rank=1
   2. Feature_80_t3: importance=0.0001, rank=2
   3. Feature_0_t3: importance=0.0001, rank=3
   4. Feature_63_t2: importance=0.0001, rank=4
   5. Feature_2_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for CCS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CCS...

==================================================
Training Enhanced CCS (SVM)
==================================================
Training SVM model...

Enhanced CCS Performance:
MAE: 165823.3885
RMSE: 222402.3753
MAPE: 10.69%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 24
   • Highly important features (top 5%): 16

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0007, rank=1
   2. Feature_0_t3: importance=0.0006, rank=2
   3. Feature_0_t1: importance=0.0004, rank=3
   4. Feature_1_t2: importance=0.0004, rank=4
   5. Feature_0_t0: importance=0.0004, rank=5

📊 CCS Results:
  Baseline MAPE: 9.94%
  Enhanced MAPE: 10.69%
  MAPE Improvement: -0.75% (-7.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 89/464: CE
============================================================
📊 Loading data for CE...
📊 Loading data for CE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CE...

==================================================
Training Baseline CE (SVM)
==================================================
Training SVM model...

Baseline CE Performance:
MAE: 487260.0178
RMSE: 685188.8250
MAPE: 7.68%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 274
   • Highly important features (top 5%): 137

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t1: importance=0.0011, rank=1
   2. Feature_80_t3: importance=0.0007, rank=2
   3. Feature_70_t0: importance=0.0006, rank=3
   4. Feature_82_t1: importance=0.0005, rank=4
   5. Feature_93_t3: importance=0.0005, rank=5

🔧 Applying universal feature engineering for CE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CE...

==================================================
Training Enhanced CE (SVM)
==================================================
Training SVM model...

Enhanced CE Performance:
MAE: 708185.2149
RMSE: 906064.1560
MAPE: 11.84%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 53
   • Highly important features (top 5%): 38

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0035, rank=1
   2. Feature_0_t3: importance=0.0026, rank=2
   3. Feature_1_t2: importance=0.0024, rank=3
   4. Feature_2_t1: importance=0.0023, rank=4
   5. Feature_1_t1: importance=0.0020, rank=5

📊 CE Results:
  Baseline MAPE: 7.68%
  Enhanced MAPE: 11.84%
  MAPE Improvement: -4.16% (-54.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 90/464: CENT
============================================================
📊 Loading data for CENT...
📊 Loading data for CENT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CENT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CENT...

==================================================
Training Baseline CENT (SVM)
==================================================
Training SVM model...

Baseline CENT Performance:
MAE: 110949.6749
RMSE: 180231.4703
MAPE: 8.01%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 255
   • Highly important features (top 5%): 147

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0006, rank=1
   2. Feature_2_t3: importance=0.0005, rank=2
   3. Feature_63_t1: importance=0.0005, rank=3
   4. Feature_74_t0: importance=0.0003, rank=4
   5. Feature_67_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for CENT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CENT...

==================================================
Training Enhanced CENT (SVM)
==================================================
Training SVM model...

Enhanced CENT Performance:
MAE: 107687.0873
RMSE: 183442.0440
MAPE: 7.85%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 46
   • Highly important features (top 5%): 24

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0035, rank=1
   2. Feature_1_t1: importance=0.0031, rank=2
   3. Feature_2_t3: importance=0.0023, rank=3
   4. Feature_2_t0: importance=0.0016, rank=4
   5. Feature_0_t3: importance=0.0014, rank=5

📊 CENT Results:
  Baseline MAPE: 8.01%
  Enhanced MAPE: 7.85%
  MAPE Improvement: +0.17% (+2.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 91/464: CENTA
============================================================
📊 Loading data for CENTA...
📊 Loading data for CENTA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CENTA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CENTA...

==================================================
Training Baseline CENTA (SVM)
==================================================
Training SVM model...

Baseline CENTA Performance:
MAE: 94342.7120
RMSE: 124775.6905
MAPE: 11.54%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 174
   • Highly important features (top 5%): 107

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_95_t0: importance=0.0006, rank=1
   2. Feature_96_t0: importance=0.0005, rank=2
   3. Feature_91_t2: importance=0.0005, rank=3
   4. Feature_63_t0: importance=0.0004, rank=4
   5. Feature_2_t3: importance=0.0004, rank=5

🔧 Applying universal feature engineering for CENTA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CENTA...

==================================================
Training Enhanced CENTA (SVM)
==================================================
Training SVM model...

Enhanced CENTA Performance:
MAE: 100838.0199
RMSE: 130864.4857
MAPE: 12.00%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 52
   • Highly important features (top 5%): 25

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0021, rank=1
   2. Feature_0_t0: importance=0.0017, rank=2
   3. Feature_1_t2: importance=0.0014, rank=3
   4. Feature_1_t1: importance=0.0012, rank=4
   5. Feature_1_t0: importance=0.0012, rank=5

📊 CENTA Results:
  Baseline MAPE: 11.54%
  Enhanced MAPE: 12.00%
  MAPE Improvement: -0.46% (-4.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 92/464: CENX
============================================================
📊 Loading data for CENX...
📊 Loading data for CENX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CENX...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CENX...

==================================================
Training Baseline CENX (SVM)
==================================================
Training SVM model...

Baseline CENX Performance:
MAE: 526444.8434
RMSE: 672733.1169
MAPE: 9.27%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 269
   • Highly important features (top 5%): 132

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_91_t0: importance=0.0003, rank=1
   2. Feature_92_t0: importance=0.0003, rank=2
   3. Feature_81_t1: importance=0.0003, rank=3
   4. Feature_87_t0: importance=0.0002, rank=4
   5. Feature_79_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for CENX...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CENX...

==================================================
Training Enhanced CENX (SVM)
==================================================
Training SVM model...

Enhanced CENX Performance:
MAE: 455558.1120
RMSE: 640328.8592
MAPE: 8.16%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 44
   • Highly important features (top 5%): 18

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0018, rank=1
   2. Feature_1_t2: importance=0.0016, rank=2
   3. Feature_2_t0: importance=0.0015, rank=3
   4. Feature_0_t3: importance=0.0014, rank=4
   5. Feature_2_t3: importance=0.0014, rank=5

📊 CENX Results:
  Baseline MAPE: 9.27%
  Enhanced MAPE: 8.16%
  MAPE Improvement: +1.11% (+12.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 93/464: CEVA
============================================================
📊 Loading data for CEVA...
📊 Loading data for CEVA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CEVA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CEVA...

==================================================
Training Baseline CEVA (SVM)
==================================================
Training SVM model...

Baseline CEVA Performance:
MAE: 104121.1299
RMSE: 158977.8143
MAPE: 9.62%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 240
   • Highly important features (top 5%): 116

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_96_t3: importance=0.0012, rank=1
   2. Feature_0_t3: importance=0.0006, rank=2
   3. Feature_78_t2: importance=0.0005, rank=3
   4. Feature_67_t3: importance=0.0005, rank=4
   5. Feature_65_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for CEVA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CEVA...

==================================================
Training Enhanced CEVA (SVM)
==================================================
Training SVM model...

Enhanced CEVA Performance:
MAE: 109331.5349
RMSE: 160849.3507
MAPE: 9.97%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 45
   • Highly important features (top 5%): 21

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0026, rank=1
   2. Feature_1_t0: importance=0.0020, rank=2
   3. Feature_0_t2: importance=0.0016, rank=3
   4. Feature_0_t0: importance=0.0016, rank=4
   5. Feature_0_t3: importance=0.0014, rank=5

📊 CEVA Results:
  Baseline MAPE: 9.62%
  Enhanced MAPE: 9.97%
  MAPE Improvement: -0.34% (-3.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 94/464: CFFN
============================================================
📊 Loading data for CFFN...
📊 Loading data for CFFN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CFFN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CFFN...

==================================================
Training Baseline CFFN (SVM)
==================================================
Training SVM model...

Baseline CFFN Performance:
MAE: 262374.9506
RMSE: 335003.6031
MAPE: 5.87%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 110
   • Highly important features (top 5%): 58

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t2: importance=0.0010, rank=1
   2. Feature_0_t3: importance=0.0006, rank=2
   3. Feature_63_t1: importance=0.0005, rank=3
   4. Feature_67_t3: importance=0.0005, rank=4
   5. Feature_0_t1: importance=0.0004, rank=5

🔧 Applying universal feature engineering for CFFN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CFFN...

==================================================
Training Enhanced CFFN (SVM)
==================================================
Training SVM model...

Enhanced CFFN Performance:
MAE: 340759.9765
RMSE: 395448.2498
MAPE: 7.99%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 31
   • Highly important features (top 5%): 14

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0018, rank=1
   2. Feature_2_t1: importance=0.0016, rank=2
   3. Feature_0_t3: importance=0.0012, rank=3
   4. Feature_0_t1: importance=0.0006, rank=4
   5. Feature_0_t0: importance=0.0006, rank=5

📊 CFFN Results:
  Baseline MAPE: 5.87%
  Enhanced MAPE: 7.99%
  MAPE Improvement: -2.12% (-36.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 95/464: CHCO
============================================================
📊 Loading data for CHCO...
📊 Loading data for CHCO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CHCO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CHCO...

==================================================
Training Baseline CHCO (SVM)
==================================================
Training SVM model...

Baseline CHCO Performance:
MAE: 29202.0376
RMSE: 41073.4198
MAPE: 3.09%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 132
   • Highly important features (top 5%): 63

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_72_t2: importance=0.0002, rank=1
   2. Feature_82_t2: importance=0.0001, rank=2
   3. Feature_83_t2: importance=0.0001, rank=3
   4. Feature_79_t0: importance=0.0001, rank=4
   5. Feature_80_t2: importance=0.0000, rank=5

🔧 Applying universal feature engineering for CHCO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CHCO...

==================================================
Training Enhanced CHCO (SVM)
==================================================
Training SVM model...

Enhanced CHCO Performance:
MAE: 27361.0296
RMSE: 38047.6797
MAPE: 2.86%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 22
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0002, rank=1
   2. Feature_1_t2: importance=0.0001, rank=2
   3. Feature_1_t1: importance=0.0001, rank=3
   4. Feature_0_t1: importance=0.0001, rank=4
   5. Feature_13_t1: importance=0.0001, rank=5

📊 CHCO Results:
  Baseline MAPE: 3.09%
  Enhanced MAPE: 2.86%
  MAPE Improvement: +0.23% (+7.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 96/464: CHEF
============================================================
📊 Loading data for CHEF...
📊 Loading data for CHEF from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CHEF...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CHEF...

==================================================
Training Baseline CHEF (SVM)
==================================================
Training SVM model...

Baseline CHEF Performance:
MAE: 204281.1127
RMSE: 247532.7276
MAPE: 6.45%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 233
   • Highly important features (top 5%): 155

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0001, rank=1
   2. Feature_78_t1: importance=0.0001, rank=2
   3. Feature_81_t1: importance=0.0001, rank=3
   4. Feature_67_t3: importance=0.0001, rank=4
   5. Feature_96_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for CHEF...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CHEF...

==================================================
Training Enhanced CHEF (SVM)
==================================================
Training SVM model...

Enhanced CHEF Performance:
MAE: 150058.3497
RMSE: 192551.6784
MAPE: 4.67%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 27
   • Highly important features (top 5%): 16

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0009, rank=1
   2. Feature_0_t3: importance=0.0006, rank=2
   3. Feature_1_t1: importance=0.0003, rank=3
   4. Feature_1_t3: importance=0.0002, rank=4
   5. Feature_13_t3: importance=0.0001, rank=5

📊 CHEF Results:
  Baseline MAPE: 6.45%
  Enhanced MAPE: 4.67%
  MAPE Improvement: +1.78% (+27.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 97/464: CLB
============================================================
📊 Loading data for CLB...
📊 Loading data for CLB from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing CLB: 'CLB'

============================================================
TESTING TICKER 98/464: CNK
============================================================
📊 Loading data for CNK...
📊 Loading data for CNK from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CNK...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CNK...

==================================================
Training Baseline CNK (SVM)
==================================================
Training SVM model...

Baseline CNK Performance:
MAE: 1409498.8871
RMSE: 1767695.6463
MAPE: 5.85%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 175
   • Highly important features (top 5%): 121

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t1: importance=0.0004, rank=1
   2. Feature_65_t3: importance=0.0003, rank=2
   3. Feature_89_t3: importance=0.0002, rank=3
   4. Feature_94_t1: importance=0.0001, rank=4
   5. Feature_78_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for CNK...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CNK...

==================================================
Training Enhanced CNK (SVM)
==================================================
Training SVM model...

Enhanced CNK Performance:
MAE: 1915960.5401
RMSE: 2296485.4799
MAPE: 7.73%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 40
   • Highly important features (top 5%): 32

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0012, rank=1
   2. Feature_2_t1: importance=0.0010, rank=2
   3. Feature_8_t3: importance=0.0007, rank=3
   4. Feature_2_t0: importance=0.0006, rank=4
   5. Feature_13_t3: importance=0.0006, rank=5

📊 CNK Results:
  Baseline MAPE: 5.85%
  Enhanced MAPE: 7.73%
  MAPE Improvement: -1.88% (-32.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 99/464: CNMD
============================================================
📊 Loading data for CNMD...
📊 Loading data for CNMD from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CNMD...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CNMD...

==================================================
Training Baseline CNMD (SVM)
==================================================
Training SVM model...

Baseline CNMD Performance:
MAE: 230389.1937
RMSE: 291576.6250
MAPE: 7.57%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 170
   • Highly important features (top 5%): 107

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_81_t1: importance=0.0005, rank=1
   2. Feature_81_t2: importance=0.0004, rank=2
   3. Feature_94_t1: importance=0.0003, rank=3
   4. Feature_2_t2: importance=0.0003, rank=4
   5. Feature_94_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for CNMD...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CNMD...

==================================================
Training Enhanced CNMD (SVM)
==================================================
Training SVM model...

Enhanced CNMD Performance:
MAE: 238368.0734
RMSE: 305352.4172
MAPE: 7.67%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 22
   • Highly important features (top 5%): 16

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0020, rank=1
   2. Feature_2_t2: importance=0.0014, rank=2
   3. Feature_1_t1: importance=0.0011, rank=3
   4. Feature_1_t0: importance=0.0007, rank=4
   5. Feature_1_t3: importance=0.0006, rank=5

📊 CNMD Results:
  Baseline MAPE: 7.57%
  Enhanced MAPE: 7.67%
  MAPE Improvement: -0.10% (-1.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 100/464: CNS
============================================================
📊 Loading data for CNS...
📊 Loading data for CNS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CNS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CNS...

==================================================
Training Baseline CNS (SVM)
==================================================
Training SVM model...

Baseline CNS Performance:
MAE: 177907.2439
RMSE: 238265.1411
MAPE: 9.33%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 153
   • Highly important features (top 5%): 71

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_74_t1: importance=0.0005, rank=1
   2. Feature_76_t0: importance=0.0003, rank=2
   3. Feature_72_t3: importance=0.0003, rank=3
   4. Feature_71_t1: importance=0.0002, rank=4
   5. Feature_78_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for CNS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CNS...

==================================================
Training Enhanced CNS (SVM)
==================================================
Training SVM model...

Enhanced CNS Performance:
MAE: 138761.6229
RMSE: 222934.0925
MAPE: 7.39%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 27
   • Highly important features (top 5%): 13

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0015, rank=1
   2. Feature_1_t3: importance=0.0009, rank=2
   3. Feature_10_t1: importance=0.0008, rank=3
   4. Feature_5_t1: importance=0.0008, rank=4
   5. Feature_1_t2: importance=0.0008, rank=5

📊 CNS Results:
  Baseline MAPE: 9.33%
  Enhanced MAPE: 7.39%
  MAPE Improvement: +1.94% (+20.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 101/464: CNXN
============================================================
📊 Loading data for CNXN...
📊 Loading data for CNXN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CNXN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CNXN...

==================================================
Training Baseline CNXN (SVM)
==================================================
Training SVM model...

Baseline CNXN Performance:
MAE: 35800.9210
RMSE: 50606.9554
MAPE: 13.66%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 125
   • Highly important features (top 5%): 69

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_96_t0: importance=0.0007, rank=1
   2. Feature_75_t1: importance=0.0004, rank=2
   3. Feature_67_t3: importance=0.0004, rank=3
   4. Feature_73_t1: importance=0.0004, rank=4
   5. Feature_95_t0: importance=0.0003, rank=5

🔧 Applying universal feature engineering for CNXN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CNXN...

==================================================
Training Enhanced CNXN (SVM)
==================================================
Training SVM model...

Enhanced CNXN Performance:
MAE: 36103.4277
RMSE: 50920.8410
MAPE: 13.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 39

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0019, rank=1
   2. Feature_1_t3: importance=0.0013, rank=2
   3. Feature_1_t2: importance=0.0008, rank=3
   4. Feature_2_t0: importance=0.0008, rank=4
   5. Feature_0_t2: importance=0.0007, rank=5

📊 CNXN Results:
  Baseline MAPE: 13.66%
  Enhanced MAPE: 13.74%
  MAPE Improvement: -0.08% (-0.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 102/464: COHU
============================================================
📊 Loading data for COHU...
📊 Loading data for COHU from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for COHU...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for COHU...

==================================================
Training Baseline COHU (SVM)
==================================================
Training SVM model...

Baseline COHU Performance:
MAE: 145135.4029
RMSE: 188832.8142
MAPE: 10.99%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 331
   • Highly important features (top 5%): 240

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t3: importance=0.0004, rank=1
   2. Feature_0_t3: importance=0.0002, rank=2
   3. Feature_65_t2: importance=0.0002, rank=3
   4. Feature_73_t2: importance=0.0002, rank=4
   5. Feature_69_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for COHU...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for COHU...

==================================================
Training Enhanced COHU (SVM)
==================================================
Training SVM model...

Enhanced COHU Performance:
MAE: 135070.0640
RMSE: 183889.0768
MAPE: 10.22%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 52
   • Highly important features (top 5%): 37

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0013, rank=1
   2. Feature_1_t1: importance=0.0013, rank=2
   3. Feature_2_t1: importance=0.0013, rank=3
   4. Feature_1_t0: importance=0.0010, rank=4
   5. Feature_1_t2: importance=0.0007, rank=5

📊 COHU Results:
  Baseline MAPE: 10.99%
  Enhanced MAPE: 10.22%
  MAPE Improvement: +0.77% (+7.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 103/464: COLL
============================================================
📊 Loading data for COLL...
📊 Loading data for COLL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for COLL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for COLL...

==================================================
Training Baseline COLL (SVM)
==================================================
Training SVM model...

Baseline COLL Performance:
MAE: 223788.6530
RMSE: 293996.6031
MAPE: 3.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 96
   • Highly important features (top 5%): 35

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0003, rank=1
   2. Feature_96_t3: importance=0.0003, rank=2
   3. Feature_74_t1: importance=0.0002, rank=3
   4. Feature_0_t3: importance=0.0002, rank=4
   5. Feature_0_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for COLL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for COLL...

==================================================
Training Enhanced COLL (SVM)
==================================================
Training SVM model...

Enhanced COLL Performance:
MAE: 403878.0831
RMSE: 488630.6360
MAPE: 7.27%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 27
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0017, rank=1
   2. Feature_0_t0: importance=0.0012, rank=2
   3. Feature_2_t0: importance=0.0007, rank=3
   4. Feature_1_t3: importance=0.0006, rank=4
   5. Feature_1_t0: importance=0.0006, rank=5

📊 COLL Results:
  Baseline MAPE: 3.94%
  Enhanced MAPE: 7.27%
  MAPE Improvement: -3.33% (-84.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 104/464: CORT
============================================================
📊 Loading data for CORT...
📊 Loading data for CORT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CORT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CORT...

==================================================
Training Baseline CORT (SVM)
==================================================
Training SVM model...

Baseline CORT Performance:
MAE: 864503.5084
RMSE: 1230965.4833
MAPE: 5.07%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 67
   • Highly important features (top 5%): 42

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_93_t0: importance=0.0003, rank=1
   2. Feature_65_t0: importance=0.0003, rank=2
   3. Feature_81_t2: importance=0.0003, rank=3
   4. Feature_71_t1: importance=0.0002, rank=4
   5. Feature_63_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for CORT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CORT...

==================================================
Training Enhanced CORT (SVM)
==================================================
Training SVM model...

Enhanced CORT Performance:
MAE: 899126.2361
RMSE: 1238539.2676
MAPE: 5.26%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 35
   • Highly important features (top 5%): 28

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0011, rank=1
   2. Feature_0_t0: importance=0.0004, rank=2
   3. Feature_2_t2: importance=0.0004, rank=3
   4. Feature_2_t0: importance=0.0003, rank=4
   5. Feature_14_t2: importance=0.0003, rank=5

📊 CORT Results:
  Baseline MAPE: 5.07%
  Enhanced MAPE: 5.26%
  MAPE Improvement: -0.19% (-3.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 105/464: CPF
============================================================
📊 Loading data for CPF...
📊 Loading data for CPF from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CPF...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CPF...

==================================================
Training Baseline CPF (SVM)
==================================================
Training SVM model...

Baseline CPF Performance:
MAE: 98740.5738
RMSE: 129460.7523
MAPE: 17.72%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 323
   • Highly important features (top 5%): 161

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_96_t0: importance=0.0006, rank=1
   2. Feature_85_t0: importance=0.0006, rank=2
   3. Feature_70_t1: importance=0.0005, rank=3
   4. Feature_63_t3: importance=0.0004, rank=4
   5. Feature_85_t3: importance=0.0004, rank=5

🔧 Applying universal feature engineering for CPF...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CPF...

==================================================
Training Enhanced CPF (SVM)
==================================================
Training SVM model...

Enhanced CPF Performance:
MAE: 96712.7252
RMSE: 125003.6620
MAPE: 17.41%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 29

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0074, rank=1
   2. Feature_0_t1: importance=0.0037, rank=2
   3. Feature_1_t3: importance=0.0025, rank=3
   4. Feature_1_t0: importance=0.0025, rank=4
   5. Feature_2_t1: importance=0.0022, rank=5

📊 CPF Results:
  Baseline MAPE: 17.72%
  Enhanced MAPE: 17.41%
  MAPE Improvement: +0.31% (+1.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 106/464: CPK
============================================================
📊 Loading data for CPK...
📊 Loading data for CPK from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CPK...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CPK...

==================================================
Training Baseline CPK (SVM)
==================================================
Training SVM model...

Baseline CPK Performance:
MAE: 50248.7246
RMSE: 70728.6356
MAPE: 12.39%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 238
   • Highly important features (top 5%): 120

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0026, rank=1
   2. Feature_65_t3: importance=0.0024, rank=2
   3. Feature_64_t3: importance=0.0012, rank=3
   4. Feature_65_t0: importance=0.0011, rank=4
   5. Feature_87_t1: importance=0.0009, rank=5

🔧 Applying universal feature engineering for CPK...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CPK...

==================================================
Training Enhanced CPK (SVM)
==================================================
Training SVM model...

Enhanced CPK Performance:
MAE: 64649.5598
RMSE: 82041.3729
MAPE: 14.84%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 49
   • Highly important features (top 5%): 35

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0150, rank=1
   2. Feature_2_t3: importance=0.0077, rank=2
   3. Feature_0_t1: importance=0.0026, rank=3
   4. Feature_1_t0: importance=0.0025, rank=4
   5. Feature_1_t3: importance=0.0025, rank=5

📊 CPK Results:
  Baseline MAPE: 12.39%
  Enhanced MAPE: 14.84%
  MAPE Improvement: -2.45% (-19.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 107/464: CPRX
============================================================
📊 Loading data for CPRX...
📊 Loading data for CPRX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing CPRX: 'CPRX'

============================================================
TESTING TICKER 108/464: CRI
============================================================
📊 Loading data for CRI...
📊 Loading data for CRI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CRI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CRI...

==================================================
Training Baseline CRI (SVM)
==================================================
Training SVM model...

Baseline CRI Performance:
MAE: 479042.9307
RMSE: 575526.5154
MAPE: 10.85%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 301
   • Highly important features (top 5%): 184

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t1: importance=0.0004, rank=1
   2. Feature_87_t2: importance=0.0002, rank=2
   3. Feature_86_t3: importance=0.0002, rank=3
   4. Feature_94_t1: importance=0.0002, rank=4
   5. Feature_69_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for CRI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CRI...

==================================================
Training Enhanced CRI (SVM)
==================================================
Training SVM model...

Enhanced CRI Performance:
MAE: 482680.9475
RMSE: 571242.5588
MAPE: 10.59%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 56
   • Highly important features (top 5%): 44

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0018, rank=1
   2. Feature_0_t3: importance=0.0015, rank=2
   3. Feature_1_t2: importance=0.0013, rank=3
   4. Feature_10_t3: importance=0.0012, rank=4
   5. Feature_12_t3: importance=0.0011, rank=5

📊 CRI Results:
  Baseline MAPE: 10.85%
  Enhanced MAPE: 10.59%
  MAPE Improvement: +0.27% (+2.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 109/464: CRK
============================================================
📊 Loading data for CRK...
📊 Loading data for CRK from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CRK...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CRK...

==================================================
Training Baseline CRK (SVM)
==================================================
Training SVM model...

Baseline CRK Performance:
MAE: 1793518.5677
RMSE: 2219731.4360
MAPE: 7.30%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 181
   • Highly important features (top 5%): 85

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_83_t2: importance=0.0006, rank=1
   2. Feature_79_t0: importance=0.0004, rank=2
   3. Feature_73_t2: importance=0.0004, rank=3
   4. Feature_78_t0: importance=0.0004, rank=4
   5. Feature_72_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for CRK...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CRK...

==================================================
Training Enhanced CRK (SVM)
==================================================
Training SVM model...

Enhanced CRK Performance:
MAE: 2095581.3800
RMSE: 2945475.1414
MAPE: 8.13%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 45
   • Highly important features (top 5%): 31

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0015, rank=1
   2. Feature_2_t3: importance=0.0013, rank=2
   3. Feature_1_t3: importance=0.0012, rank=3
   4. Feature_5_t1: importance=0.0011, rank=4
   5. Feature_0_t3: importance=0.0010, rank=5

📊 CRK Results:
  Baseline MAPE: 7.30%
  Enhanced MAPE: 8.13%
  MAPE Improvement: -0.82% (-11.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 110/464: CRVL
============================================================
📊 Loading data for CRVL...
📊 Loading data for CRVL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CRVL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CRVL...

==================================================
Training Baseline CRVL (SVM)
==================================================
Training SVM model...

Baseline CRVL Performance:
MAE: 56999.3255
RMSE: 130729.4132
MAPE: 8.13%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 223
   • Highly important features (top 5%): 131

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t2: importance=0.0008, rank=1
   2. Feature_90_t3: importance=0.0005, rank=2
   3. Feature_65_t3: importance=0.0005, rank=3
   4. Feature_74_t3: importance=0.0005, rank=4
   5. Feature_89_t3: importance=0.0005, rank=5

🔧 Applying universal feature engineering for CRVL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CRVL...

==================================================
Training Enhanced CRVL (SVM)
==================================================
Training SVM model...

Enhanced CRVL Performance:
MAE: 65275.6756
RMSE: 134184.5947
MAPE: 9.65%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 31

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0062, rank=1
   2. Feature_2_t3: importance=0.0017, rank=2
   3. Feature_10_t3: importance=0.0010, rank=3
   4. Feature_1_t0: importance=0.0010, rank=4
   5. Feature_6_t3: importance=0.0009, rank=5

📊 CRVL Results:
  Baseline MAPE: 8.13%
  Enhanced MAPE: 9.65%
  MAPE Improvement: -1.52% (-18.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 111/464: CSGS
============================================================
📊 Loading data for CSGS...
📊 Loading data for CSGS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CSGS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CSGS...

==================================================
Training Baseline CSGS (SVM)
==================================================
Training SVM model...

Baseline CSGS Performance:
MAE: 198780.2638
RMSE: 295178.7267
MAPE: 8.48%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 166
   • Highly important features (top 5%): 92

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_90_t2: importance=0.0022, rank=1
   2. Feature_86_t2: importance=0.0015, rank=2
   3. Feature_85_t2: importance=0.0014, rank=3
   4. Feature_89_t2: importance=0.0009, rank=4
   5. Feature_88_t2: importance=0.0008, rank=5

🔧 Applying universal feature engineering for CSGS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CSGS...

==================================================
Training Enhanced CSGS (SVM)
==================================================
Training SVM model...

Enhanced CSGS Performance:
MAE: 179406.8157
RMSE: 239016.0495
MAPE: 7.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 45
   • Highly important features (top 5%): 26

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_7_t2: importance=0.0013, rank=1
   2. Feature_0_t0: importance=0.0011, rank=2
   3. Feature_11_t2: importance=0.0010, rank=3
   4. Feature_14_t3: importance=0.0009, rank=4
   5. Feature_2_t0: importance=0.0008, rank=5

📊 CSGS Results:
  Baseline MAPE: 8.48%
  Enhanced MAPE: 7.74%
  MAPE Improvement: +0.74% (+8.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 112/464: CTRE
============================================================
📊 Loading data for CTRE...
📊 Loading data for CTRE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CTRE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CTRE...

==================================================
Training Baseline CTRE (SVM)
==================================================
Training SVM model...

Baseline CTRE Performance:
MAE: 753162.7624
RMSE: 1048613.7688
MAPE: 16.76%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 272
   • Highly important features (top 5%): 110

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0005, rank=1
   2. Feature_80_t0: importance=0.0004, rank=2
   3. Feature_69_t1: importance=0.0004, rank=3
   4. Feature_69_t3: importance=0.0004, rank=4
   5. Feature_69_t0: importance=0.0004, rank=5

🔧 Applying universal feature engineering for CTRE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CTRE...

==================================================
Training Enhanced CTRE (SVM)
==================================================
Training SVM model...

Enhanced CTRE Performance:
MAE: 824506.9882
RMSE: 1198927.4533
MAPE: 17.52%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 45
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0034, rank=1
   2. Feature_2_t1: importance=0.0023, rank=2
   3. Feature_2_t2: importance=0.0020, rank=3
   4. Feature_2_t0: importance=0.0020, rank=4
   5. Feature_0_t3: importance=0.0016, rank=5

📊 CTRE Results:
  Baseline MAPE: 16.76%
  Enhanced MAPE: 17.52%
  MAPE Improvement: -0.76% (-4.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 113/464: CTS
============================================================
📊 Loading data for CTS...
📊 Loading data for CTS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CTS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CTS...

==================================================
Training Baseline CTS (SVM)
==================================================
Training SVM model...

Baseline CTS Performance:
MAE: 65683.7847
RMSE: 91844.1707
MAPE: 8.75%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 201
   • Highly important features (top 5%): 71

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0016, rank=1
   2. Feature_65_t0: importance=0.0011, rank=2
   3. Feature_2_t3: importance=0.0008, rank=3
   4. Feature_80_t3: importance=0.0007, rank=4
   5. Feature_75_t3: importance=0.0007, rank=5

🔧 Applying universal feature engineering for CTS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CTS...

==================================================
Training Enhanced CTS (SVM)
==================================================
Training SVM model...

Enhanced CTS Performance:
MAE: 75605.0025
RMSE: 103222.4444
MAPE: 10.61%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0086, rank=1
   2. Feature_2_t0: importance=0.0052, rank=2
   3. Feature_2_t3: importance=0.0045, rank=3
   4. Feature_1_t3: importance=0.0041, rank=4
   5. Feature_0_t0: importance=0.0032, rank=5

📊 CTS Results:
  Baseline MAPE: 8.75%
  Enhanced MAPE: 10.61%
  MAPE Improvement: -1.86% (-21.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 114/464: CUBI
============================================================
📊 Loading data for CUBI...
📊 Loading data for CUBI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CUBI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CUBI...

==================================================
Training Baseline CUBI (SVM)
==================================================
Training SVM model...

Baseline CUBI Performance:
MAE: 225763.4647
RMSE: 269019.3811
MAPE: 11.37%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 202
   • Highly important features (top 5%): 85

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t1: importance=0.0005, rank=1
   2. Feature_2_t1: importance=0.0004, rank=2
   3. Feature_84_t3: importance=0.0004, rank=3
   4. Feature_81_t1: importance=0.0003, rank=4
   5. Feature_0_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for CUBI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CUBI...

==================================================
Training Enhanced CUBI (SVM)
==================================================
Training SVM model...

Enhanced CUBI Performance:
MAE: 247928.5806
RMSE: 296894.1589
MAPE: 12.60%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 39

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0018, rank=1
   2. Feature_1_t0: importance=0.0012, rank=2
   3. Feature_0_t3: importance=0.0011, rank=3
   4. Feature_3_t3: importance=0.0009, rank=4
   5. Feature_6_t3: importance=0.0008, rank=5

📊 CUBI Results:
  Baseline MAPE: 11.37%
  Enhanced MAPE: 12.60%
  MAPE Improvement: -1.23% (-10.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 115/464: CVBF
============================================================
📊 Loading data for CVBF...
📊 Loading data for CVBF from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CVBF...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CVBF...

==================================================
Training Baseline CVBF (SVM)
==================================================
Training SVM model...

Baseline CVBF Performance:
MAE: 499957.8818
RMSE: 765625.6292
MAPE: 10.70%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 151
   • Highly important features (top 5%): 91

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_91_t2: importance=0.0008, rank=1
   2. Feature_88_t2: importance=0.0005, rank=2
   3. Feature_0_t2: importance=0.0004, rank=3
   4. Feature_94_t0: importance=0.0003, rank=4
   5. Feature_18_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for CVBF...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CVBF...

==================================================
Training Enhanced CVBF (SVM)
==================================================
Training SVM model...

Enhanced CVBF Performance:
MAE: 600857.0293
RMSE: 818159.6280
MAPE: 12.85%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 32
   • Highly important features (top 5%): 13

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0024, rank=1
   2. Feature_1_t0: importance=0.0017, rank=2
   3. Feature_6_t3: importance=0.0015, rank=3
   4. Feature_1_t3: importance=0.0009, rank=4
   5. Feature_2_t1: importance=0.0009, rank=5

📊 CVBF Results:
  Baseline MAPE: 10.70%
  Enhanced MAPE: 12.85%
  MAPE Improvement: -2.15% (-20.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 116/464: CVCO
============================================================
📊 Loading data for CVCO...
📊 Loading data for CVCO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CVCO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CVCO...

==================================================
Training Baseline CVCO (SVM)
==================================================
Training SVM model...

Baseline CVCO Performance:
MAE: 23361.4482
RMSE: 30512.4143
MAPE: 12.77%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 318
   • Highly important features (top 5%): 200

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_74_t1: importance=0.0003, rank=1
   2. Feature_2_t2: importance=0.0002, rank=2
   3. Feature_78_t1: importance=0.0002, rank=3
   4. Feature_77_t1: importance=0.0002, rank=4
   5. Feature_95_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for CVCO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CVCO...

==================================================
Training Enhanced CVCO (SVM)
==================================================
Training SVM model...

Enhanced CVCO Performance:
MAE: 21323.5450
RMSE: 27916.5665
MAPE: 11.68%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 46
   • Highly important features (top 5%): 29

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0033, rank=1
   2. Feature_0_t2: importance=0.0014, rank=2
   3. Feature_1_t1: importance=0.0012, rank=3
   4. Feature_0_t3: importance=0.0010, rank=4
   5. Feature_1_t2: importance=0.0007, rank=5

📊 CVCO Results:
  Baseline MAPE: 12.77%
  Enhanced MAPE: 11.68%
  MAPE Improvement: +1.09% (+8.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 117/464: CVI
============================================================
📊 Loading data for CVI...
📊 Loading data for CVI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CVI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CVI...

==================================================
Training Baseline CVI (SVM)
==================================================
Training SVM model...

Baseline CVI Performance:
MAE: 499218.8525
RMSE: 652444.9805
MAPE: 9.64%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 235
   • Highly important features (top 5%): 125

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t1: importance=0.0005, rank=1
   2. Feature_83_t1: importance=0.0003, rank=2
   3. Feature_95_t0: importance=0.0003, rank=3
   4. Feature_96_t0: importance=0.0003, rank=4
   5. Feature_82_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for CVI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CVI...

==================================================
Training Enhanced CVI (SVM)
==================================================
Training SVM model...

Enhanced CVI Performance:
MAE: 638404.4129
RMSE: 808549.3765
MAPE: 12.04%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 24

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0021, rank=1
   2. Feature_1_t2: importance=0.0017, rank=2
   3. Feature_0_t3: importance=0.0014, rank=3
   4. Feature_0_t1: importance=0.0013, rank=4
   5. Feature_2_t2: importance=0.0011, rank=5

📊 CVI Results:
  Baseline MAPE: 9.64%
  Enhanced MAPE: 12.04%
  MAPE Improvement: -2.39% (-24.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 118/464: CWT
============================================================
📊 Loading data for CWT...
📊 Loading data for CWT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CWT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CWT...

==================================================
Training Baseline CWT (SVM)
==================================================
Training SVM model...

Baseline CWT Performance:
MAE: 113211.4557
RMSE: 137634.5449
MAPE: 15.54%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 325
   • Highly important features (top 5%): 207

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_72_t3: importance=0.0003, rank=1
   2. Feature_71_t3: importance=0.0003, rank=2
   3. Feature_81_t3: importance=0.0003, rank=3
   4. Feature_73_t3: importance=0.0002, rank=4
   5. Feature_74_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for CWT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CWT...

==================================================
Training Enhanced CWT (SVM)
==================================================
Training SVM model...

Enhanced CWT Performance:
MAE: 127543.3350
RMSE: 158358.2602
MAPE: 16.95%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 18

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0037, rank=1
   2. Feature_0_t2: importance=0.0023, rank=2
   3. Feature_0_t3: importance=0.0021, rank=3
   4. Feature_2_t0: importance=0.0020, rank=4
   5. Feature_2_t2: importance=0.0016, rank=5

📊 CWT Results:
  Baseline MAPE: 15.54%
  Enhanced MAPE: 16.95%
  MAPE Improvement: -1.41% (-9.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 119/464: CXW
============================================================
📊 Loading data for CXW...
📊 Loading data for CXW from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CXW...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CXW...

==================================================
Training Baseline CXW (SVM)
==================================================
Training SVM model...

Baseline CXW Performance:
MAE: 467509.0078
RMSE: 585250.9115
MAPE: 12.56%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 182
   • Highly important features (top 5%): 81

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0024, rank=1
   2. Feature_73_t2: importance=0.0009, rank=2
   3. Feature_65_t2: importance=0.0007, rank=3
   4. Feature_69_t1: importance=0.0007, rank=4
   5. Feature_63_t2: importance=0.0006, rank=5

🔧 Applying universal feature engineering for CXW...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CXW...

==================================================
Training Enhanced CXW (SVM)
==================================================
Training SVM model...

Enhanced CXW Performance:
MAE: 388062.6110
RMSE: 486420.6964
MAPE: 10.24%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 43
   • Highly important features (top 5%): 26

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0044, rank=1
   2. Feature_1_t2: importance=0.0026, rank=2
   3. Feature_0_t2: importance=0.0022, rank=3
   4. Feature_2_t3: importance=0.0020, rank=4
   5. Feature_2_t1: importance=0.0017, rank=5

📊 CXW Results:
  Baseline MAPE: 12.56%
  Enhanced MAPE: 10.24%
  MAPE Improvement: +2.33% (+18.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 120/464: CZR
============================================================
📊 Loading data for CZR...
📊 Loading data for CZR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for CZR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for CZR...

==================================================
Training Baseline CZR (SVM)
==================================================
Training SVM model...

Baseline CZR Performance:
MAE: 1642559.0824
RMSE: 2287769.8329
MAPE: 9.14%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 174
   • Highly important features (top 5%): 98

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_80_t2: importance=0.0009, rank=1
   2. Feature_81_t3: importance=0.0008, rank=2
   3. Feature_82_t3: importance=0.0007, rank=3
   4. Feature_70_t2: importance=0.0004, rank=4
   5. Feature_64_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for CZR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for CZR...

==================================================
Training Enhanced CZR (SVM)
==================================================
Training SVM model...

Enhanced CZR Performance:
MAE: 1847165.5376
RMSE: 2625069.2334
MAPE: 9.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 25
   • Highly important features (top 5%): 14

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0031, rank=1
   2. Feature_2_t0: importance=0.0010, rank=2
   3. Feature_0_t0: importance=0.0010, rank=3
   4. Feature_0_t1: importance=0.0007, rank=4
   5. Feature_5_t0: importance=0.0006, rank=5

📊 CZR Results:
  Baseline MAPE: 9.14%
  Enhanced MAPE: 9.94%
  MAPE Improvement: -0.80% (-8.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 121/464: DAN
============================================================
📊 Loading data for DAN...
📊 Loading data for DAN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for DAN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for DAN...

==================================================
Training Baseline DAN (SVM)
==================================================
Training SVM model...

Baseline DAN Performance:
MAE: 393371.7414
RMSE: 552692.8135
MAPE: 7.59%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 314
   • Highly important features (top 5%): 233

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t2: importance=0.0008, rank=1
   2. Feature_72_t2: importance=0.0006, rank=2
   3. Feature_92_t2: importance=0.0005, rank=3
   4. Feature_71_t2: importance=0.0004, rank=4
   5. Feature_88_t2: importance=0.0004, rank=5

🔧 Applying universal feature engineering for DAN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for DAN...

==================================================
Training Enhanced DAN (SVM)
==================================================
Training SVM model...

Enhanced DAN Performance:
MAE: 577892.0099
RMSE: 716010.0523
MAPE: 10.95%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 36

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0091, rank=1
   2. Feature_2_t0: importance=0.0029, rank=2
   3. Feature_1_t2: importance=0.0025, rank=3
   4. Feature_0_t2: importance=0.0025, rank=4
   5. Feature_0_t0: importance=0.0019, rank=5

📊 DAN Results:
  Baseline MAPE: 7.59%
  Enhanced MAPE: 10.95%
  MAPE Improvement: -3.36% (-44.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 122/464: DCOM
============================================================
📊 Loading data for DCOM...
📊 Loading data for DCOM from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for DCOM...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for DCOM...

==================================================
Training Baseline DCOM (SVM)
==================================================
Training SVM model...

Baseline DCOM Performance:
MAE: 139761.2851
RMSE: 201417.3448
MAPE: 6.25%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 266
   • Highly important features (top 5%): 146

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_69_t3: importance=0.0006, rank=1
   2. Feature_84_t0: importance=0.0004, rank=2
   3. Feature_78_t2: importance=0.0003, rank=3
   4. Feature_77_t2: importance=0.0003, rank=4
   5. Feature_93_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for DCOM...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for DCOM...

==================================================
Training Enhanced DCOM (SVM)
==================================================
Training SVM model...

Enhanced DCOM Performance:
MAE: 209097.1542
RMSE: 283146.7680
MAPE: 9.38%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 36
   • Highly important features (top 5%): 25

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0028, rank=1
   2. Feature_2_t3: importance=0.0017, rank=2
   3. Feature_13_t0: importance=0.0015, rank=3
   4. Feature_1_t2: importance=0.0015, rank=4
   5. Feature_0_t0: importance=0.0014, rank=5

📊 DCOM Results:
  Baseline MAPE: 6.25%
  Enhanced MAPE: 9.38%
  MAPE Improvement: -3.13% (-50.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 123/464: DEA
============================================================
📊 Loading data for DEA...
📊 Loading data for DEA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for DEA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for DEA...

==================================================
Training Baseline DEA (SVM)
==================================================
Training SVM model...

Baseline DEA Performance:
MAE: 591252.2259
RMSE: 847349.9783
MAPE: 18.11%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 124
   • Highly important features (top 5%): 82

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_76_t0: importance=0.0015, rank=1
   2. Feature_94_t3: importance=0.0012, rank=2
   3. Feature_81_t2: importance=0.0007, rank=3
   4. Feature_91_t2: importance=0.0007, rank=4
   5. Feature_92_t0: importance=0.0006, rank=5

🔧 Applying universal feature engineering for DEA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for DEA...

==================================================
Training Enhanced DEA (SVM)
==================================================
Training SVM model...

Enhanced DEA Performance:
MAE: 543160.8687
RMSE: 854764.6152
MAPE: 17.36%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 50
   • Highly important features (top 5%): 36

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0015, rank=1
   2. Feature_14_t0: importance=0.0014, rank=2
   3. Feature_1_t2: importance=0.0012, rank=3
   4. Feature_2_t3: importance=0.0012, rank=4
   5. Feature_3_t3: importance=0.0012, rank=5

📊 DEA Results:
  Baseline MAPE: 18.11%
  Enhanced MAPE: 17.36%
  MAPE Improvement: +0.76% (+4.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 124/464: DEI
============================================================
📊 Loading data for DEI...
📊 Loading data for DEI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for DEI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for DEI...

==================================================
Training Baseline DEI (SVM)
==================================================
Training SVM model...

Baseline DEI Performance:
MAE: 1520361.0510
RMSE: 1777991.2425
MAPE: 7.61%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 263
   • Highly important features (top 5%): 132

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_64_t0: importance=0.0003, rank=1
   2. Feature_86_t1: importance=0.0003, rank=2
   3. Feature_80_t1: importance=0.0003, rank=3
   4. Feature_1_t1: importance=0.0003, rank=4
   5. Feature_84_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for DEI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for DEI...

==================================================
Training Enhanced DEI (SVM)
==================================================
Training SVM model...

Enhanced DEI Performance:
MAE: 1939878.2654
RMSE: 2333353.6935
MAPE: 9.49%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 47
   • Highly important features (top 5%): 37

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0018, rank=1
   2. Feature_0_t3: importance=0.0015, rank=2
   3. Feature_2_t3: importance=0.0014, rank=3
   4. Feature_1_t1: importance=0.0007, rank=4
   5. Feature_3_t0: importance=0.0006, rank=5

📊 DEI Results:
  Baseline MAPE: 7.61%
  Enhanced MAPE: 9.49%
  MAPE Improvement: -1.88% (-24.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 125/464: DFIN
============================================================
📊 Loading data for DFIN...
📊 Loading data for DFIN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for DFIN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for DFIN...

==================================================
Training Baseline DFIN (SVM)
==================================================
Training SVM model...

Baseline DFIN Performance:
MAE: 122202.5488
RMSE: 156889.7493
MAPE: 11.45%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 309
   • Highly important features (top 5%): 197

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_93_t2: importance=0.0007, rank=1
   2. Feature_94_t2: importance=0.0003, rank=2
   3. Feature_66_t2: importance=0.0003, rank=3
   4. Feature_94_t0: importance=0.0003, rank=4
   5. Feature_95_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for DFIN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for DFIN...

==================================================
Training Enhanced DFIN (SVM)
==================================================
Training SVM model...

Enhanced DFIN Performance:
MAE: 107391.4639
RMSE: 137661.4503
MAPE: 10.08%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 36
   • Highly important features (top 5%): 11

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0037, rank=1
   2. Feature_1_t2: importance=0.0016, rank=2
   3. Feature_2_t1: importance=0.0016, rank=3
   4. Feature_1_t1: importance=0.0014, rank=4
   5. Feature_0_t2: importance=0.0013, rank=5

📊 DFIN Results:
  Baseline MAPE: 11.45%
  Enhanced MAPE: 10.08%
  MAPE Improvement: +1.37% (+12.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 126/464: DGII
============================================================
📊 Loading data for DGII...
📊 Loading data for DGII from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for DGII...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for DGII...

==================================================
Training Baseline DGII (SVM)
==================================================
Training SVM model...

Baseline DGII Performance:
MAE: 138989.9808
RMSE: 173499.0140
MAPE: 5.83%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 158
   • Highly important features (top 5%): 84

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0010, rank=1
   2. Feature_68_t1: importance=0.0010, rank=2
   3. Feature_82_t0: importance=0.0007, rank=3
   4. Feature_63_t1: importance=0.0007, rank=4
   5. Feature_69_t1: importance=0.0006, rank=5

🔧 Applying universal feature engineering for DGII...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for DGII...

==================================================
Training Enhanced DGII (SVM)
==================================================
Training SVM model...

Enhanced DGII Performance:
MAE: 116169.8155
RMSE: 145172.6103
MAPE: 5.08%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 29
   • Highly important features (top 5%): 22

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0034, rank=1
   2. Feature_2_t3: importance=0.0034, rank=2
   3. Feature_1_t2: importance=0.0030, rank=3
   4. Feature_2_t1: importance=0.0027, rank=4
   5. Feature_0_t3: importance=0.0016, rank=5

📊 DGII Results:
  Baseline MAPE: 5.83%
  Enhanced MAPE: 5.08%
  MAPE Improvement: +0.75% (+12.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 127/464: DIOD
============================================================
📊 Loading data for DIOD...
📊 Loading data for DIOD from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for DIOD...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for DIOD...

==================================================
Training Baseline DIOD (SVM)
==================================================
Training SVM model...

Baseline DIOD Performance:
MAE: 149567.0680
RMSE: 189038.1447
MAPE: 7.28%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 298
   • Highly important features (top 5%): 155

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0004, rank=1
   2. Feature_89_t3: importance=0.0003, rank=2
   3. Feature_86_t3: importance=0.0003, rank=3
   4. Feature_94_t1: importance=0.0003, rank=4
   5. Feature_81_t0: importance=0.0003, rank=5

🔧 Applying universal feature engineering for DIOD...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for DIOD...

==================================================
Training Enhanced DIOD (SVM)
==================================================
Training SVM model...

Enhanced DIOD Performance:
MAE: 176434.0298
RMSE: 216247.2916
MAPE: 8.33%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0017, rank=1
   2. Feature_1_t3: importance=0.0017, rank=2
   3. Feature_1_t0: importance=0.0015, rank=3
   4. Feature_1_t1: importance=0.0010, rank=4
   5. Feature_6_t3: importance=0.0008, rank=5

📊 DIOD Results:
  Baseline MAPE: 7.28%
  Enhanced MAPE: 8.33%
  MAPE Improvement: -1.05% (-14.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 128/464: DLX
============================================================
📊 Loading data for DLX...
📊 Loading data for DLX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for DLX...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for DLX...

==================================================
Training Baseline DLX (SVM)
==================================================
Training SVM model...

Baseline DLX Performance:
MAE: 97282.8505
RMSE: 126022.6864
MAPE: 3.70%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 134
   • Highly important features (top 5%): 68

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t3: importance=0.0001, rank=1
   2. Feature_65_t0: importance=0.0001, rank=2
   3. Feature_72_t3: importance=0.0001, rank=3
   4. Feature_87_t1: importance=0.0001, rank=4
   5. Feature_1_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for DLX...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for DLX...

==================================================
Training Enhanced DLX (SVM)
==================================================
Training SVM model...

Enhanced DLX Performance:
MAE: 120714.9346
RMSE: 146102.3493
MAPE: 4.58%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 33
   • Highly important features (top 5%): 14

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0014, rank=1
   2. Feature_2_t3: importance=0.0007, rank=2
   3. Feature_2_t2: importance=0.0005, rank=3
   4. Feature_1_t0: importance=0.0003, rank=4
   5. Feature_2_t1: importance=0.0002, rank=5

📊 DLX Results:
  Baseline MAPE: 3.70%
  Enhanced MAPE: 4.58%
  MAPE Improvement: -0.89% (-24.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 129/464: DNOW
============================================================
📊 Loading data for DNOW...
📊 Loading data for DNOW from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for DNOW...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for DNOW...

==================================================
Training Baseline DNOW (SVM)
==================================================
Training SVM model...

Baseline DNOW Performance:
MAE: 486286.1002
RMSE: 611294.9058
MAPE: 16.30%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 259
   • Highly important features (top 5%): 118

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0024, rank=1
   2. Feature_80_t3: importance=0.0015, rank=2
   3. Feature_65_t3: importance=0.0009, rank=3
   4. Feature_72_t3: importance=0.0007, rank=4
   5. Feature_65_t0: importance=0.0006, rank=5

🔧 Applying universal feature engineering for DNOW...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for DNOW...

==================================================
Training Enhanced DNOW (SVM)
==================================================
Training SVM model...

Enhanced DNOW Performance:
MAE: 460786.1744
RMSE: 566324.0558
MAPE: 15.04%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 49
   • Highly important features (top 5%): 29

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0026, rank=1
   2. Feature_2_t3: importance=0.0022, rank=2
   3. Feature_1_t3: importance=0.0015, rank=3
   4. Feature_7_t2: importance=0.0013, rank=4
   5. Feature_1_t1: importance=0.0013, rank=5

📊 DNOW Results:
  Baseline MAPE: 16.30%
  Enhanced MAPE: 15.04%
  MAPE Improvement: +1.25% (+7.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 130/464: DORM
============================================================
📊 Loading data for DORM...
📊 Loading data for DORM from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for DORM...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for DORM...

==================================================
Training Baseline DORM (SVM)
==================================================
Training SVM model...

Baseline DORM Performance:
MAE: 60066.6163
RMSE: 88627.4839
MAPE: 11.44%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 275
   • Highly important features (top 5%): 181

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t3: importance=0.0001, rank=1
   2. Feature_95_t3: importance=0.0001, rank=2
   3. Feature_94_t3: importance=0.0001, rank=3
   4. Feature_85_t1: importance=0.0001, rank=4
   5. Feature_88_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for DORM...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for DORM...

==================================================
Training Enhanced DORM (SVM)
==================================================
Training SVM model...

Enhanced DORM Performance:
MAE: 59378.9033
RMSE: 88764.2645
MAPE: 11.81%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 36

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0006, rank=1
   2. Feature_1_t2: importance=0.0005, rank=2
   3. Feature_1_t1: importance=0.0005, rank=3
   4. Feature_11_t1: importance=0.0005, rank=4
   5. Feature_6_t3: importance=0.0004, rank=5

📊 DORM Results:
  Baseline MAPE: 11.44%
  Enhanced MAPE: 11.81%
  MAPE Improvement: -0.37% (-3.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 131/464: DRH
============================================================
📊 Loading data for DRH...
📊 Loading data for DRH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for DRH...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for DRH...

==================================================
Training Baseline DRH (SVM)
==================================================
Training SVM model...

Baseline DRH Performance:
MAE: 1334784.2705
RMSE: 1648386.6144
MAPE: 7.99%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 304
   • Highly important features (top 5%): 185

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0007, rank=1
   2. Feature_81_t1: importance=0.0005, rank=2
   3. Feature_1_t3: importance=0.0004, rank=3
   4. Feature_65_t2: importance=0.0004, rank=4
   5. Feature_86_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for DRH...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for DRH...

==================================================
Training Enhanced DRH (SVM)
==================================================
Training SVM model...

Enhanced DRH Performance:
MAE: 2162676.7172
RMSE: 2566966.1385
MAPE: 12.93%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 49
   • Highly important features (top 5%): 21

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0056, rank=1
   2. Feature_0_t3: importance=0.0035, rank=2
   3. Feature_2_t2: importance=0.0031, rank=3
   4. Feature_1_t1: importance=0.0030, rank=4
   5. Feature_1_t0: importance=0.0020, rank=5

📊 DRH Results:
  Baseline MAPE: 7.99%
  Enhanced MAPE: 12.93%
  MAPE Improvement: -4.94% (-61.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 132/464: DVAX
============================================================
📊 Loading data for DVAX...
📊 Loading data for DVAX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing DVAX: 'DVAX'

============================================================
TESTING TICKER 133/464: DXC
============================================================
📊 Loading data for DXC...
📊 Loading data for DXC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing DXC: 'DXC'

============================================================
TESTING TICKER 134/464: DXPE
============================================================
📊 Loading data for DXPE...
📊 Loading data for DXPE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for DXPE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for DXPE...

==================================================
Training Baseline DXPE (SVM)
==================================================
Training SVM model...

Baseline DXPE Performance:
MAE: 57660.8308
RMSE: 78232.6922
MAPE: 9.72%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 201
   • Highly important features (top 5%): 96

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0002, rank=1
   2. Feature_84_t1: importance=0.0002, rank=2
   3. Feature_66_t0: importance=0.0002, rank=3
   4. Feature_0_t2: importance=0.0002, rank=4
   5. Feature_70_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for DXPE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for DXPE...

==================================================
Training Enhanced DXPE (SVM)
==================================================
Training SVM model...

Enhanced DXPE Performance:
MAE: 60561.6553
RMSE: 81180.9565
MAPE: 10.25%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 16

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0010, rank=1
   2. Feature_0_t3: importance=0.0010, rank=2
   3. Feature_0_t0: importance=0.0009, rank=3
   4. Feature_2_t0: importance=0.0006, rank=4
   5. Feature_2_t1: importance=0.0005, rank=5

📊 DXPE Results:
  Baseline MAPE: 9.72%
  Enhanced MAPE: 10.25%
  MAPE Improvement: -0.53% (-5.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 135/464: DY
============================================================
📊 Loading data for DY...
📊 Loading data for DY from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for DY...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for DY...

==================================================
Training Baseline DY (SVM)
==================================================
Training SVM model...

Baseline DY Performance:
MAE: 129388.0127
RMSE: 175772.9402
MAPE: 10.92%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 248
   • Highly important features (top 5%): 147

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_80_t2: importance=0.0003, rank=1
   2. Feature_79_t2: importance=0.0003, rank=2
   3. Feature_82_t2: importance=0.0003, rank=3
   4. Feature_78_t3: importance=0.0003, rank=4
   5. Feature_0_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for DY...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for DY...

==================================================
Training Enhanced DY (SVM)
==================================================
Training SVM model...

Enhanced DY Performance:
MAE: 137957.9858
RMSE: 182919.2774
MAPE: 11.61%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 34
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0027, rank=1
   2. Feature_1_t3: importance=0.0012, rank=2
   3. Feature_1_t1: importance=0.0008, rank=3
   4. Feature_2_t0: importance=0.0008, rank=4
   5. Feature_0_t3: importance=0.0007, rank=5

📊 DY Results:
  Baseline MAPE: 10.92%
  Enhanced MAPE: 11.61%
  MAPE Improvement: -0.69% (-6.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 136/464: EAT
============================================================
📊 Loading data for EAT...
📊 Loading data for EAT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for EAT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for EAT...

==================================================
Training Baseline EAT (SVM)
==================================================
Training SVM model...

Baseline EAT Performance:
MAE: 454891.8872
RMSE: 636680.2895
MAPE: 7.16%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 199
   • Highly important features (top 5%): 115

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_79_t0: importance=0.0002, rank=1
   2. Feature_64_t1: importance=0.0002, rank=2
   3. Feature_94_t2: importance=0.0002, rank=3
   4. Feature_93_t3: importance=0.0002, rank=4
   5. Feature_73_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for EAT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for EAT...

==================================================
Training Enhanced EAT (SVM)
==================================================
Training SVM model...

Enhanced EAT Performance:
MAE: 512652.5537
RMSE: 687004.8716
MAPE: 8.05%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 27
   • Highly important features (top 5%): 14

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0015, rank=1
   2. Feature_0_t3: importance=0.0015, rank=2
   3. Feature_1_t2: importance=0.0010, rank=3
   4. Feature_0_t0: importance=0.0007, rank=4
   5. Feature_2_t1: importance=0.0007, rank=5

📊 EAT Results:
  Baseline MAPE: 7.16%
  Enhanced MAPE: 8.05%
  MAPE Improvement: -0.89% (-12.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 137/464: ECPG
============================================================
📊 Loading data for ECPG...
📊 Loading data for ECPG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ECPG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ECPG...

==================================================
Training Baseline ECPG (SVM)
==================================================
Training SVM model...

Baseline ECPG Performance:
MAE: 80186.4960
RMSE: 132782.5314
MAPE: 4.88%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 144
   • Highly important features (top 5%): 81

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_87_t2: importance=0.0001, rank=1
   2. Feature_85_t2: importance=0.0001, rank=2
   3. Feature_67_t3: importance=0.0000, rank=3
   4. Feature_81_t3: importance=0.0000, rank=4
   5. Feature_87_t0: importance=0.0000, rank=5

🔧 Applying universal feature engineering for ECPG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ECPG...

==================================================
Training Enhanced ECPG (SVM)
==================================================
Training SVM model...

Enhanced ECPG Performance:
MAE: 98227.0312
RMSE: 148227.5136
MAPE: 5.84%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 15
   • Highly important features (top 5%): 13

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_6_t3: importance=0.0002, rank=1
   2. Feature_6_t1: importance=0.0001, rank=2
   3. Feature_0_t1: importance=0.0001, rank=3
   4. Feature_2_t0: importance=0.0001, rank=4
   5. Feature_1_t2: importance=0.0001, rank=5

📊 ECPG Results:
  Baseline MAPE: 4.88%
  Enhanced MAPE: 5.84%
  MAPE Improvement: -0.96% (-19.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 138/464: EFC
============================================================
📊 Loading data for EFC...
📊 Loading data for EFC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing EFC: 'EFC'

============================================================
TESTING TICKER 139/464: EGBN
============================================================
📊 Loading data for EGBN...
📊 Loading data for EGBN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for EGBN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for EGBN...

==================================================
Training Baseline EGBN (SVM)
==================================================
Training SVM model...

Baseline EGBN Performance:
MAE: 203992.4600
RMSE: 248642.4223
MAPE: 10.69%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 94
   • Highly important features (top 5%): 75

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t3: importance=0.0030, rank=1
   2. Feature_67_t3: importance=0.0023, rank=2
   3. Feature_86_t0: importance=0.0020, rank=3
   4. Feature_91_t0: importance=0.0018, rank=4
   5. Feature_71_t2: importance=0.0008, rank=5

🔧 Applying universal feature engineering for EGBN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for EGBN...

==================================================
Training Enhanced EGBN (SVM)
==================================================
Training SVM model...

Enhanced EGBN Performance:
MAE: 182425.2445
RMSE: 220676.4574
MAPE: 9.25%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 27
   • Highly important features (top 5%): 11

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0039, rank=1
   2. Feature_0_t0: importance=0.0032, rank=2
   3. Feature_1_t3: importance=0.0031, rank=3
   4. Feature_2_t2: importance=0.0023, rank=4
   5. Feature_2_t1: importance=0.0014, rank=5

📊 EGBN Results:
  Baseline MAPE: 10.69%
  Enhanced MAPE: 9.25%
  MAPE Improvement: +1.44% (+13.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 140/464: EIG
============================================================
📊 Loading data for EIG...
📊 Loading data for EIG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for EIG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for EIG...

==================================================
Training Baseline EIG (SVM)
==================================================
Training SVM model...

Baseline EIG Performance:
MAE: 56505.4862
RMSE: 73103.6878
MAPE: 15.07%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 243
   • Highly important features (top 5%): 115

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_91_t0: importance=0.0006, rank=1
   2. Feature_65_t2: importance=0.0006, rank=2
   3. Feature_74_t3: importance=0.0004, rank=3
   4. Feature_96_t0: importance=0.0004, rank=4
   5. Feature_2_t2: importance=0.0004, rank=5

🔧 Applying universal feature engineering for EIG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for EIG...

==================================================
Training Enhanced EIG (SVM)
==================================================
Training SVM model...

Enhanced EIG Performance:
MAE: 56981.3179
RMSE: 70617.0798
MAPE: 15.32%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 27

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0021, rank=1
   2. Feature_0_t3: importance=0.0019, rank=2
   3. Feature_0_t0: importance=0.0017, rank=3
   4. Feature_1_t3: importance=0.0017, rank=4
   5. Feature_2_t3: importance=0.0016, rank=5

📊 EIG Results:
  Baseline MAPE: 15.07%
  Enhanced MAPE: 15.32%
  MAPE Improvement: -0.25% (-1.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 141/464: ENPH
============================================================
📊 Loading data for ENPH...
📊 Loading data for ENPH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ENPH...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ENPH...

==================================================
Training Baseline ENPH (SVM)
==================================================
Training SVM model...

Baseline ENPH Performance:
MAE: 1395644.1865
RMSE: 1955881.4941
MAPE: 7.67%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 299
   • Highly important features (top 5%): 130

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_78_t0: importance=0.0002, rank=1
   2. Feature_86_t0: importance=0.0002, rank=2
   3. Feature_66_t0: importance=0.0002, rank=3
   4. Feature_85_t0: importance=0.0002, rank=4
   5. Feature_73_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for ENPH...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ENPH...

==================================================
Training Enhanced ENPH (SVM)
==================================================
Training SVM model...

Enhanced ENPH Performance:
MAE: 1629887.1772
RMSE: 2308504.8702
MAPE: 8.89%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 56
   • Highly important features (top 5%): 43

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0009, rank=1
   2. Feature_2_t0: importance=0.0009, rank=2
   3. Feature_13_t3: importance=0.0009, rank=3
   4. Feature_13_t0: importance=0.0008, rank=4
   5. Feature_1_t3: importance=0.0007, rank=5

📊 ENPH Results:
  Baseline MAPE: 7.67%
  Enhanced MAPE: 8.89%
  MAPE Improvement: -1.22% (-15.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 142/464: ENR
============================================================
📊 Loading data for ENR...
📊 Loading data for ENR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ENR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ENR...

==================================================
Training Baseline ENR (SVM)
==================================================
Training SVM model...

Baseline ENR Performance:
MAE: 179737.8802
RMSE: 231894.6501
MAPE: 5.62%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 200
   • Highly important features (top 5%): 72

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_80_t2: importance=0.0003, rank=1
   2. Feature_79_t2: importance=0.0003, rank=2
   3. Feature_80_t0: importance=0.0002, rank=3
   4. Feature_81_t2: importance=0.0002, rank=4
   5. Feature_69_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for ENR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ENR...

==================================================
Training Enhanced ENR (SVM)
==================================================
Training SVM model...

Enhanced ENR Performance:
MAE: 195618.6556
RMSE: 263745.5087
MAPE: 5.87%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 30
   • Highly important features (top 5%): 10

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0011, rank=1
   2. Feature_1_t3: importance=0.0009, rank=2
   3. Feature_2_t2: importance=0.0008, rank=3
   4. Feature_1_t1: importance=0.0004, rank=4
   5. Feature_10_t2: importance=0.0004, rank=5

📊 ENR Results:
  Baseline MAPE: 5.62%
  Enhanced MAPE: 5.87%
  MAPE Improvement: -0.26% (-4.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 143/464: ENVA
============================================================
📊 Loading data for ENVA...
📊 Loading data for ENVA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ENVA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ENVA...

==================================================
Training Baseline ENVA (SVM)
==================================================
Training SVM model...

Baseline ENVA Performance:
MAE: 88490.6250
RMSE: 120428.9493
MAPE: 5.39%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 146
   • Highly important features (top 5%): 45

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0005, rank=1
   2. Feature_68_t3: importance=0.0004, rank=2
   3. Feature_2_t0: importance=0.0004, rank=3
   4. Feature_93_t1: importance=0.0004, rank=4
   5. Feature_72_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for ENVA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ENVA...

==================================================
Training Enhanced ENVA (SVM)
==================================================
Training SVM model...

Enhanced ENVA Performance:
MAE: 98209.4545
RMSE: 121250.4572
MAPE: 6.15%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 29
   • Highly important features (top 5%): 12

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0042, rank=1
   2. Feature_2_t0: importance=0.0022, rank=2
   3. Feature_0_t1: importance=0.0020, rank=3
   4. Feature_2_t2: importance=0.0020, rank=4
   5. Feature_1_t2: importance=0.0017, rank=5

📊 ENVA Results:
  Baseline MAPE: 5.39%
  Enhanced MAPE: 6.15%
  MAPE Improvement: -0.76% (-14.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 144/464: EPC
============================================================
📊 Loading data for EPC...
📊 Loading data for EPC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for EPC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for EPC...

==================================================
Training Baseline EPC (SVM)
==================================================
Training SVM model...

Baseline EPC Performance:
MAE: 140368.8135
RMSE: 184891.6388
MAPE: 6.07%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 190
   • Highly important features (top 5%): 48

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_74_t1: importance=0.0002, rank=1
   2. Feature_2_t2: importance=0.0001, rank=2
   3. Feature_76_t1: importance=0.0001, rank=3
   4. Feature_75_t1: importance=0.0001, rank=4
   5. Feature_88_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for EPC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for EPC...

==================================================
Training Enhanced EPC (SVM)
==================================================
Training SVM model...

Enhanced EPC Performance:
MAE: 205483.3605
RMSE: 254964.8489
MAPE: 9.21%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0014, rank=1
   2. Feature_1_t1: importance=0.0006, rank=2
   3. Feature_2_t3: importance=0.0005, rank=3
   4. Feature_1_t0: importance=0.0004, rank=4
   5. Feature_2_t1: importance=0.0003, rank=5

📊 EPC Results:
  Baseline MAPE: 6.07%
  Enhanced MAPE: 9.21%
  MAPE Improvement: -3.14% (-51.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 145/464: ESE
============================================================
📊 Loading data for ESE...
📊 Loading data for ESE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ESE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ESE...

==================================================
Training Baseline ESE (SVM)
==================================================
Training SVM model...

Baseline ESE Performance:
MAE: 36424.7804
RMSE: 48223.9630
MAPE: 14.10%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 161
   • Highly important features (top 5%): 96

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t0: importance=0.0008, rank=1
   2. Feature_63_t1: importance=0.0006, rank=2
   3. Feature_89_t3: importance=0.0005, rank=3
   4. Feature_68_t0: importance=0.0004, rank=4
   5. Feature_79_t1: importance=0.0004, rank=5

🔧 Applying universal feature engineering for ESE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ESE...

==================================================
Training Enhanced ESE (SVM)
==================================================
Training SVM model...

Enhanced ESE Performance:
MAE: 47628.9881
RMSE: 58690.3117
MAPE: 18.29%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0031, rank=1
   2. Feature_1_t0: importance=0.0027, rank=2
   3. Feature_0_t3: importance=0.0025, rank=3
   4. Feature_0_t0: importance=0.0023, rank=4
   5. Feature_0_t2: importance=0.0018, rank=5

📊 ESE Results:
  Baseline MAPE: 14.10%
  Enhanced MAPE: 18.29%
  MAPE Improvement: -4.19% (-29.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 146/464: ETSY
============================================================
📊 Loading data for ETSY...
📊 Loading data for ETSY from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ETSY...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ETSY...

==================================================
Training Baseline ETSY (SVM)
==================================================
Training SVM model...

Baseline ETSY Performance:
MAE: 1525814.3684
RMSE: 1944639.8762
MAPE: 8.28%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 187
   • Highly important features (top 5%): 112

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_67_t1: importance=0.0003, rank=1
   2. Feature_84_t0: importance=0.0002, rank=2
   3. Feature_64_t3: importance=0.0002, rank=3
   4. Feature_78_t1: importance=0.0002, rank=4
   5. Feature_69_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for ETSY...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ETSY...

==================================================
Training Enhanced ETSY (SVM)
==================================================
Training SVM model...

Enhanced ETSY Performance:
MAE: 1896813.1907
RMSE: 2345937.3277
MAPE: 10.27%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 44
   • Highly important features (top 5%): 18

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0015, rank=1
   2. Feature_2_t2: importance=0.0015, rank=2
   3. Feature_0_t0: importance=0.0010, rank=3
   4. Feature_1_t1: importance=0.0010, rank=4
   5. Feature_1_t0: importance=0.0009, rank=5

📊 ETSY Results:
  Baseline MAPE: 8.28%
  Enhanced MAPE: 10.27%
  MAPE Improvement: -1.99% (-24.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 147/464: EVTC
============================================================
📊 Loading data for EVTC...
📊 Loading data for EVTC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for EVTC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for EVTC...

==================================================
Training Baseline EVTC (SVM)
==================================================
Training SVM model...

Baseline EVTC Performance:
MAE: 238247.0762
RMSE: 284323.9120
MAPE: 11.31%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 237
   • Highly important features (top 5%): 126

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_84_t1: importance=0.0010, rank=1
   2. Feature_89_t1: importance=0.0008, rank=2
   3. Feature_2_t2: importance=0.0006, rank=3
   4. Feature_83_t0: importance=0.0005, rank=4
   5. Feature_65_t1: importance=0.0005, rank=5

🔧 Applying universal feature engineering for EVTC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for EVTC...

==================================================
Training Enhanced EVTC (SVM)
==================================================
Training SVM model...

Enhanced EVTC Performance:
MAE: 157750.0553
RMSE: 197818.2359
MAPE: 7.87%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 56
   • Highly important features (top 5%): 43

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0029, rank=1
   2. Feature_1_t3: importance=0.0018, rank=2
   3. Feature_0_t2: importance=0.0017, rank=3
   4. Feature_14_t3: importance=0.0015, rank=4
   5. Feature_2_t2: importance=0.0013, rank=5

📊 EVTC Results:
  Baseline MAPE: 11.31%
  Enhanced MAPE: 7.87%
  MAPE Improvement: +3.45% (+30.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 148/464: EXPI
============================================================
📊 Loading data for EXPI...
📊 Loading data for EXPI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing EXPI: 'EXPI'

============================================================
TESTING TICKER 149/464: EXTR
============================================================
📊 Loading data for EXTR...
📊 Loading data for EXTR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for EXTR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for EXTR...

==================================================
Training Baseline EXTR (SVM)
==================================================
Training SVM model...

Baseline EXTR Performance:
MAE: 604268.4340
RMSE: 814981.7429
MAPE: 7.53%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 234
   • Highly important features (top 5%): 125

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_92_t3: importance=0.0011, rank=1
   2. Feature_65_t3: importance=0.0005, rank=2
   3. Feature_87_t0: importance=0.0005, rank=3
   4. Feature_85_t0: importance=0.0004, rank=4
   5. Feature_69_t1: importance=0.0004, rank=5

🔧 Applying universal feature engineering for EXTR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for EXTR...

==================================================
Training Enhanced EXTR (SVM)
==================================================
Training SVM model...

Enhanced EXTR Performance:
MAE: 999058.1948
RMSE: 1415878.0983
MAPE: 11.26%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 28
   • Highly important features (top 5%): 14

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0069, rank=1
   2. Feature_1_t2: importance=0.0031, rank=2
   3. Feature_0_t2: importance=0.0028, rank=3
   4. Feature_1_t1: importance=0.0022, rank=4
   5. Feature_2_t3: importance=0.0016, rank=5

📊 EXTR Results:
  Baseline MAPE: 7.53%
  Enhanced MAPE: 11.26%
  MAPE Improvement: -3.73% (-49.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 150/464: EYE
============================================================
📊 Loading data for EYE...
📊 Loading data for EYE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing EYE: 'EYE'

============================================================
TESTING TICKER 151/464: EZPW
============================================================
📊 Loading data for EZPW...
📊 Loading data for EZPW from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for EZPW...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for EZPW...

==================================================
Training Baseline EZPW (SVM)
==================================================
Training SVM model...

Baseline EZPW Performance:
MAE: 544973.3131
RMSE: 704862.5683
MAPE: 6.87%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 116
   • Highly important features (top 5%): 77

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t0: importance=0.0001, rank=1
   2. Feature_91_t3: importance=0.0001, rank=2
   3. Feature_71_t3: importance=0.0001, rank=3
   4. Feature_70_t3: importance=0.0001, rank=4
   5. Feature_96_t0: importance=0.0001, rank=5

🔧 Applying universal feature engineering for EZPW...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for EZPW...

==================================================
Training Enhanced EZPW (SVM)
==================================================
Training SVM model...

Enhanced EZPW Performance:
MAE: 587849.6078
RMSE: 723947.5006
MAPE: 7.50%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 28
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0004, rank=1
   2. Feature_2_t2: importance=0.0003, rank=2
   3. Feature_1_t2: importance=0.0002, rank=3
   4. Feature_2_t0: importance=0.0002, rank=4
   5. Feature_6_t2: importance=0.0002, rank=5

📊 EZPW Results:
  Baseline MAPE: 6.87%
  Enhanced MAPE: 7.50%
  MAPE Improvement: -0.63% (-9.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 152/464: FBK
============================================================
📊 Loading data for FBK...
📊 Loading data for FBK from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing FBK: 'FBK'

============================================================
TESTING TICKER 153/464: FBNC
============================================================
📊 Loading data for FBNC...
📊 Loading data for FBNC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FBNC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FBNC...

==================================================
Training Baseline FBNC (SVM)
==================================================
Training SVM model...

Baseline FBNC Performance:
MAE: 87257.7679
RMSE: 104644.4961
MAPE: 8.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 327
   • Highly important features (top 5%): 178

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_78_t3: importance=0.0005, rank=1
   2. Feature_80_t3: importance=0.0005, rank=2
   3. Feature_67_t3: importance=0.0004, rank=3
   4. Feature_63_t3: importance=0.0004, rank=4
   5. Feature_73_t3: importance=0.0004, rank=5

🔧 Applying universal feature engineering for FBNC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FBNC...

==================================================
Training Enhanced FBNC (SVM)
==================================================
Training SVM model...

Enhanced FBNC Performance:
MAE: 86909.3850
RMSE: 102064.8041
MAPE: 8.69%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 57
   • Highly important features (top 5%): 35

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0034, rank=1
   2. Feature_1_t1: importance=0.0024, rank=2
   3. Feature_2_t2: importance=0.0017, rank=3
   4. Feature_1_t2: importance=0.0014, rank=4
   5. Feature_2_t0: importance=0.0011, rank=5

📊 FBNC Results:
  Baseline MAPE: 8.74%
  Enhanced MAPE: 8.69%
  MAPE Improvement: +0.05% (+0.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 154/464: FBP
============================================================
📊 Loading data for FBP...
📊 Loading data for FBP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FBP...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FBP...

==================================================
Training Baseline FBP (SVM)
==================================================
Training SVM model...

Baseline FBP Performance:
MAE: 618984.2061
RMSE: 767888.4029
MAPE: 19.88%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 275
   • Highly important features (top 5%): 150

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t3: importance=0.0010, rank=1
   2. Feature_83_t1: importance=0.0008, rank=2
   3. Feature_83_t3: importance=0.0007, rank=3
   4. Feature_65_t1: importance=0.0007, rank=4
   5. Feature_84_t3: importance=0.0006, rank=5

🔧 Applying universal feature engineering for FBP...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FBP...

==================================================
Training Enhanced FBP (SVM)
==================================================
Training SVM model...

Enhanced FBP Performance:
MAE: 666853.2937
RMSE: 805040.9099
MAPE: 20.62%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 33
   • Highly important features (top 5%): 14

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0094, rank=1
   2. Feature_2_t1: importance=0.0049, rank=2
   3. Feature_1_t1: importance=0.0049, rank=3
   4. Feature_2_t3: importance=0.0047, rank=4
   5. Feature_2_t0: importance=0.0028, rank=5

📊 FBP Results:
  Baseline MAPE: 19.88%
  Enhanced MAPE: 20.62%
  MAPE Improvement: -0.74% (-3.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 155/464: FCF
============================================================
📊 Loading data for FCF...
📊 Loading data for FCF from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FCF...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FCF...

==================================================
Training Baseline FCF (SVM)
==================================================
Training SVM model...

Baseline FCF Performance:
MAE: 175617.9423
RMSE: 251126.5073
MAPE: 10.90%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 184
   • Highly important features (top 5%): 93

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_95_t0: importance=0.0003, rank=1
   2. Feature_76_t3: importance=0.0002, rank=2
   3. Feature_1_t1: importance=0.0002, rank=3
   4. Feature_78_t2: importance=0.0002, rank=4
   5. Feature_69_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for FCF...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FCF...

==================================================
Training Enhanced FCF (SVM)
==================================================
Training SVM model...

Enhanced FCF Performance:
MAE: 173984.3225
RMSE: 243125.1117
MAPE: 11.04%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 45
   • Highly important features (top 5%): 32

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0017, rank=1
   2. Feature_0_t1: importance=0.0010, rank=2
   3. Feature_1_t1: importance=0.0009, rank=3
   4. Feature_1_t3: importance=0.0008, rank=4
   5. Feature_1_t0: importance=0.0005, rank=5

📊 FCF Results:
  Baseline MAPE: 10.90%
  Enhanced MAPE: 11.04%
  MAPE Improvement: -0.14% (-1.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 156/464: FCPT
============================================================
📊 Loading data for FCPT...
📊 Loading data for FCPT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FCPT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FCPT...

==================================================
Training Baseline FCPT (SVM)
==================================================
Training SVM model...

Baseline FCPT Performance:
MAE: 403912.8053
RMSE: 550195.6058
MAPE: 10.49%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 222
   • Highly important features (top 5%): 94

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_88_t1: importance=0.0006, rank=1
   2. Feature_92_t0: importance=0.0005, rank=2
   3. Feature_71_t1: importance=0.0004, rank=3
   4. Feature_75_t1: importance=0.0003, rank=4
   5. Feature_2_t0: importance=0.0003, rank=5

🔧 Applying universal feature engineering for FCPT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FCPT...

==================================================
Training Enhanced FCPT (SVM)
==================================================
Training SVM model...

Enhanced FCPT Performance:
MAE: 420402.3606
RMSE: 558154.1889
MAPE: 10.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 43
   • Highly important features (top 5%): 29

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0029, rank=1
   2. Feature_4_t0: importance=0.0012, rank=2
   3. Feature_0_t2: importance=0.0010, rank=3
   4. Feature_1_t3: importance=0.0010, rank=4
   5. Feature_3_t0: importance=0.0009, rank=5

📊 FCPT Results:
  Baseline MAPE: 10.49%
  Enhanced MAPE: 10.94%
  MAPE Improvement: -0.44% (-4.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 157/464: FDP
============================================================
📊 Loading data for FDP...
📊 Loading data for FDP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing FDP: 'FDP'

============================================================
TESTING TICKER 158/464: FELE
============================================================
📊 Loading data for FELE...
📊 Loading data for FELE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FELE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FELE...

==================================================
Training Baseline FELE (SVM)
==================================================
Training SVM model...

Baseline FELE Performance:
MAE: 69002.0719
RMSE: 86614.9886
MAPE: 10.86%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 277
   • Highly important features (top 5%): 171

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0008, rank=1
   2. Feature_88_t3: importance=0.0005, rank=2
   3. Feature_86_t3: importance=0.0005, rank=3
   4. Feature_78_t3: importance=0.0003, rank=4
   5. Feature_0_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for FELE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FELE...

==================================================
Training Enhanced FELE (SVM)
==================================================
Training SVM model...

Enhanced FELE Performance:
MAE: 80875.5402
RMSE: 108527.7233
MAPE: 12.60%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 38

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0062, rank=1
   2. Feature_1_t3: importance=0.0023, rank=2
   3. Feature_0_t2: importance=0.0020, rank=3
   4. Feature_0_t1: importance=0.0018, rank=4
   5. Feature_2_t2: importance=0.0018, rank=5

📊 FELE Results:
  Baseline MAPE: 10.86%
  Enhanced MAPE: 12.60%
  MAPE Improvement: -1.74% (-16.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 159/464: FFBC
============================================================
📊 Loading data for FFBC...
📊 Loading data for FFBC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FFBC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FFBC...

==================================================
Training Baseline FFBC (SVM)
==================================================
Training SVM model...

Baseline FFBC Performance:
MAE: 122877.3468
RMSE: 160494.7246
MAPE: 9.05%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 348
   • Highly important features (top 5%): 293

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_89_t3: importance=0.0002, rank=1
   2. Feature_90_t2: importance=0.0002, rank=2
   3. Feature_74_t3: importance=0.0001, rank=3
   4. Feature_67_t3: importance=0.0001, rank=4
   5. Feature_76_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for FFBC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FFBC...

==================================================
Training Enhanced FFBC (SVM)
==================================================
Training SVM model...

Enhanced FFBC Performance:
MAE: 127326.7234
RMSE: 174679.5333
MAPE: 9.73%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 21

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0014, rank=1
   2. Feature_2_t0: importance=0.0007, rank=2
   3. Feature_1_t2: importance=0.0007, rank=3
   4. Feature_0_t3: importance=0.0005, rank=4
   5. Feature_1_t1: importance=0.0005, rank=5

📊 FFBC Results:
  Baseline MAPE: 9.05%
  Enhanced MAPE: 9.73%
  MAPE Improvement: -0.68% (-7.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 160/464: FHB
============================================================
📊 Loading data for FHB...
📊 Loading data for FHB from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FHB...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FHB...

==================================================
Training Baseline FHB (SVM)
==================================================
Training SVM model...

Baseline FHB Performance:
MAE: 310452.5381
RMSE: 399886.6617
MAPE: 7.47%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 312
   • Highly important features (top 5%): 209

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_78_t3: importance=0.0007, rank=1
   2. Feature_82_t2: importance=0.0004, rank=2
   3. Feature_0_t0: importance=0.0004, rank=3
   4. Feature_89_t1: importance=0.0004, rank=4
   5. Feature_71_t2: importance=0.0004, rank=5

🔧 Applying universal feature engineering for FHB...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FHB...

==================================================
Training Enhanced FHB (SVM)
==================================================
Training SVM model...

Enhanced FHB Performance:
MAE: 313561.7498
RMSE: 372462.5248
MAPE: 7.59%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 55
   • Highly important features (top 5%): 38

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0028, rank=1
   2. Feature_1_t1: importance=0.0016, rank=2
   3. Feature_12_t2: importance=0.0014, rank=3
   4. Feature_2_t0: importance=0.0012, rank=4
   5. Feature_13_t0: importance=0.0012, rank=5

📊 FHB Results:
  Baseline MAPE: 7.47%
  Enhanced MAPE: 7.59%
  MAPE Improvement: -0.12% (-1.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 161/464: FIZZ
============================================================
📊 Loading data for FIZZ...
📊 Loading data for FIZZ from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FIZZ...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FIZZ...

==================================================
Training Baseline FIZZ (SVM)
==================================================
Training SVM model...

Baseline FIZZ Performance:
MAE: 127111.1073
RMSE: 153695.6396
MAPE: 5.15%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 183
   • Highly important features (top 5%): 65

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t2: importance=0.0005, rank=1
   2. Feature_96_t3: importance=0.0004, rank=2
   3. Feature_70_t2: importance=0.0004, rank=3
   4. Feature_67_t2: importance=0.0003, rank=4
   5. Feature_95_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for FIZZ...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FIZZ...

==================================================
Training Enhanced FIZZ (SVM)
==================================================
Training SVM model...

Enhanced FIZZ Performance:
MAE: 167729.2935
RMSE: 199285.4012
MAPE: 6.63%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 55
   • Highly important features (top 5%): 45

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0013, rank=1
   2. Feature_8_t2: importance=0.0011, rank=2
   3. Feature_10_t2: importance=0.0010, rank=3
   4. Feature_2_t2: importance=0.0009, rank=4
   5. Feature_1_t3: importance=0.0007, rank=5

📊 FIZZ Results:
  Baseline MAPE: 5.15%
  Enhanced MAPE: 6.63%
  MAPE Improvement: -1.48% (-28.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 162/464: FMC
============================================================
📊 Loading data for FMC...
📊 Loading data for FMC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FMC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FMC...

==================================================
Training Baseline FMC (SVM)
==================================================
Training SVM model...

Baseline FMC Performance:
MAE: 481068.7065
RMSE: 607105.4173
MAPE: 6.83%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 208
   • Highly important features (top 5%): 102

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_78_t3: importance=0.0008, rank=1
   2. Feature_89_t0: importance=0.0007, rank=2
   3. Feature_67_t3: importance=0.0004, rank=3
   4. Feature_67_t1: importance=0.0004, rank=4
   5. Feature_72_t3: importance=0.0004, rank=5

🔧 Applying universal feature engineering for FMC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FMC...

==================================================
Training Enhanced FMC (SVM)
==================================================
Training SVM model...

Enhanced FMC Performance:
MAE: 450298.2789
RMSE: 571570.8569
MAPE: 6.39%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 24

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0031, rank=1
   2. Feature_1_t3: importance=0.0015, rank=2
   3. Feature_1_t2: importance=0.0015, rank=3
   4. Feature_0_t3: importance=0.0014, rank=4
   5. Feature_2_t3: importance=0.0012, rank=5

📊 FMC Results:
  Baseline MAPE: 6.83%
  Enhanced MAPE: 6.39%
  MAPE Improvement: +0.44% (+6.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 163/464: FORM
============================================================
📊 Loading data for FORM...
📊 Loading data for FORM from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FORM...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FORM...

==================================================
Training Baseline FORM (SVM)
==================================================
Training SVM model...

Baseline FORM Performance:
MAE: 224356.4888
RMSE: 289286.1503
MAPE: 8.68%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 173
   • Highly important features (top 5%): 69

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_71_t0: importance=0.0003, rank=1
   2. Feature_80_t2: importance=0.0003, rank=2
   3. Feature_79_t2: importance=0.0003, rank=3
   4. Feature_95_t3: importance=0.0002, rank=4
   5. Feature_94_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for FORM...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FORM...

==================================================
Training Enhanced FORM (SVM)
==================================================
Training SVM model...

Enhanced FORM Performance:
MAE: 237163.7503
RMSE: 309999.2721
MAPE: 8.83%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 29

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0015, rank=1
   2. Feature_0_t2: importance=0.0014, rank=2
   3. Feature_2_t3: importance=0.0013, rank=3
   4. Feature_1_t3: importance=0.0012, rank=4
   5. Feature_2_t1: importance=0.0010, rank=5

📊 FORM Results:
  Baseline MAPE: 8.68%
  Enhanced MAPE: 8.83%
  MAPE Improvement: -0.15% (-1.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 164/464: FOXF
============================================================
📊 Loading data for FOXF...
📊 Loading data for FOXF from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FOXF...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FOXF...

==================================================
Training Baseline FOXF (SVM)
==================================================
Training SVM model...

Baseline FOXF Performance:
MAE: 210596.2704
RMSE: 286571.2685
MAPE: 9.32%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 109
   • Highly important features (top 5%): 60

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t0: importance=0.0003, rank=1
   2. Feature_82_t3: importance=0.0002, rank=2
   3. Feature_85_t1: importance=0.0002, rank=3
   4. Feature_77_t3: importance=0.0002, rank=4
   5. Feature_2_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for FOXF...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FOXF...

==================================================
Training Enhanced FOXF (SVM)
==================================================
Training SVM model...

Enhanced FOXF Performance:
MAE: 207057.2188
RMSE: 285488.5707
MAPE: 9.26%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 28
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0008, rank=1
   2. Feature_2_t0: importance=0.0005, rank=2
   3. Feature_0_t0: importance=0.0004, rank=3
   4. Feature_2_t2: importance=0.0004, rank=4
   5. Feature_1_t0: importance=0.0003, rank=5

📊 FOXF Results:
  Baseline MAPE: 9.32%
  Enhanced MAPE: 9.26%
  MAPE Improvement: +0.06% (+0.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 165/464: FRPT
============================================================
📊 Loading data for FRPT...
📊 Loading data for FRPT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FRPT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FRPT...

==================================================
Training Baseline FRPT (SVM)
==================================================
Training SVM model...

Baseline FRPT Performance:
MAE: 376740.4483
RMSE: 456983.2241
MAPE: 6.92%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 229
   • Highly important features (top 5%): 131

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t3: importance=0.0004, rank=1
   2. Feature_96_t3: importance=0.0003, rank=2
   3. Feature_63_t1: importance=0.0002, rank=3
   4. Feature_86_t1: importance=0.0002, rank=4
   5. Feature_64_t0: importance=0.0001, rank=5

🔧 Applying universal feature engineering for FRPT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FRPT...

==================================================
Training Enhanced FRPT (SVM)
==================================================
Training SVM model...

Enhanced FRPT Performance:
MAE: 313520.2607
RMSE: 397541.8447
MAPE: 5.57%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 54
   • Highly important features (top 5%): 33

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0014, rank=1
   2. Feature_1_t2: importance=0.0013, rank=2
   3. Feature_8_t0: importance=0.0005, rank=3
   4. Feature_2_t3: importance=0.0005, rank=4
   5. Feature_10_t0: importance=0.0005, rank=5

📊 FRPT Results:
  Baseline MAPE: 6.92%
  Enhanced MAPE: 5.57%
  MAPE Improvement: +1.35% (+19.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 166/464: FSS
============================================================
📊 Loading data for FSS...
📊 Loading data for FSS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FSS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FSS...

==================================================
Training Baseline FSS (SVM)
==================================================
Training SVM model...

Baseline FSS Performance:
MAE: 256206.1973
RMSE: 343577.1491
MAPE: 13.81%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 278
   • Highly important features (top 5%): 149

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_84_t3: importance=0.0010, rank=1
   2. Feature_90_t3: importance=0.0008, rank=2
   3. Feature_2_t3: importance=0.0008, rank=3
   4. Feature_72_t0: importance=0.0008, rank=4
   5. Feature_78_t0: importance=0.0007, rank=5

🔧 Applying universal feature engineering for FSS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FSS...

==================================================
Training Enhanced FSS (SVM)
==================================================
Training SVM model...

Enhanced FSS Performance:
MAE: 284271.2187
RMSE: 386567.0394
MAPE: 14.73%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 29
   • Highly important features (top 5%): 18

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0209, rank=1
   2. Feature_0_t2: importance=0.0058, rank=2
   3. Feature_2_t2: importance=0.0050, rank=3
   4. Feature_2_t3: importance=0.0047, rank=4
   5. Feature_0_t1: importance=0.0028, rank=5

📊 FSS Results:
  Baseline MAPE: 13.81%
  Enhanced MAPE: 14.73%
  MAPE Improvement: -0.92% (-6.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 167/464: FUL
============================================================
📊 Loading data for FUL...
📊 Loading data for FUL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FUL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FUL...

==================================================
Training Baseline FUL (SVM)
==================================================
Training SVM model...

Baseline FUL Performance:
MAE: 103633.6545
RMSE: 128316.7766
MAPE: 9.55%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 335
   • Highly important features (top 5%): 188

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_74_t2: importance=0.0002, rank=1
   2. Feature_87_t2: importance=0.0002, rank=2
   3. Feature_78_t1: importance=0.0002, rank=3
   4. Feature_74_t1: importance=0.0001, rank=4
   5. Feature_77_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for FUL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FUL...

==================================================
Training Enhanced FUL (SVM)
==================================================
Training SVM model...

Enhanced FUL Performance:
MAE: 102708.4362
RMSE: 129628.8426
MAPE: 9.63%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 47
   • Highly important features (top 5%): 32

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0020, rank=1
   2. Feature_0_t3: importance=0.0017, rank=2
   3. Feature_2_t1: importance=0.0008, rank=3
   4. Feature_11_t2: importance=0.0007, rank=4
   5. Feature_2_t3: importance=0.0007, rank=5

📊 FUL Results:
  Baseline MAPE: 9.55%
  Enhanced MAPE: 9.63%
  MAPE Improvement: -0.07% (-0.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 168/464: FULT
============================================================
📊 Loading data for FULT...
📊 Loading data for FULT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FULT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FULT...

==================================================
Training Baseline FULT (SVM)
==================================================
Training SVM model...

Baseline FULT Performance:
MAE: 478744.3253
RMSE: 618349.5425
MAPE: 7.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 305
   • Highly important features (top 5%): 162

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t2: importance=0.0002, rank=1
   2. Feature_86_t0: importance=0.0001, rank=2
   3. Feature_86_t3: importance=0.0001, rank=3
   4. Feature_82_t0: importance=0.0001, rank=4
   5. Feature_77_t0: importance=0.0001, rank=5

🔧 Applying universal feature engineering for FULT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FULT...

==================================================
Training Enhanced FULT (SVM)
==================================================
Training SVM model...

Enhanced FULT Performance:
MAE: 592535.7125
RMSE: 728015.6510
MAPE: 9.90%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 22
   • Highly important features (top 5%): 11

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0042, rank=1
   2. Feature_0_t0: importance=0.0015, rank=2
   3. Feature_1_t0: importance=0.0010, rank=3
   4. Feature_0_t2: importance=0.0007, rank=4
   5. Feature_2_t1: importance=0.0007, rank=5

📊 FULT Results:
  Baseline MAPE: 7.94%
  Enhanced MAPE: 9.90%
  MAPE Improvement: -1.96% (-24.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 169/464: FUN
============================================================
📊 Loading data for FUN...
📊 Loading data for FUN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing FUN: 'FUN'

============================================================
TESTING TICKER 170/464: FWRD
============================================================
📊 Loading data for FWRD...
📊 Loading data for FWRD from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for FWRD...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for FWRD...

==================================================
Training Baseline FWRD (SVM)
==================================================
Training SVM model...

Baseline FWRD Performance:
MAE: 575278.5962
RMSE: 708856.5915
MAPE: 14.02%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 269
   • Highly important features (top 5%): 148

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0017, rank=1
   2. Feature_92_t3: importance=0.0012, rank=2
   3. Feature_74_t3: importance=0.0009, rank=3
   4. Feature_71_t3: importance=0.0009, rank=4
   5. Feature_72_t3: importance=0.0009, rank=5

🔧 Applying universal feature engineering for FWRD...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for FWRD...

==================================================
Training Enhanced FWRD (SVM)
==================================================
Training SVM model...

Enhanced FWRD Performance:
MAE: 441495.6405
RMSE: 574650.2994
MAPE: 11.04%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 53
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0110, rank=1
   2. Feature_2_t1: importance=0.0031, rank=2
   3. Feature_1_t3: importance=0.0019, rank=3
   4. Feature_0_t0: importance=0.0019, rank=4
   5. Feature_0_t1: importance=0.0018, rank=5

📊 FWRD Results:
  Baseline MAPE: 14.02%
  Enhanced MAPE: 11.04%
  MAPE Improvement: +2.99% (+21.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 171/464: GBX
============================================================
📊 Loading data for GBX...
📊 Loading data for GBX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for GBX...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for GBX...

==================================================
Training Baseline GBX (SVM)
==================================================
Training SVM model...

Baseline GBX Performance:
MAE: 99882.6544
RMSE: 125008.1071
MAPE: 5.25%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 197
   • Highly important features (top 5%): 102

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_88_t1: importance=0.0001, rank=1
   2. Feature_78_t3: importance=0.0001, rank=2
   3. Feature_89_t0: importance=0.0001, rank=3
   4. Feature_77_t3: importance=0.0001, rank=4
   5. Feature_72_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for GBX...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for GBX...

==================================================
Training Enhanced GBX (SVM)
==================================================
Training SVM model...

Enhanced GBX Performance:
MAE: 113624.1841
RMSE: 134091.9298
MAPE: 5.98%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 25
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0017, rank=1
   2. Feature_2_t2: importance=0.0003, rank=2
   3. Feature_1_t0: importance=0.0003, rank=3
   4. Feature_0_t0: importance=0.0003, rank=4
   5. Feature_1_t3: importance=0.0002, rank=5

📊 GBX Results:
  Baseline MAPE: 5.25%
  Enhanced MAPE: 5.98%
  MAPE Improvement: -0.74% (-14.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 172/464: GDEN
============================================================
📊 Loading data for GDEN...
📊 Loading data for GDEN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for GDEN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for GDEN...

==================================================
Training Baseline GDEN (SVM)
==================================================
Training SVM model...

Baseline GDEN Performance:
MAE: 69222.9505
RMSE: 82323.8935
MAPE: 10.40%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 147
   • Highly important features (top 5%): 82

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_88_t0: importance=0.0016, rank=1
   2. Feature_63_t0: importance=0.0008, rank=2
   3. Feature_89_t1: importance=0.0008, rank=3
   4. Feature_90_t3: importance=0.0005, rank=4
   5. Feature_72_t0: importance=0.0005, rank=5

🔧 Applying universal feature engineering for GDEN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for GDEN...

==================================================
Training Enhanced GDEN (SVM)
==================================================
Training SVM model...

Enhanced GDEN Performance:
MAE: 53547.9327
RMSE: 73173.5545
MAPE: 8.70%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 43
   • Highly important features (top 5%): 27

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0059, rank=1
   2. Feature_0_t3: importance=0.0058, rank=2
   3. Feature_2_t3: importance=0.0028, rank=3
   4. Feature_1_t2: importance=0.0020, rank=4
   5. Feature_0_t0: importance=0.0020, rank=5

📊 GDEN Results:
  Baseline MAPE: 10.40%
  Enhanced MAPE: 8.70%
  MAPE Improvement: +1.69% (+16.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 173/464: GEO
============================================================
📊 Loading data for GEO...
📊 Loading data for GEO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for GEO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for GEO...

==================================================
Training Baseline GEO (SVM)
==================================================
Training SVM model...

Baseline GEO Performance:
MAE: 1382629.5469
RMSE: 1924315.3068
MAPE: 13.18%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 168
   • Highly important features (top 5%): 71

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0008, rank=1
   2. Feature_66_t3: importance=0.0006, rank=2
   3. Feature_92_t1: importance=0.0004, rank=3
   4. Feature_89_t1: importance=0.0003, rank=4
   5. Feature_74_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for GEO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for GEO...

==================================================
Training Enhanced GEO (SVM)
==================================================
Training SVM model...

Enhanced GEO Performance:
MAE: 1359562.5124
RMSE: 2178580.2416
MAPE: 13.15%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 32

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0013, rank=1
   2. Feature_1_t3: importance=0.0007, rank=2
   3. Feature_8_t3: importance=0.0007, rank=3
   4. Feature_2_t0: importance=0.0006, rank=4
   5. Feature_1_t2: importance=0.0006, rank=5

📊 GEO Results:
  Baseline MAPE: 13.18%
  Enhanced MAPE: 13.15%
  MAPE Improvement: +0.04% (+0.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 174/464: GES
============================================================
📊 Loading data for GES...
📊 Loading data for GES from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for GES...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for GES...

==================================================
Training Baseline GES (SVM)
==================================================
Training SVM model...

Baseline GES Performance:
MAE: 650567.2925
RMSE: 840948.3848
MAPE: 8.10%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 86
   • Highly important features (top 5%): 39

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_81_t2: importance=0.0018, rank=1
   2. Feature_82_t2: importance=0.0008, rank=2
   3. Feature_94_t3: importance=0.0006, rank=3
   4. Feature_2_t1: importance=0.0003, rank=4
   5. Feature_81_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for GES...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for GES...

==================================================
Training Enhanced GES (SVM)
==================================================
Training SVM model...

Enhanced GES Performance:
MAE: 646604.4291
RMSE: 870066.1491
MAPE: 7.86%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 31
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0010, rank=1
   2. Feature_2_t3: importance=0.0009, rank=2
   3. Feature_0_t0: importance=0.0008, rank=3
   4. Feature_2_t2: importance=0.0007, rank=4
   5. Feature_1_t3: importance=0.0006, rank=5

📊 GES Results:
  Baseline MAPE: 8.10%
  Enhanced MAPE: 7.86%
  MAPE Improvement: +0.24% (+3.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 175/464: GFF
============================================================
📊 Loading data for GFF...
📊 Loading data for GFF from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for GFF...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for GFF...

==================================================
Training Baseline GFF (SVM)
==================================================
Training SVM model...

Baseline GFF Performance:
MAE: 216631.6816
RMSE: 277309.2795
MAPE: 10.67%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 183
   • Highly important features (top 5%): 115

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t2: importance=0.0008, rank=1
   2. Feature_82_t1: importance=0.0006, rank=2
   3. Feature_86_t3: importance=0.0006, rank=3
   4. Feature_73_t3: importance=0.0004, rank=4
   5. Feature_83_t0: importance=0.0004, rank=5

🔧 Applying universal feature engineering for GFF...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for GFF...

==================================================
Training Enhanced GFF (SVM)
==================================================
Training SVM model...

Enhanced GFF Performance:
MAE: 199846.3005
RMSE: 263353.3285
MAPE: 9.71%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 33
   • Highly important features (top 5%): 18

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0026, rank=1
   2. Feature_2_t1: importance=0.0009, rank=2
   3. Feature_0_t1: importance=0.0009, rank=3
   4. Feature_0_t3: importance=0.0008, rank=4
   5. Feature_1_t2: importance=0.0008, rank=5

📊 GFF Results:
  Baseline MAPE: 10.67%
  Enhanced MAPE: 9.71%
  MAPE Improvement: +0.96% (+9.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 176/464: GIII
============================================================
📊 Loading data for GIII...
📊 Loading data for GIII from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for GIII...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for GIII...

==================================================
Training Baseline GIII (SVM)
==================================================
Training SVM model...

Baseline GIII Performance:
MAE: 271246.6803
RMSE: 325916.7178
MAPE: 5.98%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 149
   • Highly important features (top 5%): 96

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0002, rank=1
   2. Feature_73_t1: importance=0.0001, rank=2
   3. Feature_64_t3: importance=0.0001, rank=3
   4. Feature_68_t0: importance=0.0001, rank=4
   5. Feature_68_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for GIII...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for GIII...

==================================================
Training Enhanced GIII (SVM)
==================================================
Training SVM model...

Enhanced GIII Performance:
MAE: 254569.3775
RMSE: 311613.7998
MAPE: 5.55%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 35
   • Highly important features (top 5%): 22

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0008, rank=1
   2. Feature_1_t1: importance=0.0006, rank=2
   3. Feature_0_t3: importance=0.0005, rank=3
   4. Feature_5_t2: importance=0.0003, rank=4
   5. Feature_1_t3: importance=0.0003, rank=5

📊 GIII Results:
  Baseline MAPE: 5.98%
  Enhanced MAPE: 5.55%
  MAPE Improvement: +0.43% (+7.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 177/464: GKOS
============================================================
📊 Loading data for GKOS...
📊 Loading data for GKOS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for GKOS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for GKOS...

==================================================
Training Baseline GKOS (SVM)
==================================================
Training SVM model...

Baseline GKOS Performance:
MAE: 376648.7428
RMSE: 646612.1536
MAPE: 11.00%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 180
   • Highly important features (top 5%): 91

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_64_t3: importance=0.0005, rank=1
   2. Feature_68_t3: importance=0.0004, rank=2
   3. Feature_65_t3: importance=0.0003, rank=3
   4. Feature_1_t3: importance=0.0003, rank=4
   5. Feature_72_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for GKOS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for GKOS...

==================================================
Training Enhanced GKOS (SVM)
==================================================
Training SVM model...

Enhanced GKOS Performance:
MAE: 415081.1565
RMSE: 655509.8112
MAPE: 12.12%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 25
   • Highly important features (top 5%): 12

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0018, rank=1
   2. Feature_1_t3: importance=0.0009, rank=2
   3. Feature_6_t3: importance=0.0008, rank=3
   4. Feature_0_t0: importance=0.0007, rank=4
   5. Feature_2_t3: importance=0.0007, rank=5

📊 GKOS Results:
  Baseline MAPE: 11.00%
  Enhanced MAPE: 12.12%
  MAPE Improvement: -1.12% (-10.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 178/464: GNL
============================================================
📊 Loading data for GNL...
📊 Loading data for GNL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for GNL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for GNL...

==================================================
Training Baseline GNL (SVM)
==================================================
Training SVM model...

Baseline GNL Performance:
MAE: 1154755.9995
RMSE: 1693864.6118
MAPE: 14.48%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 225
   • Highly important features (top 5%): 120

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t1: importance=0.0009, rank=1
   2. Feature_94_t2: importance=0.0007, rank=2
   3. Feature_2_t2: importance=0.0006, rank=3
   4. Feature_68_t0: importance=0.0005, rank=4
   5. Feature_69_t0: importance=0.0005, rank=5

🔧 Applying universal feature engineering for GNL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for GNL...

==================================================
Training Enhanced GNL (SVM)
==================================================
Training SVM model...

Enhanced GNL Performance:
MAE: 1144994.5427
RMSE: 1671798.9240
MAPE: 14.31%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 55
   • Highly important features (top 5%): 35

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0027, rank=1
   2. Feature_6_t0: importance=0.0021, rank=2
   3. Feature_1_t3: importance=0.0017, rank=3
   4. Feature_5_t0: importance=0.0016, rank=4
   5. Feature_0_t0: importance=0.0015, rank=5

📊 GNL Results:
  Baseline MAPE: 14.48%
  Enhanced MAPE: 14.31%
  MAPE Improvement: +0.17% (+1.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 179/464: GNW
============================================================
📊 Loading data for GNW...
📊 Loading data for GNW from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for GNW...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for GNW...

==================================================
Training Baseline GNW (SVM)
==================================================
Training SVM model...

Baseline GNW Performance:
MAE: 719075.3679
RMSE: 931822.8471
MAPE: 9.83%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 283
   • Highly important features (top 5%): 130

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t2: importance=0.0004, rank=1
   2. Feature_65_t3: importance=0.0003, rank=2
   3. Feature_63_t0: importance=0.0002, rank=3
   4. Feature_92_t1: importance=0.0002, rank=4
   5. Feature_69_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for GNW...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for GNW...

==================================================
Training Enhanced GNW (SVM)
==================================================
Training SVM model...

Enhanced GNW Performance:
MAE: 783161.8180
RMSE: 981567.8075
MAPE: 10.72%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 56
   • Highly important features (top 5%): 44

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0017, rank=1
   2. Feature_1_t0: importance=0.0012, rank=2
   3. Feature_1_t3: importance=0.0011, rank=3
   4. Feature_0_t1: importance=0.0011, rank=4
   5. Feature_0_t0: importance=0.0009, rank=5

📊 GNW Results:
  Baseline MAPE: 9.83%
  Enhanced MAPE: 10.72%
  MAPE Improvement: -0.89% (-9.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 180/464: GOGO
============================================================
📊 Loading data for GOGO...
📊 Loading data for GOGO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing GOGO: 'GOGO'

============================================================
TESTING TICKER 181/464: GOLF
============================================================
📊 Loading data for GOLF...
📊 Loading data for GOLF from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for GOLF...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for GOLF...

==================================================
Training Baseline GOLF (SVM)
==================================================
Training SVM model...

Baseline GOLF Performance:
MAE: 393954.2907
RMSE: 491153.9049
MAPE: 7.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 137
   • Highly important features (top 5%): 47

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_82_t2: importance=0.0003, rank=1
   2. Feature_64_t3: importance=0.0003, rank=2
   3. Feature_84_t2: importance=0.0002, rank=3
   4. Feature_72_t2: importance=0.0002, rank=4
   5. Feature_0_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for GOLF...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for GOLF...

==================================================
Training Enhanced GOLF (SVM)
==================================================
Training SVM model...

Enhanced GOLF Performance:
MAE: 355467.7116
RMSE: 464011.2796
MAPE: 7.16%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 24
   • Highly important features (top 5%): 11

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0028, rank=1
   2. Feature_1_t1: importance=0.0013, rank=2
   3. Feature_0_t2: importance=0.0006, rank=3
   4. Feature_1_t0: importance=0.0005, rank=4
   5. Feature_0_t0: importance=0.0004, rank=5

📊 GOLF Results:
  Baseline MAPE: 7.94%
  Enhanced MAPE: 7.16%
  MAPE Improvement: +0.78% (+9.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 182/464: GPI
============================================================
📊 Loading data for GPI...
📊 Loading data for GPI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for GPI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for GPI...

==================================================
Training Baseline GPI (SVM)
==================================================
Training SVM model...

Baseline GPI Performance:
MAE: 55553.2008
RMSE: 75311.6245
MAPE: 3.80%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 100
   • Highly important features (top 5%): 49

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_80_t0: importance=0.0000, rank=1
   2. Feature_84_t3: importance=0.0000, rank=2
   3. Feature_67_t3: importance=0.0000, rank=3
   4. Feature_69_t3: importance=0.0000, rank=4
   5. Feature_74_t0: importance=0.0000, rank=5

🔧 Applying universal feature engineering for GPI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for GPI...

==================================================
Training Enhanced GPI (SVM)
==================================================
Training SVM model...

Enhanced GPI Performance:
MAE: 55839.8005
RMSE: 76180.0483
MAPE: 3.81%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 20
   • Highly important features (top 5%): 11

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0001, rank=1
   2. Feature_0_t2: importance=0.0001, rank=2
   3. Feature_2_t3: importance=0.0001, rank=3
   4. Feature_1_t3: importance=0.0001, rank=4
   5. Feature_2_t2: importance=0.0001, rank=5

📊 GPI Results:
  Baseline MAPE: 3.80%
  Enhanced MAPE: 3.81%
  MAPE Improvement: -0.02% (-0.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 183/464: GRBK
============================================================
📊 Loading data for GRBK...
📊 Loading data for GRBK from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for GRBK...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for GRBK...

==================================================
Training Baseline GRBK (SVM)
==================================================
Training SVM model...

Baseline GRBK Performance:
MAE: 164137.8699
RMSE: 234359.7412
MAPE: 11.77%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 126
   • Highly important features (top 5%): 50

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t3: importance=0.0018, rank=1
   2. Feature_67_t3: importance=0.0017, rank=2
   3. Feature_76_t3: importance=0.0017, rank=3
   4. Feature_74_t1: importance=0.0016, rank=4
   5. Feature_74_t3: importance=0.0015, rank=5

🔧 Applying universal feature engineering for GRBK...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for GRBK...

==================================================
Training Enhanced GRBK (SVM)
==================================================
Training SVM model...

Enhanced GRBK Performance:
MAE: 142864.2410
RMSE: 214104.3715
MAPE: 10.43%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 31
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0090, rank=1
   2. Feature_0_t2: importance=0.0084, rank=2
   3. Feature_1_t3: importance=0.0075, rank=3
   4. Feature_0_t3: importance=0.0063, rank=4
   5. Feature_1_t1: importance=0.0049, rank=5

📊 GRBK Results:
  Baseline MAPE: 11.77%
  Enhanced MAPE: 10.43%
  MAPE Improvement: +1.34% (+11.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 184/464: GTY
============================================================
📊 Loading data for GTY...
📊 Loading data for GTY from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for GTY...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for GTY...

==================================================
Training Baseline GTY (SVM)
==================================================
Training SVM model...

Baseline GTY Performance:
MAE: 414470.8500
RMSE: 605212.8205
MAPE: 13.37%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 256
   • Highly important features (top 5%): 112

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_67_t3: importance=0.0015, rank=1
   2. Feature_86_t1: importance=0.0008, rank=2
   3. Feature_63_t0: importance=0.0008, rank=3
   4. Feature_68_t3: importance=0.0007, rank=4
   5. Feature_86_t2: importance=0.0007, rank=5

🔧 Applying universal feature engineering for GTY...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for GTY...

==================================================
Training Enhanced GTY (SVM)
==================================================
Training SVM model...

Enhanced GTY Performance:
MAE: 375828.4806
RMSE: 575604.9973
MAPE: 11.27%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 59
   • Highly important features (top 5%): 47

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0037, rank=1
   2. Feature_1_t3: importance=0.0023, rank=2
   3. Feature_0_t3: importance=0.0018, rank=3
   4. Feature_10_t3: importance=0.0018, rank=4
   5. Feature_0_t1: importance=0.0017, rank=5

📊 GTY Results:
  Baseline MAPE: 13.37%
  Enhanced MAPE: 11.27%
  MAPE Improvement: +2.11% (+15.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 185/464: GVA
============================================================
📊 Loading data for GVA...
📊 Loading data for GVA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for GVA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for GVA...

==================================================
Training Baseline GVA (SVM)
==================================================
Training SVM model...

Baseline GVA Performance:
MAE: 316147.5286
RMSE: 410846.7661
MAPE: 6.98%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 109
   • Highly important features (top 5%): 77

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_74_t3: importance=0.0008, rank=1
   2. Feature_65_t0: importance=0.0006, rank=2
   3. Feature_2_t3: importance=0.0004, rank=3
   4. Feature_80_t3: importance=0.0002, rank=4
   5. Feature_93_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for GVA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for GVA...

==================================================
Training Enhanced GVA (SVM)
==================================================
Training SVM model...

Enhanced GVA Performance:
MAE: 383582.3221
RMSE: 451806.5776
MAPE: 8.43%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0013, rank=1
   2. Feature_0_t2: importance=0.0010, rank=2
   3. Feature_1_t3: importance=0.0009, rank=3
   4. Feature_2_t1: importance=0.0007, rank=4
   5. Feature_5_t3: importance=0.0006, rank=5

📊 GVA Results:
  Baseline MAPE: 6.98%
  Enhanced MAPE: 8.43%
  MAPE Improvement: -1.45% (-20.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 186/464: HAFC
============================================================
📊 Loading data for HAFC...
📊 Loading data for HAFC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HAFC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HAFC...

==================================================
Training Baseline HAFC (SVM)
==================================================
Training SVM model...

Baseline HAFC Performance:
MAE: 86436.5512
RMSE: 117367.2498
MAPE: 14.99%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 286
   • Highly important features (top 5%): 144

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t3: importance=0.0009, rank=1
   2. Feature_84_t2: importance=0.0007, rank=2
   3. Feature_82_t1: importance=0.0007, rank=3
   4. Feature_79_t1: importance=0.0005, rank=4
   5. Feature_0_t2: importance=0.0005, rank=5

🔧 Applying universal feature engineering for HAFC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HAFC...

==================================================
Training Enhanced HAFC (SVM)
==================================================
Training SVM model...

Enhanced HAFC Performance:
MAE: 84972.9252
RMSE: 123332.8932
MAPE: 14.70%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 50
   • Highly important features (top 5%): 32

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0032, rank=1
   2. Feature_1_t1: importance=0.0029, rank=2
   3. Feature_0_t2: importance=0.0021, rank=3
   4. Feature_1_t3: importance=0.0014, rank=4
   5. Feature_1_t2: importance=0.0013, rank=5

📊 HAFC Results:
  Baseline MAPE: 14.99%
  Enhanced MAPE: 14.70%
  MAPE Improvement: +0.29% (+1.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 187/464: HASI
============================================================
📊 Loading data for HASI...
📊 Loading data for HASI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HASI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HASI...

==================================================
Training Baseline HASI (SVM)
==================================================
Training SVM model...

Baseline HASI Performance:
MAE: 669254.9141
RMSE: 820114.3043
MAPE: 5.00%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 193
   • Highly important features (top 5%): 121

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_96_t2: importance=0.0003, rank=1
   2. Feature_68_t3: importance=0.0002, rank=2
   3. Feature_67_t3: importance=0.0002, rank=3
   4. Feature_67_t1: importance=0.0002, rank=4
   5. Feature_2_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for HASI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HASI...

==================================================
Training Enhanced HASI (SVM)
==================================================
Training SVM model...

Enhanced HASI Performance:
MAE: 735308.6393
RMSE: 836186.3281
MAPE: 5.48%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 26
   • Highly important features (top 5%): 21

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0008, rank=1
   2. Feature_1_t3: importance=0.0004, rank=2
   3. Feature_10_t0: importance=0.0004, rank=3
   4. Feature_7_t0: importance=0.0003, rank=4
   5. Feature_14_t0: importance=0.0003, rank=5

📊 HASI Results:
  Baseline MAPE: 5.00%
  Enhanced MAPE: 5.48%
  MAPE Improvement: -0.48% (-9.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 188/464: HBI
============================================================
📊 Loading data for HBI...
📊 Loading data for HBI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HBI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HBI...

==================================================
Training Baseline HBI (SVM)
==================================================
Training SVM model...

Baseline HBI Performance:
MAE: 2349478.4081
RMSE: 3273338.1051
MAPE: 5.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 183
   • Highly important features (top 5%): 94

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_94_t3: importance=0.0001, rank=1
   2. Feature_71_t0: importance=0.0001, rank=2
   3. Feature_64_t3: importance=0.0001, rank=3
   4. Feature_96_t0: importance=0.0001, rank=4
   5. Feature_2_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for HBI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HBI...

==================================================
Training Enhanced HBI (SVM)
==================================================
Training SVM model...

Enhanced HBI Performance:
MAE: 2967394.7440
RMSE: 3664566.1526
MAPE: 7.41%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0008, rank=1
   2. Feature_7_t1: importance=0.0004, rank=2
   3. Feature_2_t2: importance=0.0004, rank=3
   4. Feature_12_t1: importance=0.0004, rank=4
   5. Feature_5_t3: importance=0.0004, rank=5

📊 HBI Results:
  Baseline MAPE: 5.74%
  Enhanced MAPE: 7.41%
  MAPE Improvement: -1.68% (-29.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 189/464: HCC
============================================================
📊 Loading data for HCC...
📊 Loading data for HCC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing HCC: 'HCC'

============================================================
TESTING TICKER 190/464: HCI
============================================================
📊 Loading data for HCI...
📊 Loading data for HCI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing HCI: 'HCI'

============================================================
TESTING TICKER 191/464: HCSG
============================================================
📊 Loading data for HCSG...
📊 Loading data for HCSG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HCSG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HCSG...

==================================================
Training Baseline HCSG (SVM)
==================================================
Training SVM model...

Baseline HCSG Performance:
MAE: 183632.0108
RMSE: 240592.0337
MAPE: 7.46%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 107
   • Highly important features (top 5%): 57

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t3: importance=0.0012, rank=1
   2. Feature_72_t1: importance=0.0002, rank=2
   3. Feature_71_t3: importance=0.0001, rank=3
   4. Feature_73_t3: importance=0.0001, rank=4
   5. Feature_65_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for HCSG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HCSG...

==================================================
Training Enhanced HCSG (SVM)
==================================================
Training SVM model...

Enhanced HCSG Performance:
MAE: 184106.5106
RMSE: 243648.8300
MAPE: 7.47%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 28

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_7_t3: importance=0.0002, rank=1
   2. Feature_4_t3: importance=0.0002, rank=2
   3. Feature_9_t3: importance=0.0002, rank=3
   4. Feature_2_t0: importance=0.0002, rank=4
   5. Feature_2_t2: importance=0.0001, rank=5

📊 HCSG Results:
  Baseline MAPE: 7.46%
  Enhanced MAPE: 7.47%
  MAPE Improvement: -0.01% (-0.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 192/464: HELE
============================================================
📊 Loading data for HELE...
📊 Loading data for HELE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HELE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HELE...

==================================================
Training Baseline HELE (SVM)
==================================================
Training SVM model...

Baseline HELE Performance:
MAE: 233570.6037
RMSE: 284232.7080
MAPE: 9.19%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 217
   • Highly important features (top 5%): 130

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_64_t3: importance=0.0004, rank=1
   2. Feature_84_t1: importance=0.0003, rank=2
   3. Feature_63_t1: importance=0.0003, rank=3
   4. Feature_63_t0: importance=0.0003, rank=4
   5. Feature_94_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for HELE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HELE...

==================================================
Training Enhanced HELE (SVM)
==================================================
Training SVM model...

Enhanced HELE Performance:
MAE: 255187.5528
RMSE: 333073.5563
MAPE: 10.57%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 44
   • Highly important features (top 5%): 29

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0020, rank=1
   2. Feature_0_t2: importance=0.0011, rank=2
   3. Feature_0_t0: importance=0.0008, rank=3
   4. Feature_1_t2: importance=0.0008, rank=4
   5. Feature_5_t3: importance=0.0008, rank=5

📊 HELE Results:
  Baseline MAPE: 9.19%
  Enhanced MAPE: 10.57%
  MAPE Improvement: -1.39% (-15.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 193/464: HFWA
============================================================
📊 Loading data for HFWA...
📊 Loading data for HFWA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HFWA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HFWA...

==================================================
Training Baseline HFWA (SVM)
==================================================
Training SVM model...

Baseline HFWA Performance:
MAE: 63617.3311
RMSE: 80433.4092
MAPE: 10.08%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 252
   • Highly important features (top 5%): 120

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t3: importance=0.0003, rank=1
   2. Feature_84_t0: importance=0.0002, rank=2
   3. Feature_92_t3: importance=0.0002, rank=3
   4. Feature_65_t1: importance=0.0002, rank=4
   5. Feature_86_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for HFWA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HFWA...

==================================================
Training Enhanced HFWA (SVM)
==================================================
Training SVM model...

Enhanced HFWA Performance:
MAE: 65292.5104
RMSE: 77312.6283
MAPE: 10.67%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t0: importance=0.0010, rank=1
   2. Feature_1_t3: importance=0.0008, rank=2
   3. Feature_1_t2: importance=0.0007, rank=3
   4. Feature_2_t1: importance=0.0005, rank=4
   5. Feature_2_t0: importance=0.0005, rank=5

📊 HFWA Results:
  Baseline MAPE: 10.08%
  Enhanced MAPE: 10.67%
  MAPE Improvement: -0.58% (-5.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 194/464: HI
============================================================
📊 Loading data for HI...
📊 Loading data for HI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HI...

==================================================
Training Baseline HI (SVM)
==================================================
Training SVM model...

Baseline HI Performance:
MAE: 179058.1912
RMSE: 232201.4193
MAPE: 9.71%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 184
   • Highly important features (top 5%): 55

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_69_t3: importance=0.0014, rank=1
   2. Feature_71_t3: importance=0.0013, rank=2
   3. Feature_72_t3: importance=0.0011, rank=3
   4. Feature_70_t3: importance=0.0011, rank=4
   5. Feature_65_t0: importance=0.0009, rank=5

🔧 Applying universal feature engineering for HI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HI...

==================================================
Training Enhanced HI (SVM)
==================================================
Training SVM model...

Enhanced HI Performance:
MAE: 225877.0369
RMSE: 268971.9289
MAPE: 11.98%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 43
   • Highly important features (top 5%): 32

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0059, rank=1
   2. Feature_0_t3: importance=0.0032, rank=2
   3. Feature_2_t3: importance=0.0031, rank=3
   4. Feature_2_t1: importance=0.0022, rank=4
   5. Feature_1_t3: importance=0.0022, rank=5

📊 HI Results:
  Baseline MAPE: 9.71%
  Enhanced MAPE: 11.98%
  MAPE Improvement: -2.26% (-23.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 195/464: HIW
============================================================
📊 Loading data for HIW...
📊 Loading data for HIW from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HIW...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HIW...

==================================================
Training Baseline HIW (SVM)
==================================================
Training SVM model...

Baseline HIW Performance:
MAE: 753974.0456
RMSE: 977352.3677
MAPE: 14.77%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 247
   • Highly important features (top 5%): 126

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_64_t2: importance=0.0008, rank=1
   2. Feature_96_t1: importance=0.0008, rank=2
   3. Feature_84_t2: importance=0.0008, rank=3
   4. Feature_63_t0: importance=0.0006, rank=4
   5. Feature_70_t0: importance=0.0006, rank=5

🔧 Applying universal feature engineering for HIW...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HIW...

==================================================
Training Enhanced HIW (SVM)
==================================================
Training SVM model...

Enhanced HIW Performance:
MAE: 737174.1884
RMSE: 991503.5708
MAPE: 13.99%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0065, rank=1
   2. Feature_1_t1: importance=0.0042, rank=2
   3. Feature_0_t0: importance=0.0036, rank=3
   4. Feature_1_t2: importance=0.0033, rank=4
   5. Feature_2_t0: importance=0.0025, rank=5

📊 HIW Results:
  Baseline MAPE: 14.77%
  Enhanced MAPE: 13.99%
  MAPE Improvement: +0.78% (+5.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 196/464: HL
============================================================
📊 Loading data for HL...
📊 Loading data for HL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HL...

==================================================
Training Baseline HL (SVM)
==================================================
Training SVM model...

Baseline HL Performance:
MAE: 2353785.5622
RMSE: 2830303.8659
MAPE: 11.80%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 219
   • Highly important features (top 5%): 115

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t2: importance=0.0004, rank=1
   2. Feature_72_t0: importance=0.0004, rank=2
   3. Feature_65_t3: importance=0.0003, rank=3
   4. Feature_84_t0: importance=0.0003, rank=4
   5. Feature_76_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for HL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HL...

==================================================
Training Enhanced HL (SVM)
==================================================
Training SVM model...

Enhanced HL Performance:
MAE: 2494536.8747
RMSE: 3173681.7282
MAPE: 12.27%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 33
   • Highly important features (top 5%): 8

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0036, rank=1
   2. Feature_1_t1: importance=0.0026, rank=2
   3. Feature_1_t0: importance=0.0017, rank=3
   4. Feature_0_t1: importance=0.0011, rank=4
   5. Feature_2_t1: importance=0.0009, rank=5

📊 HL Results:
  Baseline MAPE: 11.80%
  Enhanced MAPE: 12.27%
  MAPE Improvement: -0.48% (-4.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 197/464: HLIT
============================================================
📊 Loading data for HLIT...
📊 Loading data for HLIT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HLIT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HLIT...

==================================================
Training Baseline HLIT (SVM)
==================================================
Training SVM model...

Baseline HLIT Performance:
MAE: 496337.2135
RMSE: 680578.0265
MAPE: 11.30%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 159
   • Highly important features (top 5%): 84

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0002, rank=1
   2. Feature_65_t1: importance=0.0001, rank=2
   3. Feature_72_t0: importance=0.0001, rank=3
   4. Feature_73_t0: importance=0.0001, rank=4
   5. Feature_75_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for HLIT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HLIT...

==================================================
Training Enhanced HLIT (SVM)
==================================================
Training SVM model...

Enhanced HLIT Performance:
MAE: 620241.7729
RMSE: 809519.6984
MAPE: 14.00%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 28

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0003, rank=1
   2. Feature_0_t2: importance=0.0003, rank=2
   3. Feature_0_t0: importance=0.0002, rank=3
   4. Feature_1_t2: importance=0.0002, rank=4
   5. Feature_5_t1: importance=0.0002, rank=5

📊 HLIT Results:
  Baseline MAPE: 11.30%
  Enhanced MAPE: 14.00%
  MAPE Improvement: -2.70% (-23.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 198/464: HLX
============================================================
📊 Loading data for HLX...
📊 Loading data for HLX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HLX...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HLX...

==================================================
Training Baseline HLX (SVM)
==================================================
Training SVM model...

Baseline HLX Performance:
MAE: 661508.4500
RMSE: 787236.8069
MAPE: 12.58%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 179
   • Highly important features (top 5%): 64

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_67_t3: importance=0.0007, rank=1
   2. Feature_68_t3: importance=0.0002, rank=2
   3. Feature_0_t0: importance=0.0002, rank=3
   4. Feature_94_t1: importance=0.0001, rank=4
   5. Feature_0_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for HLX...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HLX...

==================================================
Training Enhanced HLX (SVM)
==================================================
Training SVM model...

Enhanced HLX Performance:
MAE: 688210.3983
RMSE: 872883.7524
MAPE: 12.47%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 38
   • Highly important features (top 5%): 29

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0023, rank=1
   2. Feature_0_t0: importance=0.0006, rank=2
   3. Feature_1_t0: importance=0.0006, rank=3
   4. Feature_0_t2: importance=0.0005, rank=4
   5. Feature_1_t2: importance=0.0005, rank=5

📊 HLX Results:
  Baseline MAPE: 12.58%
  Enhanced MAPE: 12.47%
  MAPE Improvement: +0.11% (+0.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 199/464: HMN
============================================================
📊 Loading data for HMN...
📊 Loading data for HMN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HMN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HMN...

==================================================
Training Baseline HMN (SVM)
==================================================
Training SVM model...

Baseline HMN Performance:
MAE: 95799.1083
RMSE: 119012.5424
MAPE: 15.10%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 312
   • Highly important features (top 5%): 167

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0008, rank=1
   2. Feature_63_t2: importance=0.0007, rank=2
   3. Feature_63_t3: importance=0.0006, rank=3
   4. Feature_92_t0: importance=0.0004, rank=4
   5. Feature_71_t3: importance=0.0004, rank=5

🔧 Applying universal feature engineering for HMN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HMN...

==================================================
Training Enhanced HMN (SVM)
==================================================
Training SVM model...

Enhanced HMN Performance:
MAE: 101759.7086
RMSE: 125125.6000
MAPE: 16.46%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 50
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0046, rank=1
   2. Feature_2_t3: importance=0.0044, rank=2
   3. Feature_1_t1: importance=0.0033, rank=3
   4. Feature_0_t0: importance=0.0020, rank=4
   5. Feature_1_t2: importance=0.0019, rank=5

📊 HMN Results:
  Baseline MAPE: 15.10%
  Enhanced MAPE: 16.46%
  MAPE Improvement: -1.36% (-9.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 200/464: HNI
============================================================
📊 Loading data for HNI...
📊 Loading data for HNI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HNI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HNI...

==================================================
Training Baseline HNI (SVM)
==================================================
Training SVM model...

Baseline HNI Performance:
MAE: 91598.0832
RMSE: 142941.6337
MAPE: 11.01%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 283
   • Highly important features (top 5%): 160

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t3: importance=0.0005, rank=1
   2. Feature_84_t2: importance=0.0004, rank=2
   3. Feature_95_t0: importance=0.0002, rank=3
   4. Feature_96_t0: importance=0.0002, rank=4
   5. Feature_80_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for HNI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HNI...

==================================================
Training Enhanced HNI (SVM)
==================================================
Training SVM model...

Enhanced HNI Performance:
MAE: 104313.6222
RMSE: 143675.0158
MAPE: 12.67%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 53
   • Highly important features (top 5%): 48

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0019, rank=1
   2. Feature_0_t1: importance=0.0011, rank=2
   3. Feature_10_t1: importance=0.0008, rank=3
   4. Feature_4_t1: importance=0.0008, rank=4
   5. Feature_7_t0: importance=0.0008, rank=5

📊 HNI Results:
  Baseline MAPE: 11.01%
  Enhanced MAPE: 12.67%
  MAPE Improvement: -1.66% (-15.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 201/464: HOPE
============================================================
📊 Loading data for HOPE...
📊 Loading data for HOPE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HOPE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HOPE...

==================================================
Training Baseline HOPE (SVM)
==================================================
Training SVM model...

Baseline HOPE Performance:
MAE: 300260.1804
RMSE: 390047.5549
MAPE: 12.89%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 214
   • Highly important features (top 5%): 95

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t0: importance=0.0005, rank=1
   2. Feature_70_t0: importance=0.0003, rank=2
   3. Feature_65_t1: importance=0.0003, rank=3
   4. Feature_89_t1: importance=0.0002, rank=4
   5. Feature_65_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for HOPE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HOPE...

==================================================
Training Enhanced HOPE (SVM)
==================================================
Training SVM model...

Enhanced HOPE Performance:
MAE: 315863.1157
RMSE: 401211.6481
MAPE: 13.57%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 44
   • Highly important features (top 5%): 35

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0013, rank=1
   2. Feature_0_t0: importance=0.0011, rank=2
   3. Feature_1_t2: importance=0.0010, rank=3
   4. Feature_1_t1: importance=0.0009, rank=4
   5. Feature_0_t1: importance=0.0009, rank=5

📊 HOPE Results:
  Baseline MAPE: 12.89%
  Enhanced MAPE: 13.57%
  MAPE Improvement: -0.68% (-5.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 202/464: HP
============================================================
📊 Loading data for HP...
📊 Loading data for HP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HP...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HP...

==================================================
Training Baseline HP (SVM)
==================================================
Training SVM model...

Baseline HP Performance:
MAE: 755520.5487
RMSE: 860802.1848
MAPE: 7.13%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 291
   • Highly important features (top 5%): 155

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_80_t3: importance=0.0003, rank=1
   2. Feature_91_t2: importance=0.0002, rank=2
   3. Feature_93_t3: importance=0.0002, rank=3
   4. Feature_81_t3: importance=0.0002, rank=4
   5. Feature_78_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for HP...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HP...

==================================================
Training Enhanced HP (SVM)
==================================================
Training SVM model...

Enhanced HP Performance:
MAE: 723727.1924
RMSE: 877865.2443
MAPE: 6.71%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 38
   • Highly important features (top 5%): 22

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0015, rank=1
   2. Feature_1_t2: importance=0.0011, rank=2
   3. Feature_0_t3: importance=0.0007, rank=3
   4. Feature_2_t2: importance=0.0006, rank=4
   5. Feature_1_t0: importance=0.0006, rank=5

📊 HP Results:
  Baseline MAPE: 7.13%
  Enhanced MAPE: 6.71%
  MAPE Improvement: +0.42% (+5.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 203/464: HSII
============================================================
📊 Loading data for HSII...
📊 Loading data for HSII from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HSII...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HSII...

==================================================
Training Baseline HSII (SVM)
==================================================
Training SVM model...

Baseline HSII Performance:
MAE: 64081.1806
RMSE: 80382.9944
MAPE: 15.90%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 283
   • Highly important features (top 5%): 132

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0020, rank=1
   2. Feature_0_t3: importance=0.0019, rank=2
   3. Feature_96_t3: importance=0.0016, rank=3
   4. Feature_63_t2: importance=0.0015, rank=4
   5. Feature_2_t3: importance=0.0013, rank=5

🔧 Applying universal feature engineering for HSII...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HSII...

==================================================
Training Enhanced HSII (SVM)
==================================================
Training SVM model...

Enhanced HSII Performance:
MAE: 68034.8752
RMSE: 80762.6147
MAPE: 16.19%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 28

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0124, rank=1
   2. Feature_0_t2: importance=0.0061, rank=2
   3. Feature_2_t0: importance=0.0050, rank=3
   4. Feature_2_t3: importance=0.0047, rank=4
   5. Feature_0_t0: importance=0.0045, rank=5

📊 HSII Results:
  Baseline MAPE: 15.90%
  Enhanced MAPE: 16.19%
  MAPE Improvement: -0.29% (-1.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 204/464: HSTM
============================================================
📊 Loading data for HSTM...
📊 Loading data for HSTM from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HSTM...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HSTM...

==================================================
Training Baseline HSTM (SVM)
==================================================
Training SVM model...

Baseline HSTM Performance:
MAE: 50557.4958
RMSE: 67391.8131
MAPE: 11.35%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 244
   • Highly important features (top 5%): 135

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_78_t3: importance=0.0008, rank=1
   2. Feature_88_t1: importance=0.0006, rank=2
   3. Feature_70_t1: importance=0.0005, rank=3
   4. Feature_82_t2: importance=0.0005, rank=4
   5. Feature_92_t2: importance=0.0005, rank=5

🔧 Applying universal feature engineering for HSTM...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HSTM...

==================================================
Training Enhanced HSTM (SVM)
==================================================
Training SVM model...

Enhanced HSTM Performance:
MAE: 57799.9203
RMSE: 77692.6642
MAPE: 12.71%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 27
   • Highly important features (top 5%): 14

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0057, rank=1
   2. Feature_1_t3: importance=0.0036, rank=2
   3. Feature_1_t2: importance=0.0035, rank=3
   4. Feature_0_t3: importance=0.0022, rank=4
   5. Feature_0_t0: importance=0.0019, rank=5

📊 HSTM Results:
  Baseline MAPE: 11.35%
  Enhanced MAPE: 12.71%
  MAPE Improvement: -1.36% (-12.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 205/464: HTH
============================================================
📊 Loading data for HTH...
📊 Loading data for HTH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HTH...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HTH...

==================================================
Training Baseline HTH (SVM)
==================================================
Training SVM model...

Baseline HTH Performance:
MAE: 134199.5678
RMSE: 174766.4854
MAPE: 11.51%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 160
   • Highly important features (top 5%): 80

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t2: importance=0.0020, rank=1
   2. Feature_89_t3: importance=0.0018, rank=2
   3. Feature_90_t3: importance=0.0017, rank=3
   4. Feature_94_t0: importance=0.0013, rank=4
   5. Feature_2_t2: importance=0.0011, rank=5

🔧 Applying universal feature engineering for HTH...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HTH...

==================================================
Training Enhanced HTH (SVM)
==================================================
Training SVM model...

Enhanced HTH Performance:
MAE: 122195.7926
RMSE: 156544.6031
MAPE: 10.82%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 50
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0041, rank=1
   2. Feature_0_t3: importance=0.0032, rank=2
   3. Feature_2_t2: importance=0.0031, rank=3
   4. Feature_1_t3: importance=0.0022, rank=4
   5. Feature_3_t3: importance=0.0019, rank=5

📊 HTH Results:
  Baseline MAPE: 11.51%
  Enhanced MAPE: 10.82%
  MAPE Improvement: +0.69% (+6.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 206/464: HTLD
============================================================
📊 Loading data for HTLD...
📊 Loading data for HTLD from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HTLD...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HTLD...

==================================================
Training Baseline HTLD (SVM)
==================================================
Training SVM model...

Baseline HTLD Performance:
MAE: 135196.9984
RMSE: 184149.2693
MAPE: 9.59%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 105
   • Highly important features (top 5%): 69

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t0: importance=0.0016, rank=1
   2. Feature_78_t0: importance=0.0012, rank=2
   3. Feature_74_t3: importance=0.0011, rank=3
   4. Feature_65_t0: importance=0.0010, rank=4
   5. Feature_93_t2: importance=0.0008, rank=5

🔧 Applying universal feature engineering for HTLD...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HTLD...

==================================================
Training Enhanced HTLD (SVM)
==================================================
Training SVM model...

Enhanced HTLD Performance:
MAE: 147421.9466
RMSE: 192126.5229
MAPE: 10.72%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 43
   • Highly important features (top 5%): 27

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0043, rank=1
   2. Feature_0_t3: importance=0.0023, rank=2
   3. Feature_9_t0: importance=0.0015, rank=3
   4. Feature_1_t0: importance=0.0015, rank=4
   5. Feature_2_t2: importance=0.0013, rank=5

📊 HTLD Results:
  Baseline MAPE: 9.59%
  Enhanced MAPE: 10.72%
  MAPE Improvement: -1.13% (-11.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 207/464: HUBG
============================================================
📊 Loading data for HUBG...
📊 Loading data for HUBG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HUBG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HUBG...

==================================================
Training Baseline HUBG (SVM)
==================================================
Training SVM model...

Baseline HUBG Performance:
MAE: 208054.2635
RMSE: 262332.9354
MAPE: 23.65%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 320
   • Highly important features (top 5%): 169

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_82_t3: importance=0.0007, rank=1
   2. Feature_81_t2: importance=0.0006, rank=2
   3. Feature_68_t1: importance=0.0006, rank=3
   4. Feature_80_t0: importance=0.0006, rank=4
   5. Feature_76_t3: importance=0.0005, rank=5

🔧 Applying universal feature engineering for HUBG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HUBG...

==================================================
Training Enhanced HUBG (SVM)
==================================================
Training SVM model...

Enhanced HUBG Performance:
MAE: 225342.7534
RMSE: 283439.0898
MAPE: 25.86%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 28
   • Highly important features (top 5%): 18

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0079, rank=1
   2. Feature_2_t3: importance=0.0037, rank=2
   3. Feature_1_t3: importance=0.0033, rank=3
   4. Feature_1_t2: importance=0.0025, rank=4
   5. Feature_1_t0: importance=0.0025, rank=5

📊 HUBG Results:
  Baseline MAPE: 23.65%
  Enhanced MAPE: 25.86%
  MAPE Improvement: -2.21% (-9.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 208/464: HWKN
============================================================
📊 Loading data for HWKN...
📊 Loading data for HWKN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HWKN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HWKN...

==================================================
Training Baseline HWKN (SVM)
==================================================
Training SVM model...

Baseline HWKN Performance:
MAE: 102932.0033
RMSE: 146477.9325
MAPE: 18.51%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 284
   • Highly important features (top 5%): 166

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0017, rank=1
   2. Feature_0_t3: importance=0.0016, rank=2
   3. Feature_63_t3: importance=0.0013, rank=3
   4. Feature_86_t1: importance=0.0011, rank=4
   5. Feature_88_t1: importance=0.0010, rank=5

🔧 Applying universal feature engineering for HWKN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HWKN...

==================================================
Training Enhanced HWKN (SVM)
==================================================
Training SVM model...

Enhanced HWKN Performance:
MAE: 104170.9370
RMSE: 144927.4048
MAPE: 18.61%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 43
   • Highly important features (top 5%): 32

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0095, rank=1
   2. Feature_0_t1: importance=0.0037, rank=2
   3. Feature_0_t2: importance=0.0031, rank=3
   4. Feature_0_t0: importance=0.0024, rank=4
   5. Feature_4_t3: importance=0.0021, rank=5

📊 HWKN Results:
  Baseline MAPE: 18.51%
  Enhanced MAPE: 18.61%
  MAPE Improvement: -0.10% (-0.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 209/464: HZO
============================================================
📊 Loading data for HZO...
📊 Loading data for HZO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for HZO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for HZO...

==================================================
Training Baseline HZO (SVM)
==================================================
Training SVM model...

Baseline HZO Performance:
MAE: 159232.5466
RMSE: 203315.0286
MAPE: 6.80%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 140
   • Highly important features (top 5%): 67

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0004, rank=1
   2. Feature_0_t2: importance=0.0001, rank=2
   3. Feature_2_t3: importance=0.0001, rank=3
   4. Feature_0_t0: importance=0.0001, rank=4
   5. Feature_88_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for HZO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for HZO...

==================================================
Training Enhanced HZO (SVM)
==================================================
Training SVM model...

Enhanced HZO Performance:
MAE: 163537.2808
RMSE: 210646.2637
MAPE: 6.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 28

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0005, rank=1
   2. Feature_1_t1: importance=0.0005, rank=2
   3. Feature_1_t2: importance=0.0004, rank=3
   4. Feature_0_t2: importance=0.0004, rank=4
   5. Feature_11_t2: importance=0.0004, rank=5

📊 HZO Results:
  Baseline MAPE: 6.80%
  Enhanced MAPE: 6.74%
  MAPE Improvement: +0.06% (+0.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 210/464: IAC
============================================================
📊 Loading data for IAC...
📊 Loading data for IAC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing IAC: 'IAC'

============================================================
TESTING TICKER 211/464: IART
============================================================
📊 Loading data for IART...
📊 Loading data for IART from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for IART...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for IART...

==================================================
Training Baseline IART (SVM)
==================================================
Training SVM model...

Baseline IART Performance:
MAE: 433260.6397
RMSE: 572048.8168
MAPE: 10.76%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 153
   • Highly important features (top 5%): 72

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_75_t3: importance=0.0005, rank=1
   2. Feature_69_t2: importance=0.0004, rank=2
   3. Feature_78_t3: importance=0.0004, rank=3
   4. Feature_77_t2: importance=0.0004, rank=4
   5. Feature_89_t2: importance=0.0004, rank=5

🔧 Applying universal feature engineering for IART...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for IART...

==================================================
Training Enhanced IART (SVM)
==================================================
Training SVM model...

Enhanced IART Performance:
MAE: 383944.3044
RMSE: 513269.6980
MAPE: 9.86%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 35
   • Highly important features (top 5%): 15

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t2: importance=0.0017, rank=1
   2. Feature_1_t0: importance=0.0015, rank=2
   3. Feature_1_t2: importance=0.0011, rank=3
   4. Feature_0_t3: importance=0.0008, rank=4
   5. Feature_2_t0: importance=0.0008, rank=5

📊 IART Results:
  Baseline MAPE: 10.76%
  Enhanced MAPE: 9.86%
  MAPE Improvement: +0.90% (+8.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 212/464: IBP
============================================================
📊 Loading data for IBP...
📊 Loading data for IBP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for IBP...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for IBP...

==================================================
Training Baseline IBP (SVM)
==================================================
Training SVM model...

Baseline IBP Performance:
MAE: 130360.2847
RMSE: 173453.2359
MAPE: 8.20%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 285
   • Highly important features (top 5%): 157

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_75_t3: importance=0.0005, rank=1
   2. Feature_63_t0: importance=0.0005, rank=2
   3. Feature_0_t3: importance=0.0004, rank=3
   4. Feature_64_t1: importance=0.0004, rank=4
   5. Feature_89_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for IBP...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for IBP...

==================================================
Training Enhanced IBP (SVM)
==================================================
Training SVM model...

Enhanced IBP Performance:
MAE: 179347.9689
RMSE: 227149.1022
MAPE: 11.14%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 54
   • Highly important features (top 5%): 38

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0031, rank=1
   2. Feature_0_t0: importance=0.0013, rank=2
   3. Feature_6_t2: importance=0.0011, rank=3
   4. Feature_2_t3: importance=0.0010, rank=4
   5. Feature_1_t0: importance=0.0009, rank=5

📊 IBP Results:
  Baseline MAPE: 8.20%
  Enhanced MAPE: 11.14%
  MAPE Improvement: -2.94% (-35.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 213/464: ICHR
============================================================
📊 Loading data for ICHR...
📊 Loading data for ICHR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ICHR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ICHR...

==================================================
Training Baseline ICHR (SVM)
==================================================
Training SVM model...

Baseline ICHR Performance:
MAE: 96423.9588
RMSE: 136122.0121
MAPE: 11.01%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 165
   • Highly important features (top 5%): 82

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t0: importance=0.0003, rank=1
   2. Feature_65_t2: importance=0.0002, rank=2
   3. Feature_86_t2: importance=0.0002, rank=3
   4. Feature_64_t3: importance=0.0001, rank=4
   5. Feature_89_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for ICHR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ICHR...

==================================================
Training Enhanced ICHR (SVM)
==================================================
Training SVM model...

Enhanced ICHR Performance:
MAE: 106062.4762
RMSE: 134480.0917
MAPE: 12.02%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 50
   • Highly important features (top 5%): 42

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0009, rank=1
   2. Feature_13_t3: importance=0.0007, rank=2
   3. Feature_11_t3: importance=0.0006, rank=3
   4. Feature_0_t0: importance=0.0005, rank=4
   5. Feature_1_t1: importance=0.0005, rank=5

📊 ICHR Results:
  Baseline MAPE: 11.01%
  Enhanced MAPE: 12.02%
  MAPE Improvement: -1.02% (-9.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 214/464: ICUI
============================================================
📊 Loading data for ICUI...
📊 Loading data for ICUI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ICUI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ICUI...

==================================================
Training Baseline ICUI (SVM)
==================================================
Training SVM model...

Baseline ICUI Performance:
MAE: 94529.9190
RMSE: 125377.2455
MAPE: 9.37%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 244
   • Highly important features (top 5%): 103

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t2: importance=0.0004, rank=1
   2. Feature_2_t0: importance=0.0002, rank=2
   3. Feature_68_t2: importance=0.0002, rank=3
   4. Feature_94_t1: importance=0.0002, rank=4
   5. Feature_89_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for ICUI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ICUI...

==================================================
Training Enhanced ICUI (SVM)
==================================================
Training SVM model...

Enhanced ICUI Performance:
MAE: 98140.8591
RMSE: 128012.6884
MAPE: 9.90%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 46
   • Highly important features (top 5%): 21

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0012, rank=1
   2. Feature_1_t3: importance=0.0010, rank=2
   3. Feature_1_t0: importance=0.0009, rank=3
   4. Feature_0_t1: importance=0.0008, rank=4
   5. Feature_1_t1: importance=0.0007, rank=5

📊 ICUI Results:
  Baseline MAPE: 9.37%
  Enhanced MAPE: 9.90%
  MAPE Improvement: -0.53% (-5.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 215/464: IDCC
============================================================
📊 Loading data for IDCC...
📊 Loading data for IDCC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for IDCC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for IDCC...

==================================================
Training Baseline IDCC (SVM)
==================================================
Training SVM model...

Baseline IDCC Performance:
MAE: 189837.0985
RMSE: 267132.5604
MAPE: 5.41%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 196
   • Highly important features (top 5%): 104

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t3: importance=0.0004, rank=1
   2. Feature_90_t1: importance=0.0003, rank=2
   3. Feature_63_t1: importance=0.0003, rank=3
   4. Feature_69_t1: importance=0.0002, rank=4
   5. Feature_63_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for IDCC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for IDCC...

==================================================
Training Enhanced IDCC (SVM)
==================================================
Training SVM model...

Enhanced IDCC Performance:
MAE: 287379.6193
RMSE: 373217.8869
MAPE: 8.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 35
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0009, rank=1
   2. Feature_1_t0: importance=0.0008, rank=2
   3. Feature_1_t3: importance=0.0007, rank=3
   4. Feature_0_t0: importance=0.0006, rank=4
   5. Feature_2_t1: importance=0.0006, rank=5

📊 IDCC Results:
  Baseline MAPE: 5.41%
  Enhanced MAPE: 8.94%
  MAPE Improvement: -3.53% (-65.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 216/464: IIIN
============================================================
📊 Loading data for IIIN...
📊 Loading data for IIIN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for IIIN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for IIIN...

==================================================
Training Baseline IIIN (SVM)
==================================================
Training SVM model...

Baseline IIIN Performance:
MAE: 69103.6069
RMSE: 86826.7392
MAPE: 13.11%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 234
   • Highly important features (top 5%): 121

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_75_t3: importance=0.0006, rank=1
   2. Feature_93_t0: importance=0.0006, rank=2
   3. Feature_0_t3: importance=0.0006, rank=3
   4. Feature_94_t0: importance=0.0005, rank=4
   5. Feature_83_t3: importance=0.0005, rank=5

🔧 Applying universal feature engineering for IIIN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for IIIN...

==================================================
Training Enhanced IIIN (SVM)
==================================================
Training SVM model...

Enhanced IIIN Performance:
MAE: 71984.3273
RMSE: 92549.9403
MAPE: 13.59%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 54
   • Highly important features (top 5%): 34

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0048, rank=1
   2. Feature_2_t2: importance=0.0032, rank=2
   3. Feature_1_t2: importance=0.0028, rank=3
   4. Feature_0_t0: importance=0.0015, rank=4
   5. Feature_2_t1: importance=0.0013, rank=5

📊 IIIN Results:
  Baseline MAPE: 13.11%
  Enhanced MAPE: 13.59%
  MAPE Improvement: -0.48% (-3.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 217/464: IIPR
============================================================
📊 Loading data for IIPR...
📊 Loading data for IIPR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing IIPR: 'IIPR'

============================================================
TESTING TICKER 218/464: INDB
============================================================
📊 Loading data for INDB...
📊 Loading data for INDB from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for INDB...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for INDB...

==================================================
Training Baseline INDB (SVM)
==================================================
Training SVM model...

Baseline INDB Performance:
MAE: 123275.4826
RMSE: 156807.1337
MAPE: 13.04%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 187
   • Highly important features (top 5%): 86

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_69_t3: importance=0.0004, rank=1
   2. Feature_71_t3: importance=0.0003, rank=2
   3. Feature_67_t1: importance=0.0002, rank=3
   4. Feature_79_t0: importance=0.0002, rank=4
   5. Feature_72_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for INDB...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for INDB...

==================================================
Training Enhanced INDB (SVM)
==================================================
Training SVM model...

Enhanced INDB Performance:
MAE: 139660.0849
RMSE: 171323.8332
MAPE: 14.38%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0034, rank=1
   2. Feature_1_t0: importance=0.0012, rank=2
   3. Feature_0_t3: importance=0.0009, rank=3
   4. Feature_0_t0: importance=0.0007, rank=4
   5. Feature_9_t1: importance=0.0006, rank=5

📊 INDB Results:
  Baseline MAPE: 13.04%
  Enhanced MAPE: 14.38%
  MAPE Improvement: -1.35% (-10.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 219/464: INN
============================================================
📊 Loading data for INN...
📊 Loading data for INN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for INN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for INN...

==================================================
Training Baseline INN (SVM)
==================================================
Training SVM model...

Baseline INN Performance:
MAE: 755059.5011
RMSE: 970082.1617
MAPE: 16.30%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 134
   • Highly important features (top 5%): 75

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_87_t1: importance=0.0007, rank=1
   2. Feature_83_t0: importance=0.0005, rank=2
   3. Feature_84_t3: importance=0.0004, rank=3
   4. Feature_88_t2: importance=0.0003, rank=4
   5. Feature_63_t0: importance=0.0003, rank=5

🔧 Applying universal feature engineering for INN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for INN...

==================================================
Training Enhanced INN (SVM)
==================================================
Training SVM model...

Enhanced INN Performance:
MAE: 623607.5739
RMSE: 843735.5480
MAPE: 13.42%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 23
   • Highly important features (top 5%): 8

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t0: importance=0.0035, rank=1
   2. Feature_2_t0: importance=0.0017, rank=2
   3. Feature_2_t1: importance=0.0015, rank=3
   4. Feature_0_t2: importance=0.0014, rank=4
   5. Feature_1_t1: importance=0.0013, rank=5

📊 INN Results:
  Baseline MAPE: 16.30%
  Enhanced MAPE: 13.42%
  MAPE Improvement: +2.89% (+17.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 220/464: INSW
============================================================
📊 Loading data for INSW...
📊 Loading data for INSW from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing INSW: 'INSW'

============================================================
TESTING TICKER 221/464: INVA
============================================================
📊 Loading data for INVA...
📊 Loading data for INVA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for INVA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Error: Ticker 'INVA' not found in short volume data.
Retrieved short volume data for 0 days
Creating short volume features with 15 days lookback...
No short volume data available, creating zero features
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for INVA...

==================================================
Training Baseline INVA (SVM)
==================================================
Training SVM model...

Baseline INVA Performance:
MAE: 396437.7967
RMSE: 550444.3035
MAPE: 3.76%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 27
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t0: importance=0.0001, rank=1
   2. Feature_0_t2: importance=0.0000, rank=2
   3. Feature_66_t0: importance=0.0000, rank=3
   4. Feature_2_t1: importance=0.0000, rank=4
   5. Feature_0_t3: importance=0.0000, rank=5

🔧 Applying universal feature engineering for INVA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for INVA...

==================================================
Training Enhanced INVA (SVM)
==================================================
Training SVM model...

Enhanced INVA Performance:
MAE: 435875.8690
RMSE: 623871.1812
MAPE: 4.08%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 19
   • Highly important features (top 5%): 15

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0001, rank=1
   2. Feature_0_t2: importance=0.0001, rank=2
   3. Feature_6_t0: importance=0.0001, rank=3
   4. Feature_3_t0: importance=0.0001, rank=4
   5. Feature_5_t3: importance=0.0001, rank=5

📊 INVA Results:
  Baseline MAPE: 3.76%
  Enhanced MAPE: 4.08%
  MAPE Improvement: -0.32% (-8.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 222/464: IOSP
============================================================
📊 Loading data for IOSP...
📊 Loading data for IOSP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for IOSP...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for IOSP...

==================================================
Training Baseline IOSP (SVM)
==================================================
Training SVM model...

Baseline IOSP Performance:
MAE: 47384.4607
RMSE: 63736.7816
MAPE: 16.68%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 351
   • Highly important features (top 5%): 205

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0008, rank=1
   2. Feature_0_t3: importance=0.0006, rank=2
   3. Feature_2_t3: importance=0.0006, rank=3
   4. Feature_69_t3: importance=0.0006, rank=4
   5. Feature_1_t3: importance=0.0005, rank=5

🔧 Applying universal feature engineering for IOSP...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for IOSP...

==================================================
Training Enhanced IOSP (SVM)
==================================================
Training SVM model...

Enhanced IOSP Performance:
MAE: 45390.0389
RMSE: 61662.9887
MAPE: 16.32%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 37

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0068, rank=1
   2. Feature_2_t3: importance=0.0037, rank=2
   3. Feature_2_t0: importance=0.0019, rank=3
   4. Feature_1_t0: importance=0.0014, rank=4
   5. Feature_0_t1: importance=0.0014, rank=5

📊 IOSP Results:
  Baseline MAPE: 16.68%
  Enhanced MAPE: 16.32%
  MAPE Improvement: +0.37% (+2.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 223/464: IPAR
============================================================
📊 Loading data for IPAR...
📊 Loading data for IPAR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for IPAR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for IPAR...

==================================================
Training Baseline IPAR (SVM)
==================================================
Training SVM model...

Baseline IPAR Performance:
MAE: 64125.0359
RMSE: 88226.7626
MAPE: 9.24%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 261
   • Highly important features (top 5%): 146

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0015, rank=1
   2. Feature_65_t3: importance=0.0007, rank=2
   3. Feature_81_t2: importance=0.0006, rank=3
   4. Feature_76_t2: importance=0.0005, rank=4
   5. Feature_75_t1: importance=0.0005, rank=5

🔧 Applying universal feature engineering for IPAR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for IPAR...

==================================================
Training Enhanced IPAR (SVM)
==================================================
Training SVM model...

Enhanced IPAR Performance:
MAE: 94851.0068
RMSE: 121216.3484
MAPE: 14.03%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 36
   • Highly important features (top 5%): 15

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0070, rank=1
   2. Feature_2_t3: importance=0.0030, rank=2
   3. Feature_1_t0: importance=0.0028, rank=3
   4. Feature_2_t0: importance=0.0016, rank=4
   5. Feature_1_t2: importance=0.0016, rank=5

📊 IPAR Results:
  Baseline MAPE: 9.24%
  Enhanced MAPE: 14.03%
  MAPE Improvement: -4.79% (-51.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 224/464: ITGR
============================================================
📊 Loading data for ITGR...
📊 Loading data for ITGR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ITGR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ITGR...

==================================================
Training Baseline ITGR (SVM)
==================================================
Training SVM model...

Baseline ITGR Performance:
MAE: 182955.7762
RMSE: 226931.3466
MAPE: 7.29%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 191
   • Highly important features (top 5%): 104

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_76_t2: importance=0.0006, rank=1
   2. Feature_63_t1: importance=0.0005, rank=2
   3. Feature_64_t2: importance=0.0004, rank=3
   4. Feature_66_t1: importance=0.0004, rank=4
   5. Feature_63_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for ITGR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ITGR...

==================================================
Training Enhanced ITGR (SVM)
==================================================
Training SVM model...

Enhanced ITGR Performance:
MAE: 196446.8181
RMSE: 238867.7895
MAPE: 7.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 25
   • Highly important features (top 5%): 11

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0029, rank=1
   2. Feature_1_t3: importance=0.0021, rank=2
   3. Feature_2_t3: importance=0.0019, rank=3
   4. Feature_2_t0: importance=0.0012, rank=4
   5. Feature_4_t3: importance=0.0010, rank=5

📊 ITGR Results:
  Baseline MAPE: 7.29%
  Enhanced MAPE: 7.74%
  MAPE Improvement: -0.45% (-6.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 225/464: ITRI
============================================================
📊 Loading data for ITRI...
📊 Loading data for ITRI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ITRI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ITRI...

==================================================
Training Baseline ITRI (SVM)
==================================================
Training SVM model...

Baseline ITRI Performance:
MAE: 215928.0718
RMSE: 268705.8866
MAPE: 7.91%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 206
   • Highly important features (top 5%): 140

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_86_t1: importance=0.0005, rank=1
   2. Feature_85_t3: importance=0.0003, rank=2
   3. Feature_74_t3: importance=0.0003, rank=3
   4. Feature_65_t3: importance=0.0003, rank=4
   5. Feature_92_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for ITRI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ITRI...

==================================================
Training Enhanced ITRI (SVM)
==================================================
Training SVM model...

Enhanced ITRI Performance:
MAE: 194005.9490
RMSE: 252805.7250
MAPE: 7.23%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 43
   • Highly important features (top 5%): 24

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0014, rank=1
   2. Feature_2_t3: importance=0.0013, rank=2
   3. Feature_0_t3: importance=0.0012, rank=3
   4. Feature_1_t3: importance=0.0012, rank=4
   5. Feature_0_t0: importance=0.0012, rank=5

📊 ITRI Results:
  Baseline MAPE: 7.91%
  Enhanced MAPE: 7.23%
  MAPE Improvement: +0.68% (+8.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 226/464: JBGS
============================================================
📊 Loading data for JBGS...
📊 Loading data for JBGS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing JBGS: 'JBGS'

============================================================
TESTING TICKER 227/464: JBLU
============================================================
📊 Loading data for JBLU...
📊 Loading data for JBLU from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for JBLU...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for JBLU...

==================================================
Training Baseline JBLU (SVM)
==================================================
Training SVM model...

Baseline JBLU Performance:
MAE: 6519378.0122
RMSE: 7803241.6863
MAPE: 12.15%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 184
   • Highly important features (top 5%): 110

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0009, rank=1
   2. Feature_72_t2: importance=0.0008, rank=2
   3. Feature_0_t3: importance=0.0006, rank=3
   4. Feature_63_t1: importance=0.0006, rank=4
   5. Feature_73_t1: importance=0.0005, rank=5

🔧 Applying universal feature engineering for JBLU...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for JBLU...

==================================================
Training Enhanced JBLU (SVM)
==================================================
Training SVM model...

Enhanced JBLU Performance:
MAE: 4731966.0511
RMSE: 6160759.4539
MAPE: 8.92%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 38
   • Highly important features (top 5%): 22

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0057, rank=1
   2. Feature_2_t1: importance=0.0015, rank=2
   3. Feature_1_t3: importance=0.0015, rank=3
   4. Feature_0_t2: importance=0.0014, rank=4
   5. Feature_0_t0: importance=0.0010, rank=5

📊 JBLU Results:
  Baseline MAPE: 12.15%
  Enhanced MAPE: 8.92%
  MAPE Improvement: +3.23% (+26.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 228/464: JBSS
============================================================
📊 Loading data for JBSS...
📊 Loading data for JBSS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for JBSS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for JBSS...

==================================================
Training Baseline JBSS (SVM)
==================================================
Training SVM model...

Baseline JBSS Performance:
MAE: 24773.8955
RMSE: 40118.6557
MAPE: 14.78%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 126
   • Highly important features (top 5%): 63

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_96_t1: importance=0.0015, rank=1
   2. Feature_63_t1: importance=0.0009, rank=2
   3. Feature_63_t0: importance=0.0007, rank=3
   4. Feature_79_t3: importance=0.0004, rank=4
   5. Feature_89_t0: importance=0.0003, rank=5

🔧 Applying universal feature engineering for JBSS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for JBSS...

==================================================
Training Enhanced JBSS (SVM)
==================================================
Training SVM model...

Enhanced JBSS Performance:
MAE: 27171.3890
RMSE: 42956.3705
MAPE: 16.38%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0018, rank=1
   2. Feature_1_t1: importance=0.0011, rank=2
   3. Feature_1_t2: importance=0.0009, rank=3
   4. Feature_2_t2: importance=0.0008, rank=4
   5. Feature_3_t1: importance=0.0008, rank=5

📊 JBSS Results:
  Baseline MAPE: 14.78%
  Enhanced MAPE: 16.38%
  MAPE Improvement: -1.61% (-10.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 229/464: JJSF
============================================================
📊 Loading data for JJSF...
📊 Loading data for JJSF from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing JJSF: 'JJSF'

============================================================
TESTING TICKER 230/464: JOE
============================================================
📊 Loading data for JOE...
📊 Loading data for JOE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for JOE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for JOE...

==================================================
Training Baseline JOE (SVM)
==================================================
Training SVM model...

Baseline JOE Performance:
MAE: 60029.5307
RMSE: 75761.0114
MAPE: 8.79%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 112
   • Highly important features (top 5%): 79

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_76_t1: importance=0.0004, rank=1
   2. Feature_90_t1: importance=0.0003, rank=2
   3. Feature_65_t3: importance=0.0002, rank=3
   4. Feature_74_t1: importance=0.0002, rank=4
   5. Feature_75_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for JOE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for JOE...

==================================================
Training Enhanced JOE (SVM)
==================================================
Training SVM model...

Enhanced JOE Performance:
MAE: 59607.6851
RMSE: 77359.2858
MAPE: 8.91%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 34
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0007, rank=1
   2. Feature_1_t0: importance=0.0007, rank=2
   3. Feature_1_t2: importance=0.0005, rank=3
   4. Feature_4_t3: importance=0.0005, rank=4
   5. Feature_3_t3: importance=0.0005, rank=5

📊 JOE Results:
  Baseline MAPE: 8.79%
  Enhanced MAPE: 8.91%
  MAPE Improvement: -0.11% (-1.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 231/464: KAI
============================================================
📊 Loading data for KAI...
📊 Loading data for KAI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for KAI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for KAI...

==================================================
Training Baseline KAI (SVM)
==================================================
Training SVM model...

Baseline KAI Performance:
MAE: 155577.4691
RMSE: 185351.3182
MAPE: 11.15%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 271
   • Highly important features (top 5%): 137

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_74_t3: importance=0.0006, rank=1
   2. Feature_65_t3: importance=0.0005, rank=2
   3. Feature_77_t3: importance=0.0005, rank=3
   4. Feature_65_t1: importance=0.0004, rank=4
   5. Feature_82_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for KAI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for KAI...

==================================================
Training Enhanced KAI (SVM)
==================================================
Training SVM model...

Enhanced KAI Performance:
MAE: 218742.4031
RMSE: 255288.0756
MAPE: 15.42%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 30
   • Highly important features (top 5%): 12

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0029, rank=1
   2. Feature_1_t1: importance=0.0028, rank=2
   3. Feature_1_t3: importance=0.0026, rank=3
   4. Feature_1_t2: importance=0.0012, rank=4
   5. Feature_2_t3: importance=0.0011, rank=5

📊 KAI Results:
  Baseline MAPE: 11.15%
  Enhanced MAPE: 15.42%
  MAPE Improvement: -4.28% (-38.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 232/464: KALU
============================================================
📊 Loading data for KALU...
📊 Loading data for KALU from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for KALU...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for KALU...

==================================================
Training Baseline KALU (SVM)
==================================================
Training SVM model...

Baseline KALU Performance:
MAE: 57675.0452
RMSE: 77535.3807
MAPE: 13.46%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 173
   • Highly important features (top 5%): 101

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_90_t1: importance=0.0006, rank=1
   2. Feature_82_t0: importance=0.0006, rank=2
   3. Feature_0_t3: importance=0.0005, rank=3
   4. Feature_84_t0: importance=0.0004, rank=4
   5. Feature_82_t2: importance=0.0004, rank=5

🔧 Applying universal feature engineering for KALU...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for KALU...

==================================================
Training Enhanced KALU (SVM)
==================================================
Training SVM model...

Enhanced KALU Performance:
MAE: 63597.3989
RMSE: 86695.2442
MAPE: 14.70%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 47
   • Highly important features (top 5%): 37

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0034, rank=1
   2. Feature_2_t2: importance=0.0012, rank=2
   3. Feature_2_t3: importance=0.0012, rank=3
   4. Feature_1_t3: importance=0.0012, rank=4
   5. Feature_2_t1: importance=0.0012, rank=5

📊 KALU Results:
  Baseline MAPE: 13.46%
  Enhanced MAPE: 14.70%
  MAPE Improvement: -1.24% (-9.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 233/464: KAR
============================================================
📊 Loading data for KAR...
📊 Loading data for KAR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing KAR: 'KAR'

============================================================
TESTING TICKER 234/464: KFY
============================================================
📊 Loading data for KFY...
📊 Loading data for KFY from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for KFY...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for KFY...

==================================================
Training Baseline KFY (SVM)
==================================================
Training SVM model...

Baseline KFY Performance:
MAE: 137983.8366
RMSE: 186882.2665
MAPE: 16.08%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 92
   • Highly important features (top 5%): 45

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_92_t0: importance=0.0017, rank=1
   2. Feature_0_t3: importance=0.0006, rank=2
   3. Feature_96_t3: importance=0.0005, rank=3
   4. Feature_65_t3: importance=0.0005, rank=4
   5. Feature_93_t0: importance=0.0004, rank=5

🔧 Applying universal feature engineering for KFY...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for KFY...

==================================================
Training Enhanced KFY (SVM)
==================================================
Training SVM model...

Enhanced KFY Performance:
MAE: 162592.9678
RMSE: 202496.4556
MAPE: 17.15%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 26
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0039, rank=1
   2. Feature_2_t2: importance=0.0022, rank=2
   3. Feature_1_t1: importance=0.0019, rank=3
   4. Feature_2_t3: importance=0.0014, rank=4
   5. Feature_0_t2: importance=0.0011, rank=5

📊 KFY Results:
  Baseline MAPE: 16.08%
  Enhanced MAPE: 17.15%
  MAPE Improvement: -1.07% (-6.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 235/464: KLIC
============================================================
📊 Loading data for KLIC...
📊 Loading data for KLIC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for KLIC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for KLIC...

==================================================
Training Baseline KLIC (SVM)
==================================================
Training SVM model...

Baseline KLIC Performance:
MAE: 204441.1723
RMSE: 255540.4745
MAPE: 6.53%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 304
   • Highly important features (top 5%): 169

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t3: importance=0.0005, rank=1
   2. Feature_70_t3: importance=0.0005, rank=2
   3. Feature_83_t2: importance=0.0005, rank=3
   4. Feature_94_t0: importance=0.0004, rank=4
   5. Feature_81_t1: importance=0.0004, rank=5

🔧 Applying universal feature engineering for KLIC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for KLIC...

==================================================
Training Enhanced KLIC (SVM)
==================================================
Training SVM model...

Enhanced KLIC Performance:
MAE: 257650.7010
RMSE: 317272.5332
MAPE: 8.25%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 54
   • Highly important features (top 5%): 43

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0026, rank=1
   2. Feature_1_t2: importance=0.0021, rank=2
   3. Feature_2_t2: importance=0.0021, rank=3
   4. Feature_2_t3: importance=0.0016, rank=4
   5. Feature_1_t1: importance=0.0016, rank=5

📊 KLIC Results:
  Baseline MAPE: 6.53%
  Enhanced MAPE: 8.25%
  MAPE Improvement: -1.72% (-26.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 236/464: KMT
============================================================
📊 Loading data for KMT...
📊 Loading data for KMT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for KMT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for KMT...

==================================================
Training Baseline KMT (SVM)
==================================================
Training SVM model...

Baseline KMT Performance:
MAE: 413247.5106
RMSE: 490435.6018
MAPE: 8.75%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 199
   • Highly important features (top 5%): 97

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_73_t0: importance=0.0003, rank=1
   2. Feature_96_t2: importance=0.0002, rank=2
   3. Feature_71_t0: importance=0.0002, rank=3
   4. Feature_64_t3: importance=0.0002, rank=4
   5. Feature_71_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for KMT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for KMT...

==================================================
Training Enhanced KMT (SVM)
==================================================
Training SVM model...

Enhanced KMT Performance:
MAE: 485442.7041
RMSE: 601687.5460
MAPE: 10.09%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 52
   • Highly important features (top 5%): 36

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0013, rank=1
   2. Feature_0_t3: importance=0.0009, rank=2
   3. Feature_1_t0: importance=0.0008, rank=3
   4. Feature_11_t3: importance=0.0008, rank=4
   5. Feature_11_t2: importance=0.0007, rank=5

📊 KMT Results:
  Baseline MAPE: 8.75%
  Enhanced MAPE: 10.09%
  MAPE Improvement: -1.34% (-15.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 237/464: KN
============================================================
📊 Loading data for KN...
📊 Loading data for KN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for KN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for KN...

==================================================
Training Baseline KN (SVM)
==================================================
Training SVM model...

Baseline KN Performance:
MAE: 245934.7839
RMSE: 315670.2919
MAPE: 11.34%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 128
   • Highly important features (top 5%): 60

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_81_t2: importance=0.0004, rank=1
   2. Feature_96_t1: importance=0.0002, rank=2
   3. Feature_65_t0: importance=0.0002, rank=3
   4. Feature_84_t3: importance=0.0001, rank=4
   5. Feature_90_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for KN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for KN...

==================================================
Training Enhanced KN (SVM)
==================================================
Training SVM model...

Enhanced KN Performance:
MAE: 244466.9689
RMSE: 303300.9692
MAPE: 11.38%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 32

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_3_t1: importance=0.0004, rank=1
   2. Feature_14_t3: importance=0.0004, rank=2
   3. Feature_2_t1: importance=0.0004, rank=3
   4. Feature_4_t3: importance=0.0004, rank=4
   5. Feature_6_t1: importance=0.0003, rank=5

📊 KN Results:
  Baseline MAPE: 11.34%
  Enhanced MAPE: 11.38%
  MAPE Improvement: -0.04% (-0.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 238/464: KOP
============================================================
📊 Loading data for KOP...
📊 Loading data for KOP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for KOP...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for KOP...

==================================================
Training Baseline KOP (SVM)
==================================================
Training SVM model...

Baseline KOP Performance:
MAE: 58010.8400
RMSE: 77002.5579
MAPE: 14.05%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 205
   • Highly important features (top 5%): 108

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_91_t0: importance=0.0011, rank=1
   2. Feature_63_t1: importance=0.0007, rank=2
   3. Feature_63_t2: importance=0.0007, rank=3
   4. Feature_72_t2: importance=0.0006, rank=4
   5. Feature_67_t1: importance=0.0005, rank=5

🔧 Applying universal feature engineering for KOP...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for KOP...

==================================================
Training Enhanced KOP (SVM)
==================================================
Training SVM model...

Enhanced KOP Performance:
MAE: 53371.0030
RMSE: 71746.4607
MAPE: 14.06%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 56
   • Highly important features (top 5%): 31

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0042, rank=1
   2. Feature_2_t3: importance=0.0035, rank=2
   3. Feature_1_t1: importance=0.0034, rank=3
   4. Feature_1_t0: importance=0.0023, rank=4
   5. Feature_0_t0: importance=0.0019, rank=5

📊 KOP Results:
  Baseline MAPE: 14.05%
  Enhanced MAPE: 14.06%
  MAPE Improvement: -0.01% (-0.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 239/464: KREF
============================================================
📊 Loading data for KREF...
📊 Loading data for KREF from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing KREF: 'KREF'

============================================================
TESTING TICKER 240/464: KRYS
============================================================
📊 Loading data for KRYS...
📊 Loading data for KRYS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing KRYS: 'KRYS'

============================================================
TESTING TICKER 241/464: KSS
============================================================
📊 Loading data for KSS...
📊 Loading data for KSS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for KSS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for KSS...

==================================================
Training Baseline KSS (SVM)
==================================================
Training SVM model...

Baseline KSS Performance:
MAE: 2869990.2457
RMSE: 3757562.0702
MAPE: 6.84%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 133
   • Highly important features (top 5%): 83

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_89_t1: importance=0.0005, rank=1
   2. Feature_90_t1: importance=0.0003, rank=2
   3. Feature_96_t2: importance=0.0003, rank=3
   4. Feature_88_t3: importance=0.0002, rank=4
   5. Feature_95_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for KSS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for KSS...

==================================================
Training Enhanced KSS (SVM)
==================================================
Training SVM model...

Enhanced KSS Performance:
MAE: 3237820.0766
RMSE: 4013877.9572
MAPE: 7.84%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 34
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0027, rank=1
   2. Feature_1_t3: importance=0.0015, rank=2
   3. Feature_1_t1: importance=0.0012, rank=3
   4. Feature_0_t2: importance=0.0010, rank=4
   5. Feature_1_t0: importance=0.0008, rank=5

📊 KSS Results:
  Baseline MAPE: 6.84%
  Enhanced MAPE: 7.84%
  MAPE Improvement: -1.00% (-14.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 242/464: KW
============================================================
📊 Loading data for KW...
📊 Loading data for KW from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for KW...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for KW...

==================================================
Training Baseline KW (SVM)
==================================================
Training SVM model...

Baseline KW Performance:
MAE: 512994.4637
RMSE: 609803.2576
MAPE: 10.88%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 255
   • Highly important features (top 5%): 155

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_84_t3: importance=0.0009, rank=1
   2. Feature_86_t3: importance=0.0005, rank=2
   3. Feature_83_t3: importance=0.0005, rank=3
   4. Feature_85_t3: importance=0.0005, rank=4
   5. Feature_65_t3: importance=0.0005, rank=5

🔧 Applying universal feature engineering for KW...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for KW...

==================================================
Training Enhanced KW (SVM)
==================================================
Training SVM model...

Enhanced KW Performance:
MAE: 356052.3151
RMSE: 441965.5425
MAPE: 7.58%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0041, rank=1
   2. Feature_1_t3: importance=0.0030, rank=2
   3. Feature_2_t2: importance=0.0018, rank=3
   4. Feature_2_t3: importance=0.0017, rank=4
   5. Feature_1_t1: importance=0.0017, rank=5

📊 KW Results:
  Baseline MAPE: 10.88%
  Enhanced MAPE: 7.58%
  MAPE Improvement: +3.29% (+30.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 243/464: KWR
============================================================
📊 Loading data for KWR...
📊 Loading data for KWR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for KWR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for KWR...

==================================================
Training Baseline KWR (SVM)
==================================================
Training SVM model...

Baseline KWR Performance:
MAE: 73069.5067
RMSE: 110065.0812
MAPE: 5.01%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 137
   • Highly important features (top 5%): 77

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t3: importance=0.0001, rank=1
   2. Feature_83_t1: importance=0.0001, rank=2
   3. Feature_93_t0: importance=0.0001, rank=3
   4. Feature_87_t1: importance=0.0001, rank=4
   5. Feature_67_t0: importance=0.0001, rank=5

🔧 Applying universal feature engineering for KWR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for KWR...

==================================================
Training Enhanced KWR (SVM)
==================================================
Training SVM model...

Enhanced KWR Performance:
MAE: 80727.9752
RMSE: 114148.2491
MAPE: 5.57%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 21
   • Highly important features (top 5%): 13

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0009, rank=1
   2. Feature_1_t1: importance=0.0005, rank=2
   3. Feature_0_t3: importance=0.0005, rank=3
   4. Feature_1_t3: importance=0.0005, rank=4
   5. Feature_1_t2: importance=0.0004, rank=5

📊 KWR Results:
  Baseline MAPE: 5.01%
  Enhanced MAPE: 5.57%
  MAPE Improvement: -0.56% (-11.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 244/464: LCII
============================================================
📊 Loading data for LCII...
📊 Loading data for LCII from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for LCII...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for LCII...

==================================================
Training Baseline LCII (SVM)
==================================================
Training SVM model...

Baseline LCII Performance:
MAE: 146520.4160
RMSE: 197522.0100
MAPE: 7.46%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 180
   • Highly important features (top 5%): 93

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_94_t0: importance=0.0002, rank=1
   2. Feature_65_t1: importance=0.0001, rank=2
   3. Feature_69_t3: importance=0.0001, rank=3
   4. Feature_65_t3: importance=0.0001, rank=4
   5. Feature_64_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for LCII...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for LCII...

==================================================
Training Enhanced LCII (SVM)
==================================================
Training SVM model...

Enhanced LCII Performance:
MAE: 129487.6823
RMSE: 181181.5073
MAPE: 6.44%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 16

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0007, rank=1
   2. Feature_1_t3: importance=0.0005, rank=2
   3. Feature_1_t2: importance=0.0004, rank=3
   4. Feature_2_t3: importance=0.0004, rank=4
   5. Feature_3_t3: importance=0.0004, rank=5

📊 LCII Results:
  Baseline MAPE: 7.46%
  Enhanced MAPE: 6.44%
  MAPE Improvement: +1.03% (+13.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 245/464: LEG
============================================================
📊 Loading data for LEG...
📊 Loading data for LEG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for LEG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for LEG...

==================================================
Training Baseline LEG (SVM)
==================================================
Training SVM model...

Baseline LEG Performance:
MAE: 1087553.1097
RMSE: 1449666.1090
MAPE: 14.24%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 142
   • Highly important features (top 5%): 52

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_86_t1: importance=0.0005, rank=1
   2. Feature_86_t2: importance=0.0004, rank=2
   3. Feature_85_t1: importance=0.0002, rank=3
   4. Feature_71_t0: importance=0.0002, rank=4
   5. Feature_0_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for LEG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for LEG...

==================================================
Training Enhanced LEG (SVM)
==================================================
Training SVM model...

Enhanced LEG Performance:
MAE: 1162823.9382
RMSE: 1502186.8178
MAPE: 15.34%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 32
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0017, rank=1
   2. Feature_2_t2: importance=0.0016, rank=2
   3. Feature_0_t3: importance=0.0013, rank=3
   4. Feature_0_t0: importance=0.0010, rank=4
   5. Feature_1_t1: importance=0.0007, rank=5

📊 LEG Results:
  Baseline MAPE: 14.24%
  Enhanced MAPE: 15.34%
  MAPE Improvement: -1.10% (-7.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 246/464: LGIH
============================================================
📊 Loading data for LGIH...
📊 Loading data for LGIH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for LGIH...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for LGIH...

==================================================
Training Baseline LGIH (SVM)
==================================================
Training SVM model...

Baseline LGIH Performance:
MAE: 82015.2748
RMSE: 111617.7990
MAPE: 3.34%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 86
   • Highly important features (top 5%): 36

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_72_t3: importance=0.0001, rank=1
   2. Feature_65_t1: importance=0.0001, rank=2
   3. Feature_63_t1: importance=0.0001, rank=3
   4. Feature_2_t1: importance=0.0001, rank=4
   5. Feature_66_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for LGIH...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for LGIH...

==================================================
Training Enhanced LGIH (SVM)
==================================================
Training SVM model...

Enhanced LGIH Performance:
MAE: 99600.4330
RMSE: 130710.8096
MAPE: 4.12%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 10
   • Highly important features (top 5%): 7

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0007, rank=1
   2. Feature_0_t3: importance=0.0005, rank=2
   3. Feature_2_t3: importance=0.0003, rank=3
   4. Feature_2_t1: importance=0.0002, rank=4
   5. Feature_0_t2: importance=0.0002, rank=5

📊 LGIH Results:
  Baseline MAPE: 3.34%
  Enhanced MAPE: 4.12%
  MAPE Improvement: -0.78% (-23.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 247/464: LGND
============================================================
📊 Loading data for LGND...
📊 Loading data for LGND from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for LGND...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for LGND...

==================================================
Training Baseline LGND (SVM)
==================================================
Training SVM model...

Baseline LGND Performance:
MAE: 88393.5143
RMSE: 107240.6249
MAPE: 9.47%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 277
   • Highly important features (top 5%): 188

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t3: importance=0.0006, rank=1
   2. Feature_69_t3: importance=0.0005, rank=2
   3. Feature_68_t3: importance=0.0003, rank=3
   4. Feature_87_t3: importance=0.0002, rank=4
   5. Feature_76_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for LGND...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for LGND...

==================================================
Training Enhanced LGND (SVM)
==================================================
Training SVM model...

Enhanced LGND Performance:
MAE: 88223.4428
RMSE: 106060.5204
MAPE: 9.57%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 46

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0011, rank=1
   2. Feature_6_t3: importance=0.0006, rank=2
   3. Feature_8_t3: importance=0.0005, rank=3
   4. Feature_13_t3: importance=0.0004, rank=4
   5. Feature_4_t2: importance=0.0004, rank=5

📊 LGND Results:
  Baseline MAPE: 9.47%
  Enhanced MAPE: 9.57%
  MAPE Improvement: -0.09% (-1.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 248/464: LKFN
============================================================
📊 Loading data for LKFN...
📊 Loading data for LKFN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for LKFN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for LKFN...

==================================================
Training Baseline LKFN (SVM)
==================================================
Training SVM model...

Baseline LKFN Performance:
MAE: 86378.9461
RMSE: 104334.1065
MAPE: 3.96%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 76
   • Highly important features (top 5%): 50

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t3: importance=0.0016, rank=1
   2. Feature_69_t3: importance=0.0009, rank=2
   3. Feature_81_t0: importance=0.0006, rank=3
   4. Feature_67_t3: importance=0.0005, rank=4
   5. Feature_68_t3: importance=0.0004, rank=5

🔧 Applying universal feature engineering for LKFN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for LKFN...

==================================================
Training Enhanced LKFN (SVM)
==================================================
Training SVM model...

Enhanced LKFN Performance:
MAE: 70657.3960
RMSE: 90414.4361
MAPE: 3.22%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 21
   • Highly important features (top 5%): 15

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0040, rank=1
   2. Feature_0_t3: importance=0.0016, rank=2
   3. Feature_1_t2: importance=0.0016, rank=3
   4. Feature_2_t3: importance=0.0014, rank=4
   5. Feature_0_t0: importance=0.0013, rank=5

📊 LKFN Results:
  Baseline MAPE: 3.96%
  Enhanced MAPE: 3.22%
  MAPE Improvement: +0.74% (+18.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 249/464: LMAT
============================================================
📊 Loading data for LMAT...
📊 Loading data for LMAT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for LMAT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for LMAT...

==================================================
Training Baseline LMAT (SVM)
==================================================
Training SVM model...

Baseline LMAT Performance:
MAE: 79845.4148
RMSE: 118112.2669
MAPE: 8.22%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 190
   • Highly important features (top 5%): 118

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_81_t1: importance=0.0003, rank=1
   2. Feature_63_t3: importance=0.0003, rank=2
   3. Feature_72_t3: importance=0.0003, rank=3
   4. Feature_65_t1: importance=0.0002, rank=4
   5. Feature_90_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for LMAT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for LMAT...

==================================================
Training Enhanced LMAT (SVM)
==================================================
Training SVM model...

Enhanced LMAT Performance:
MAE: 93082.7665
RMSE: 128945.2912
MAPE: 9.19%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 36
   • Highly important features (top 5%): 27

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0010, rank=1
   2. Feature_0_t1: importance=0.0009, rank=2
   3. Feature_2_t3: importance=0.0007, rank=3
   4. Feature_0_t3: importance=0.0007, rank=4
   5. Feature_2_t0: importance=0.0007, rank=5

📊 LMAT Results:
  Baseline MAPE: 8.22%
  Enhanced MAPE: 9.19%
  MAPE Improvement: -0.97% (-11.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 250/464: LNC
============================================================
📊 Loading data for LNC...
📊 Loading data for LNC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for LNC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for LNC...

==================================================
Training Baseline LNC (SVM)
==================================================
Training SVM model...

Baseline LNC Performance:
MAE: 304120.4823
RMSE: 397922.8614
MAPE: 7.15%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 150
   • Highly important features (top 5%): 79

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_85_t1: importance=0.0011, rank=1
   2. Feature_63_t2: importance=0.0011, rank=2
   3. Feature_0_t3: importance=0.0009, rank=3
   4. Feature_82_t2: importance=0.0006, rank=4
   5. Feature_86_t3: importance=0.0005, rank=5

🔧 Applying universal feature engineering for LNC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for LNC...

==================================================
Training Enhanced LNC (SVM)
==================================================
Training SVM model...

Enhanced LNC Performance:
MAE: 312467.9896
RMSE: 391795.1827
MAPE: 7.28%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 21
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t1: importance=0.0066, rank=1
   2. Feature_0_t3: importance=0.0048, rank=2
   3. Feature_0_t2: importance=0.0016, rank=3
   4. Feature_1_t1: importance=0.0014, rank=4
   5. Feature_1_t3: importance=0.0014, rank=5

📊 LNC Results:
  Baseline MAPE: 7.15%
  Enhanced MAPE: 7.28%
  MAPE Improvement: -0.13% (-1.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 251/464: LNN
============================================================
📊 Loading data for LNN...
📊 Loading data for LNN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for LNN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for LNN...

==================================================
Training Baseline LNN (SVM)
==================================================
Training SVM model...

Baseline LNN Performance:
MAE: 36023.3953
RMSE: 43732.7048
MAPE: 9.79%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 195
   • Highly important features (top 5%): 137

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_90_t1: importance=0.0005, rank=1
   2. Feature_68_t3: importance=0.0005, rank=2
   3. Feature_89_t1: importance=0.0004, rank=3
   4. Feature_65_t1: importance=0.0002, rank=4
   5. Feature_70_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for LNN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for LNN...

==================================================
Training Enhanced LNN (SVM)
==================================================
Training SVM model...

Enhanced LNN Performance:
MAE: 33722.7828
RMSE: 43027.9625
MAPE: 9.26%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 35
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0014, rank=1
   2. Feature_2_t0: importance=0.0014, rank=2
   3. Feature_0_t1: importance=0.0013, rank=3
   4. Feature_0_t0: importance=0.0012, rank=4
   5. Feature_0_t2: importance=0.0009, rank=5

📊 LNN Results:
  Baseline MAPE: 9.79%
  Enhanced MAPE: 9.26%
  MAPE Improvement: +0.53% (+5.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 252/464: LPG
============================================================
📊 Loading data for LPG...
📊 Loading data for LPG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing LPG: 'LPG'

============================================================
TESTING TICKER 253/464: LQDT
============================================================
📊 Loading data for LQDT...
📊 Loading data for LQDT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for LQDT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for LQDT...

==================================================
Training Baseline LQDT (SVM)
==================================================
Training SVM model...

Baseline LQDT Performance:
MAE: 105366.1218
RMSE: 128738.7671
MAPE: 9.86%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 133
   • Highly important features (top 5%): 85

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t1: importance=0.0005, rank=1
   2. Feature_72_t0: importance=0.0004, rank=2
   3. Feature_85_t1: importance=0.0004, rank=3
   4. Feature_0_t3: importance=0.0004, rank=4
   5. Feature_93_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for LQDT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for LQDT...

==================================================
Training Enhanced LQDT (SVM)
==================================================
Training SVM model...

Enhanced LQDT Performance:
MAE: 149935.1567
RMSE: 166563.9404
MAPE: 15.31%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 23
   • Highly important features (top 5%): 10

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0039, rank=1
   2. Feature_1_t3: importance=0.0023, rank=2
   3. Feature_2_t3: importance=0.0019, rank=3
   4. Feature_2_t0: importance=0.0016, rank=4
   5. Feature_0_t1: importance=0.0009, rank=5

📊 LQDT Results:
  Baseline MAPE: 9.86%
  Enhanced MAPE: 15.31%
  MAPE Improvement: -5.44% (-55.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 254/464: LRN
============================================================
📊 Loading data for LRN...
📊 Loading data for LRN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for LRN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for LRN...

==================================================
Training Baseline LRN (SVM)
==================================================
Training SVM model...

Baseline LRN Performance:
MAE: 400785.3067
RMSE: 608632.7562
MAPE: 7.93%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 120
   • Highly important features (top 5%): 49

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_94_t2: importance=0.0009, rank=1
   2. Feature_71_t0: importance=0.0007, rank=2
   3. Feature_65_t3: importance=0.0007, rank=3
   4. Feature_63_t1: importance=0.0005, rank=4
   5. Feature_64_t0: importance=0.0004, rank=5

🔧 Applying universal feature engineering for LRN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for LRN...

==================================================
Training Enhanced LRN (SVM)
==================================================
Training SVM model...

Enhanced LRN Performance:
MAE: 456948.8395
RMSE: 666759.4292
MAPE: 9.20%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 53
   • Highly important features (top 5%): 39

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_11_t0: importance=0.0011, rank=1
   2. Feature_12_t0: importance=0.0011, rank=2
   3. Feature_2_t0: importance=0.0010, rank=3
   4. Feature_1_t2: importance=0.0007, rank=4
   5. Feature_1_t3: importance=0.0006, rank=5

📊 LRN Results:
  Baseline MAPE: 7.93%
  Enhanced MAPE: 9.20%
  MAPE Improvement: -1.28% (-16.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 255/464: LTC
============================================================
📊 Loading data for LTC...
📊 Loading data for LTC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for LTC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for LTC...

==================================================
Training Baseline LTC (SVM)
==================================================
Training SVM model...

Baseline LTC Performance:
MAE: 109758.7899
RMSE: 136620.0783
MAPE: 6.80%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 292
   • Highly important features (top 5%): 82

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0004, rank=1
   2. Feature_63_t0: importance=0.0004, rank=2
   3. Feature_91_t1: importance=0.0003, rank=3
   4. Feature_0_t0: importance=0.0003, rank=4
   5. Feature_0_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for LTC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for LTC...

==================================================
Training Enhanced LTC (SVM)
==================================================
Training SVM model...

Enhanced LTC Performance:
MAE: 131634.7220
RMSE: 167869.4653
MAPE: 8.23%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 45
   • Highly important features (top 5%): 26

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0038, rank=1
   2. Feature_2_t3: importance=0.0024, rank=2
   3. Feature_2_t0: importance=0.0018, rank=3
   4. Feature_13_t2: importance=0.0014, rank=4
   5. Feature_0_t0: importance=0.0013, rank=5

📊 LTC Results:
  Baseline MAPE: 6.80%
  Enhanced MAPE: 8.23%
  MAPE Improvement: -1.44% (-21.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 256/464: LXP
============================================================
📊 Loading data for LXP...
📊 Loading data for LXP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for LXP...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for LXP...

==================================================
Training Baseline LXP (SVM)
==================================================
Training SVM model...

Baseline LXP Performance:
MAE: 978070.0538
RMSE: 1232872.0674
MAPE: 18.93%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 208
   • Highly important features (top 5%): 91

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_92_t3: importance=0.0011, rank=1
   2. Feature_79_t2: importance=0.0008, rank=2
   3. Feature_91_t3: importance=0.0007, rank=3
   4. Feature_91_t1: importance=0.0006, rank=4
   5. Feature_63_t2: importance=0.0006, rank=5

🔧 Applying universal feature engineering for LXP...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for LXP...

==================================================
Training Enhanced LXP (SVM)
==================================================
Training SVM model...

Enhanced LXP Performance:
MAE: 819987.3584
RMSE: 1075617.7091
MAPE: 16.53%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 40
   • Highly important features (top 5%): 34

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0024, rank=1
   2. Feature_0_t3: importance=0.0017, rank=2
   3. Feature_1_t3: importance=0.0015, rank=3
   4. Feature_12_t3: importance=0.0014, rank=4
   5. Feature_1_t2: importance=0.0013, rank=5

📊 LXP Results:
  Baseline MAPE: 18.93%
  Enhanced MAPE: 16.53%
  MAPE Improvement: +2.41% (+12.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 257/464: LZB
============================================================
📊 Loading data for LZB...
📊 Loading data for LZB from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for LZB...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for LZB...

==================================================
Training Baseline LZB (SVM)
==================================================
Training SVM model...

Baseline LZB Performance:
MAE: 220745.0501
RMSE: 278769.0011
MAPE: 9.11%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 179
   • Highly important features (top 5%): 116

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t3: importance=0.0003, rank=1
   2. Feature_77_t3: importance=0.0002, rank=2
   3. Feature_1_t3: importance=0.0001, rank=3
   4. Feature_78_t3: importance=0.0001, rank=4
   5. Feature_0_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for LZB...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for LZB...

==================================================
Training Enhanced LZB (SVM)
==================================================
Training SVM model...

Enhanced LZB Performance:
MAE: 214243.2459
RMSE: 271839.6996
MAPE: 8.78%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 36
   • Highly important features (top 5%): 25

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0017, rank=1
   2. Feature_2_t3: importance=0.0006, rank=2
   3. Feature_1_t3: importance=0.0005, rank=3
   4. Feature_3_t3: importance=0.0004, rank=4
   5. Feature_0_t2: importance=0.0003, rank=5

📊 LZB Results:
  Baseline MAPE: 9.11%
  Enhanced MAPE: 8.78%
  MAPE Improvement: +0.34% (+3.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 258/464: MAC
============================================================
📊 Loading data for MAC...
📊 Loading data for MAC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MAC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MAC...

==================================================
Training Baseline MAC (SVM)
==================================================
Training SVM model...

Baseline MAC Performance:
MAE: 761527.5301
RMSE: 972679.2086
MAPE: 5.40%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 205
   • Highly important features (top 5%): 126

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_77_t2: importance=0.0003, rank=1
   2. Feature_67_t3: importance=0.0003, rank=2
   3. Feature_75_t3: importance=0.0002, rank=3
   4. Feature_68_t3: importance=0.0002, rank=4
   5. Feature_91_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for MAC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MAC...

==================================================
Training Enhanced MAC (SVM)
==================================================
Training SVM model...

Enhanced MAC Performance:
MAE: 744506.5214
RMSE: 955298.9391
MAPE: 5.37%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 26
   • Highly important features (top 5%): 15

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0028, rank=1
   2. Feature_0_t1: importance=0.0010, rank=2
   3. Feature_2_t3: importance=0.0008, rank=3
   4. Feature_2_t2: importance=0.0006, rank=4
   5. Feature_1_t2: importance=0.0006, rank=5

📊 MAC Results:
  Baseline MAPE: 5.40%
  Enhanced MAPE: 5.37%
  MAPE Improvement: +0.03% (+0.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 259/464: MAN
============================================================
📊 Loading data for MAN...
📊 Loading data for MAN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MAN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MAN...

==================================================
Training Baseline MAN (SVM)
==================================================
Training SVM model...

Baseline MAN Performance:
MAE: 212625.6135
RMSE: 276025.0238
MAPE: 9.66%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 360
   • Highly important features (top 5%): 276

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_72_t3: importance=0.0004, rank=1
   2. Feature_73_t3: importance=0.0002, rank=2
   3. Feature_85_t3: importance=0.0002, rank=3
   4. Feature_84_t1: importance=0.0002, rank=4
   5. Feature_83_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for MAN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MAN...

==================================================
Training Enhanced MAN (SVM)
==================================================
Training SVM model...

Enhanced MAN Performance:
MAE: 221589.1087
RMSE: 296382.9012
MAPE: 9.54%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 49
   • Highly important features (top 5%): 42

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0059, rank=1
   2. Feature_1_t1: importance=0.0014, rank=2
   3. Feature_2_t3: importance=0.0013, rank=3
   4. Feature_0_t1: importance=0.0011, rank=4
   5. Feature_1_t0: importance=0.0009, rank=5

📊 MAN Results:
  Baseline MAPE: 9.66%
  Enhanced MAPE: 9.54%
  MAPE Improvement: +0.12% (+1.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 260/464: MARA
============================================================
📊 Loading data for MARA...
📊 Loading data for MARA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MARA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MARA...

==================================================
Training Baseline MARA (SVM)
==================================================
Training SVM model...

Baseline MARA Performance:
MAE: 5180651.9467
RMSE: 5943838.7786
MAPE: 7.59%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 62
   • Highly important features (top 5%): 35

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t0: importance=0.0031, rank=1
   2. Feature_2_t3: importance=0.0013, rank=2
   3. Feature_63_t3: importance=0.0012, rank=3
   4. Feature_96_t0: importance=0.0007, rank=4
   5. Feature_76_t1: importance=0.0007, rank=5

🔧 Applying universal feature engineering for MARA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MARA...

==================================================
Training Enhanced MARA (SVM)
==================================================
Training SVM model...

Enhanced MARA Performance:
MAE: 5289008.4926
RMSE: 6328876.1971
MAPE: 7.75%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 31
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0041, rank=1
   2. Feature_2_t1: importance=0.0032, rank=2
   3. Feature_2_t2: importance=0.0020, rank=3
   4. Feature_1_t3: importance=0.0014, rank=4
   5. Feature_0_t2: importance=0.0013, rank=5

📊 MARA Results:
  Baseline MAPE: 7.59%
  Enhanced MAPE: 7.75%
  MAPE Improvement: -0.15% (-2.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 261/464: MATW
============================================================
📊 Loading data for MATW...
📊 Loading data for MATW from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MATW...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MATW...

==================================================
Training Baseline MATW (SVM)
==================================================
Training SVM model...

Baseline MATW Performance:
MAE: 90915.6632
RMSE: 117032.7300
MAPE: 9.41%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 277
   • Highly important features (top 5%): 159

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t3: importance=0.0003, rank=1
   2. Feature_70_t3: importance=0.0003, rank=2
   3. Feature_96_t3: importance=0.0003, rank=3
   4. Feature_74_t3: importance=0.0002, rank=4
   5. Feature_75_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for MATW...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MATW...

==================================================
Training Enhanced MATW (SVM)
==================================================
Training SVM model...

Enhanced MATW Performance:
MAE: 88679.9649
RMSE: 113866.3499
MAPE: 9.12%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 36

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0008, rank=1
   2. Feature_1_t1: importance=0.0008, rank=2
   3. Feature_0_t2: importance=0.0007, rank=3
   4. Feature_1_t2: importance=0.0006, rank=4
   5. Feature_2_t2: importance=0.0005, rank=5

📊 MATW Results:
  Baseline MAPE: 9.41%
  Enhanced MAPE: 9.12%
  MAPE Improvement: +0.29% (+3.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 262/464: MATX
============================================================
📊 Loading data for MATX...
📊 Loading data for MATX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MATX...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MATX...

==================================================
Training Baseline MATX (SVM)
==================================================
Training SVM model...

Baseline MATX Performance:
MAE: 163024.8322
RMSE: 236233.6559
MAPE: 15.66%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 144
   • Highly important features (top 5%): 45

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0004, rank=1
   2. Feature_73_t3: importance=0.0004, rank=2
   3. Feature_63_t1: importance=0.0004, rank=3
   4. Feature_0_t1: importance=0.0004, rank=4
   5. Feature_94_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for MATX...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MATX...

==================================================
Training Enhanced MATX (SVM)
==================================================
Training SVM model...

Enhanced MATX Performance:
MAE: 155502.3286
RMSE: 232210.1437
MAPE: 15.12%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 29
   • Highly important features (top 5%): 18

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t1: importance=0.0029, rank=1
   2. Feature_0_t3: importance=0.0022, rank=2
   3. Feature_1_t3: importance=0.0017, rank=3
   4. Feature_0_t2: importance=0.0013, rank=4
   5. Feature_2_t3: importance=0.0012, rank=5

📊 MATX Results:
  Baseline MAPE: 15.66%
  Enhanced MAPE: 15.12%
  MAPE Improvement: +0.54% (+3.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 263/464: MC
============================================================
📊 Loading data for MC...
📊 Loading data for MC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing MC: 'MC'

============================================================
TESTING TICKER 264/464: MCRI
============================================================
📊 Loading data for MCRI...
📊 Loading data for MCRI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MCRI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MCRI...

==================================================
Training Baseline MCRI (SVM)
==================================================
Training SVM model...

Baseline MCRI Performance:
MAE: 55115.9856
RMSE: 81999.4455
MAPE: 19.72%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 232
   • Highly important features (top 5%): 153

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_84_t2: importance=0.0009, rank=1
   2. Feature_68_t2: importance=0.0008, rank=2
   3. Feature_85_t1: importance=0.0008, rank=3
   4. Feature_64_t3: importance=0.0007, rank=4
   5. Feature_85_t2: importance=0.0005, rank=5

🔧 Applying universal feature engineering for MCRI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MCRI...

==================================================
Training Enhanced MCRI (SVM)
==================================================
Training SVM model...

Enhanced MCRI Performance:
MAE: 59181.9326
RMSE: 82598.0319
MAPE: 20.89%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 50
   • Highly important features (top 5%): 38

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0034, rank=1
   2. Feature_1_t3: importance=0.0034, rank=2
   3. Feature_2_t3: importance=0.0031, rank=3
   4. Feature_2_t1: importance=0.0020, rank=4
   5. Feature_1_t2: importance=0.0020, rank=5

📊 MCRI Results:
  Baseline MAPE: 19.72%
  Enhanced MAPE: 20.89%
  MAPE Improvement: -1.17% (-5.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 265/464: MCY
============================================================
📊 Loading data for MCY...
📊 Loading data for MCY from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MCY...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MCY...

==================================================
Training Baseline MCY (SVM)
==================================================
Training SVM model...

Baseline MCY Performance:
MAE: 138536.1906
RMSE: 225966.6388
MAPE: 12.95%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 294
   • Highly important features (top 5%): 159

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t0: importance=0.0005, rank=1
   2. Feature_87_t1: importance=0.0005, rank=2
   3. Feature_70_t2: importance=0.0004, rank=3
   4. Feature_92_t3: importance=0.0004, rank=4
   5. Feature_65_t0: importance=0.0004, rank=5

🔧 Applying universal feature engineering for MCY...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MCY...

==================================================
Training Enhanced MCY (SVM)
==================================================
Training SVM model...

Enhanced MCY Performance:
MAE: 130453.2922
RMSE: 181525.2493
MAPE: 12.67%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 28

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0029, rank=1
   2. Feature_14_t2: importance=0.0028, rank=2
   3. Feature_11_t2: importance=0.0020, rank=3
   4. Feature_1_t1: importance=0.0018, rank=4
   5. Feature_1_t2: importance=0.0016, rank=5

📊 MCY Results:
  Baseline MAPE: 12.95%
  Enhanced MAPE: 12.67%
  MAPE Improvement: +0.29% (+2.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 266/464: MD
============================================================
📊 Loading data for MD...
📊 Loading data for MD from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MD...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MD...

==================================================
Training Baseline MD (SVM)
==================================================
Training SVM model...

Baseline MD Performance:
MAE: 457068.5806
RMSE: 708637.2724
MAPE: 13.06%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 123
   • Highly important features (top 5%): 79

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t0: importance=0.0008, rank=1
   2. Feature_63_t2: importance=0.0005, rank=2
   3. Feature_75_t3: importance=0.0004, rank=3
   4. Feature_63_t0: importance=0.0003, rank=4
   5. Feature_79_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for MD...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MD...

==================================================
Training Enhanced MD (SVM)
==================================================
Training SVM model...

Enhanced MD Performance:
MAE: 464034.9238
RMSE: 670651.8864
MAPE: 13.53%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 29
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t2: importance=0.0026, rank=1
   2. Feature_0_t3: importance=0.0021, rank=2
   3. Feature_1_t2: importance=0.0016, rank=3
   4. Feature_1_t3: importance=0.0014, rank=4
   5. Feature_0_t0: importance=0.0011, rank=5

📊 MD Results:
  Baseline MAPE: 13.06%
  Enhanced MAPE: 13.53%
  MAPE Improvement: -0.47% (-3.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 267/464: MDU
============================================================
📊 Loading data for MDU...
📊 Loading data for MDU from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MDU...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MDU...

==================================================
Training Baseline MDU (SVM)
==================================================
Training SVM model...

Baseline MDU Performance:
MAE: 415642.7354
RMSE: 547077.6497
MAPE: 10.42%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 190
   • Highly important features (top 5%): 104

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t2: importance=0.0014, rank=1
   2. Feature_0_t3: importance=0.0013, rank=2
   3. Feature_68_t0: importance=0.0011, rank=3
   4. Feature_63_t3: importance=0.0007, rank=4
   5. Feature_2_t3: importance=0.0007, rank=5

🔧 Applying universal feature engineering for MDU...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MDU...

==================================================
Training Enhanced MDU (SVM)
==================================================
Training SVM model...

Enhanced MDU Performance:
MAE: 469867.8128
RMSE: 638659.8103
MAPE: 10.97%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 45
   • Highly important features (top 5%): 33

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0133, rank=1
   2. Feature_2_t2: importance=0.0068, rank=2
   3. Feature_1_t3: importance=0.0038, rank=3
   4. Feature_0_t2: importance=0.0019, rank=4
   5. Feature_1_t0: importance=0.0019, rank=5

📊 MDU Results:
  Baseline MAPE: 10.42%
  Enhanced MAPE: 10.97%
  MAPE Improvement: -0.55% (-5.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 268/464: MGEE
============================================================
📊 Loading data for MGEE...
📊 Loading data for MGEE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MGEE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Error: Ticker 'MGEE' not found in short volume data.
Retrieved short volume data for 0 days
Creating short volume features with 15 days lookback...
No short volume data available, creating zero features
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MGEE...

==================================================
Training Baseline MGEE (SVM)
==================================================
Training SVM model...

Baseline MGEE Performance:
MAE: 171725.2237
RMSE: 276914.2449
MAPE: 13.65%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 68
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0051, rank=1
   2. Feature_1_t3: importance=0.0025, rank=2
   3. Feature_65_t1: importance=0.0025, rank=3
   4. Feature_0_t2: importance=0.0024, rank=4
   5. Feature_1_t0: importance=0.0023, rank=5

🔧 Applying universal feature engineering for MGEE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MGEE...

==================================================
Training Enhanced MGEE (SVM)
==================================================
Training SVM model...

Enhanced MGEE Performance:
MAE: 143519.6350
RMSE: 256776.7809
MAPE: 11.17%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 39
   • Highly important features (top 5%): 16

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0088, rank=1
   2. Feature_0_t3: importance=0.0068, rank=2
   3. Feature_1_t0: importance=0.0064, rank=3
   4. Feature_0_t2: importance=0.0038, rank=4
   5. Feature_1_t1: importance=0.0036, rank=5

📊 MGEE Results:
  Baseline MAPE: 13.65%
  Enhanced MAPE: 11.17%
  MAPE Improvement: +2.48% (+18.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 269/464: MGPI
============================================================
📊 Loading data for MGPI...
📊 Loading data for MGPI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MGPI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MGPI...

==================================================
Training Baseline MGPI (SVM)
==================================================
Training SVM model...

Baseline MGPI Performance:
MAE: 199916.1252
RMSE: 287358.1897
MAPE: 7.49%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 72
   • Highly important features (top 5%): 39

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_91_t2: importance=0.0001, rank=1
   2. Feature_89_t1: importance=0.0001, rank=2
   3. Feature_64_t0: importance=0.0001, rank=3
   4. Feature_66_t0: importance=0.0001, rank=4
   5. Feature_63_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for MGPI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MGPI...

==================================================
Training Enhanced MGPI (SVM)
==================================================
Training SVM model...

Enhanced MGPI Performance:
MAE: 197440.4580
RMSE: 273680.6227
MAPE: 7.27%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 16
   • Highly important features (top 5%): 9

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0005, rank=1
   2. Feature_2_t0: importance=0.0004, rank=2
   3. Feature_6_t3: importance=0.0002, rank=3
   4. Feature_2_t2: importance=0.0002, rank=4
   5. Feature_4_t3: importance=0.0001, rank=5

📊 MGPI Results:
  Baseline MAPE: 7.49%
  Enhanced MAPE: 7.27%
  MAPE Improvement: +0.22% (+3.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 270/464: MHO
============================================================
📊 Loading data for MHO...
📊 Loading data for MHO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MHO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MHO...

==================================================
Training Baseline MHO (SVM)
==================================================
Training SVM model...

Baseline MHO Performance:
MAE: 86115.8788
RMSE: 103497.3959
MAPE: 9.80%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 128
   • Highly important features (top 5%): 42

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_76_t2: importance=0.0008, rank=1
   2. Feature_70_t0: importance=0.0006, rank=2
   3. Feature_0_t0: importance=0.0004, rank=3
   4. Feature_78_t1: importance=0.0004, rank=4
   5. Feature_94_t0: importance=0.0004, rank=5

🔧 Applying universal feature engineering for MHO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MHO...

==================================================
Training Enhanced MHO (SVM)
==================================================
Training SVM model...

Enhanced MHO Performance:
MAE: 75690.2498
RMSE: 96664.0164
MAPE: 8.84%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 25
   • Highly important features (top 5%): 18

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0040, rank=1
   2. Feature_1_t3: importance=0.0033, rank=2
   3. Feature_2_t3: importance=0.0025, rank=3
   4. Feature_0_t0: importance=0.0019, rank=4
   5. Feature_1_t0: importance=0.0015, rank=5

📊 MHO Results:
  Baseline MAPE: 9.80%
  Enhanced MAPE: 8.84%
  MAPE Improvement: +0.96% (+9.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 271/464: MKTX
============================================================
📊 Loading data for MKTX...
📊 Loading data for MKTX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing MKTX: 'MKTX'

============================================================
TESTING TICKER 272/464: MMI
============================================================
📊 Loading data for MMI...
📊 Loading data for MMI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MMI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MMI...

==================================================
Training Baseline MMI (SVM)
==================================================
Training SVM model...

Baseline MMI Performance:
MAE: 69142.5132
RMSE: 97280.9416
MAPE: 11.53%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 298
   • Highly important features (top 5%): 157

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_74_t3: importance=0.0005, rank=1
   2. Feature_70_t3: importance=0.0004, rank=2
   3. Feature_79_t0: importance=0.0004, rank=3
   4. Feature_65_t1: importance=0.0004, rank=4
   5. Feature_92_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for MMI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MMI...

==================================================
Training Enhanced MMI (SVM)
==================================================
Training SVM model...

Enhanced MMI Performance:
MAE: 53830.1831
RMSE: 73002.2160
MAPE: 9.35%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 53
   • Highly important features (top 5%): 45

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0019, rank=1
   2. Feature_0_t3: importance=0.0016, rank=2
   3. Feature_2_t0: importance=0.0015, rank=3
   4. Feature_9_t3: importance=0.0011, rank=4
   5. Feature_6_t1: importance=0.0011, rank=5

📊 MMI Results:
  Baseline MAPE: 11.53%
  Enhanced MAPE: 9.35%
  MAPE Improvement: +2.18% (+18.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 273/464: MMSI
============================================================
📊 Loading data for MMSI...
📊 Loading data for MMSI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MMSI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MMSI...

==================================================
Training Baseline MMSI (SVM)
==================================================
Training SVM model...

Baseline MMSI Performance:
MAE: 219124.4701
RMSE: 263191.3645
MAPE: 8.22%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 245
   • Highly important features (top 5%): 131

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t2: importance=0.0005, rank=1
   2. Feature_63_t1: importance=0.0004, rank=2
   3. Feature_64_t3: importance=0.0003, rank=3
   4. Feature_68_t2: importance=0.0003, rank=4
   5. Feature_68_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for MMSI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MMSI...

==================================================
Training Enhanced MMSI (SVM)
==================================================
Training SVM model...

Enhanced MMSI Performance:
MAE: 242460.2004
RMSE: 297105.5269
MAPE: 8.88%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 39
   • Highly important features (top 5%): 13

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0024, rank=1
   2. Feature_2_t2: importance=0.0014, rank=2
   3. Feature_0_t3: importance=0.0012, rank=3
   4. Feature_2_t1: importance=0.0008, rank=4
   5. Feature_5_t3: importance=0.0006, rank=5

📊 MMSI Results:
  Baseline MAPE: 8.22%
  Enhanced MAPE: 8.88%
  MAPE Improvement: -0.66% (-8.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 274/464: MNRO
============================================================
📊 Loading data for MNRO...
📊 Loading data for MNRO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MNRO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MNRO...

==================================================
Training Baseline MNRO (SVM)
==================================================
Training SVM model...

Baseline MNRO Performance:
MAE: 271093.4427
RMSE: 339245.4292
MAPE: 6.93%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 191
   • Highly important features (top 5%): 103

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_82_t1: importance=0.0000, rank=1
   2. Feature_65_t2: importance=0.0000, rank=2
   3. Feature_69_t0: importance=0.0000, rank=3
   4. Feature_69_t3: importance=0.0000, rank=4
   5. Feature_1_t3: importance=0.0000, rank=5

🔧 Applying universal feature engineering for MNRO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MNRO...

==================================================
Training Enhanced MNRO (SVM)
==================================================
Training SVM model...

Enhanced MNRO Performance:
MAE: 274012.9717
RMSE: 342411.2770
MAPE: 7.00%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 26

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0001, rank=1
   2. Feature_1_t0: importance=0.0001, rank=2
   3. Feature_1_t3: importance=0.0001, rank=3
   4. Feature_10_t3: importance=0.0001, rank=4
   5. Feature_4_t0: importance=0.0001, rank=5

📊 MNRO Results:
  Baseline MAPE: 6.93%
  Enhanced MAPE: 7.00%
  MAPE Improvement: -0.07% (-1.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 275/464: MPW
============================================================
📊 Loading data for MPW...
📊 Loading data for MPW from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MPW...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MPW...

==================================================
Training Baseline MPW (SVM)
==================================================
Training SVM model...

Baseline MPW Performance:
MAE: 11503778.1841
RMSE: 14289704.9379
MAPE: 5.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 49
   • Highly important features (top 5%): 31

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_71_t1: importance=0.0014, rank=1
   2. Feature_84_t3: importance=0.0004, rank=2
   3. Feature_82_t2: importance=0.0004, rank=3
   4. Feature_63_t2: importance=0.0004, rank=4
   5. Feature_72_t1: importance=0.0004, rank=5

🔧 Applying universal feature engineering for MPW...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MPW...

==================================================
Training Enhanced MPW (SVM)
==================================================
Training SVM model...

Enhanced MPW Performance:
MAE: 7645416.7442
RMSE: 10965994.2201
MAPE: 3.75%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 26
   • Highly important features (top 5%): 16

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0009, rank=1
   2. Feature_2_t0: importance=0.0007, rank=2
   3. Feature_1_t3: importance=0.0005, rank=3
   4. Feature_1_t1: importance=0.0004, rank=4
   5. Feature_0_t2: importance=0.0003, rank=5

📊 MPW Results:
  Baseline MAPE: 5.74%
  Enhanced MAPE: 3.75%
  MAPE Improvement: +1.99% (+34.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 276/464: MRCY
============================================================
📊 Loading data for MRCY...
📊 Loading data for MRCY from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MRCY...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MRCY...

==================================================
Training Baseline MRCY (SVM)
==================================================
Training SVM model...

Baseline MRCY Performance:
MAE: 227371.4532
RMSE: 279053.6404
MAPE: 4.96%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 176
   • Highly important features (top 5%): 56

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0004, rank=1
   2. Feature_78_t0: importance=0.0002, rank=2
   3. Feature_84_t0: importance=0.0002, rank=3
   4. Feature_0_t0: importance=0.0002, rank=4
   5. Feature_80_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for MRCY...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MRCY...

==================================================
Training Enhanced MRCY (SVM)
==================================================
Training SVM model...

Enhanced MRCY Performance:
MAE: 206216.4784
RMSE: 278269.7317
MAPE: 4.57%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 39
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0009, rank=1
   2. Feature_2_t1: importance=0.0007, rank=2
   3. Feature_0_t2: importance=0.0006, rank=3
   4. Feature_1_t2: importance=0.0006, rank=4
   5. Feature_1_t0: importance=0.0005, rank=5

📊 MRCY Results:
  Baseline MAPE: 4.96%
  Enhanced MAPE: 4.57%
  MAPE Improvement: +0.39% (+7.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 277/464: MRTN
============================================================
📊 Loading data for MRTN...
📊 Loading data for MRTN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing MRTN: 'MRTN'

============================================================
TESTING TICKER 278/464: MSEX
============================================================
📊 Loading data for MSEX...
📊 Loading data for MSEX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MSEX...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MSEX...

==================================================
Training Baseline MSEX (SVM)
==================================================
Training SVM model...

Baseline MSEX Performance:
MAE: 58062.6016
RMSE: 86990.1628
MAPE: 10.02%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 109
   • Highly important features (top 5%): 45

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0012, rank=1
   2. Feature_95_t3: importance=0.0012, rank=2
   3. Feature_71_t2: importance=0.0009, rank=3
   4. Feature_69_t2: importance=0.0007, rank=4
   5. Feature_72_t2: importance=0.0006, rank=5

🔧 Applying universal feature engineering for MSEX...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MSEX...

==================================================
Training Enhanced MSEX (SVM)
==================================================
Training SVM model...

Enhanced MSEX Performance:
MAE: 60007.5645
RMSE: 83975.0181
MAPE: 10.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 22
   • Highly important features (top 5%): 13

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0063, rank=1
   2. Feature_2_t0: importance=0.0042, rank=2
   3. Feature_0_t3: importance=0.0040, rank=3
   4. Feature_1_t1: importance=0.0025, rank=4
   5. Feature_2_t3: importance=0.0018, rank=5

📊 MSEX Results:
  Baseline MAPE: 10.02%
  Enhanced MAPE: 10.74%
  MAPE Improvement: -0.72% (-7.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 279/464: MTH
============================================================
📊 Loading data for MTH...
📊 Loading data for MTH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MTH...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MTH...

==================================================
Training Baseline MTH (SVM)
==================================================
Training SVM model...

Baseline MTH Performance:
MAE: 210998.7665
RMSE: 342365.5678
MAPE: 13.01%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 361
   • Highly important features (top 5%): 252

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_78_t3: importance=0.0007, rank=1
   2. Feature_92_t2: importance=0.0004, rank=2
   3. Feature_90_t2: importance=0.0003, rank=3
   4. Feature_89_t2: importance=0.0003, rank=4
   5. Feature_2_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for MTH...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MTH...

==================================================
Training Enhanced MTH (SVM)
==================================================
Training SVM model...

Enhanced MTH Performance:
MAE: 187657.3420
RMSE: 320452.7206
MAPE: 11.91%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 55
   • Highly important features (top 5%): 35

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0034, rank=1
   2. Feature_1_t3: importance=0.0034, rank=2
   3. Feature_0_t2: importance=0.0029, rank=3
   4. Feature_0_t1: importance=0.0026, rank=4
   5. Feature_1_t2: importance=0.0020, rank=5

📊 MTH Results:
  Baseline MAPE: 13.01%
  Enhanced MAPE: 11.91%
  MAPE Improvement: +1.10% (+8.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 280/464: MTRN
============================================================
📊 Loading data for MTRN...
📊 Loading data for MTRN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MTRN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MTRN...

==================================================
Training Baseline MTRN (SVM)
==================================================
Training SVM model...

Baseline MTRN Performance:
MAE: 29803.8738
RMSE: 42035.0382
MAPE: 8.63%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 233
   • Highly important features (top 5%): 98

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_92_t3: importance=0.0012, rank=1
   2. Feature_0_t3: importance=0.0011, rank=2
   3. Feature_67_t0: importance=0.0008, rank=3
   4. Feature_95_t1: importance=0.0007, rank=4
   5. Feature_70_t0: importance=0.0007, rank=5

🔧 Applying universal feature engineering for MTRN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MTRN...

==================================================
Training Enhanced MTRN (SVM)
==================================================
Training SVM model...

Enhanced MTRN Performance:
MAE: 33099.2558
RMSE: 46004.4088
MAPE: 9.81%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 31

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t2: importance=0.0042, rank=1
   2. Feature_0_t3: importance=0.0042, rank=2
   3. Feature_2_t3: importance=0.0033, rank=3
   4. Feature_2_t0: importance=0.0027, rank=4
   5. Feature_1_t2: importance=0.0018, rank=5

📊 MTRN Results:
  Baseline MAPE: 8.63%
  Enhanced MAPE: 9.81%
  MAPE Improvement: -1.19% (-13.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 281/464: MTX
============================================================
📊 Loading data for MTX...
📊 Loading data for MTX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MTX...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MTX...

==================================================
Training Baseline MTX (SVM)
==================================================
Training SVM model...

Baseline MTX Performance:
MAE: 46832.2766
RMSE: 56189.9267
MAPE: 12.36%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 327
   • Highly important features (top 5%): 167

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_79_t1: importance=0.0007, rank=1
   2. Feature_0_t3: importance=0.0006, rank=2
   3. Feature_95_t0: importance=0.0005, rank=3
   4. Feature_70_t2: importance=0.0004, rank=4
   5. Feature_93_t0: importance=0.0004, rank=5

🔧 Applying universal feature engineering for MTX...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MTX...

==================================================
Training Enhanced MTX (SVM)
==================================================
Training SVM model...

Enhanced MTX Performance:
MAE: 46446.2770
RMSE: 55724.1746
MAPE: 12.01%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 26

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0064, rank=1
   2. Feature_0_t1: importance=0.0033, rank=2
   3. Feature_2_t3: importance=0.0029, rank=3
   4. Feature_1_t3: importance=0.0023, rank=4
   5. Feature_2_t1: importance=0.0018, rank=5

📊 MTX Results:
  Baseline MAPE: 12.36%
  Enhanced MAPE: 12.01%
  MAPE Improvement: +0.35% (+2.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 282/464: MWA
============================================================
📊 Loading data for MWA...
📊 Loading data for MWA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MWA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MWA...

==================================================
Training Baseline MWA (SVM)
==================================================
Training SVM model...

Baseline MWA Performance:
MAE: 511898.8346
RMSE: 778834.7397
MAPE: 13.66%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 344
   • Highly important features (top 5%): 163

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_69_t1: importance=0.0004, rank=1
   2. Feature_94_t0: importance=0.0003, rank=2
   3. Feature_70_t0: importance=0.0003, rank=3
   4. Feature_0_t2: importance=0.0003, rank=4
   5. Feature_70_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for MWA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MWA...

==================================================
Training Enhanced MWA (SVM)
==================================================
Training SVM model...

Enhanced MWA Performance:
MAE: 551172.4246
RMSE: 805753.8013
MAPE: 14.82%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 44
   • Highly important features (top 5%): 24

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t2: importance=0.0029, rank=1
   2. Feature_0_t3: importance=0.0016, rank=2
   3. Feature_0_t0: importance=0.0016, rank=3
   4. Feature_2_t0: importance=0.0014, rank=4
   5. Feature_11_t3: importance=0.0013, rank=5

📊 MWA Results:
  Baseline MAPE: 13.66%
  Enhanced MAPE: 14.82%
  MAPE Improvement: -1.16% (-8.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 283/464: MXL
============================================================
📊 Loading data for MXL...
📊 Loading data for MXL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing MXL: 'MXL'

============================================================
TESTING TICKER 284/464: MYGN
============================================================
📊 Loading data for MYGN...
📊 Loading data for MYGN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MYGN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MYGN...

==================================================
Training Baseline MYGN (SVM)
==================================================
Training SVM model...

Baseline MYGN Performance:
MAE: 544015.4218
RMSE: 736301.2770
MAPE: 10.49%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 148
   • Highly important features (top 5%): 67

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_85_t1: importance=0.0002, rank=1
   2. Feature_71_t1: importance=0.0002, rank=2
   3. Feature_75_t0: importance=0.0002, rank=3
   4. Feature_65_t2: importance=0.0002, rank=4
   5. Feature_90_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for MYGN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MYGN...

==================================================
Training Enhanced MYGN (SVM)
==================================================
Training SVM model...

Enhanced MYGN Performance:
MAE: 614422.9882
RMSE: 784453.1970
MAPE: 11.83%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 29

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0010, rank=1
   2. Feature_2_t1: importance=0.0008, rank=2
   3. Feature_1_t3: importance=0.0006, rank=3
   4. Feature_0_t3: importance=0.0005, rank=4
   5. Feature_2_t0: importance=0.0004, rank=5

📊 MYGN Results:
  Baseline MAPE: 10.49%
  Enhanced MAPE: 11.83%
  MAPE Improvement: -1.34% (-12.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 285/464: MYRG
============================================================
📊 Loading data for MYRG...
📊 Loading data for MYRG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for MYRG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for MYRG...

==================================================
Training Baseline MYRG (SVM)
==================================================
Training SVM model...

Baseline MYRG Performance:
MAE: 79742.8888
RMSE: 106336.5007
MAPE: 12.37%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 203
   • Highly important features (top 5%): 135

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0007, rank=1
   2. Feature_71_t0: importance=0.0007, rank=2
   3. Feature_96_t1: importance=0.0006, rank=3
   4. Feature_0_t2: importance=0.0006, rank=4
   5. Feature_77_t2: importance=0.0005, rank=5

🔧 Applying universal feature engineering for MYRG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for MYRG...

==================================================
Training Enhanced MYRG (SVM)
==================================================
Training SVM model...

Enhanced MYRG Performance:
MAE: 71256.3033
RMSE: 93918.4557
MAPE: 10.88%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 30
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0047, rank=1
   2. Feature_1_t2: importance=0.0028, rank=2
   3. Feature_0_t1: importance=0.0024, rank=3
   4. Feature_1_t0: importance=0.0020, rank=4
   5. Feature_1_t1: importance=0.0015, rank=5

📊 MYRG Results:
  Baseline MAPE: 12.37%
  Enhanced MAPE: 10.88%
  MAPE Improvement: +1.49% (+12.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 286/464: NAVI
============================================================
📊 Loading data for NAVI...
📊 Loading data for NAVI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NAVI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NAVI...

==================================================
Training Baseline NAVI (SVM)
==================================================
Training SVM model...

Baseline NAVI Performance:
MAE: 433226.6418
RMSE: 554119.8593
MAPE: 5.32%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 135
   • Highly important features (top 5%): 62

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_90_t0: importance=0.0002, rank=1
   2. Feature_75_t0: importance=0.0002, rank=2
   3. Feature_69_t0: importance=0.0001, rank=3
   4. Feature_75_t1: importance=0.0001, rank=4
   5. Feature_2_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for NAVI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NAVI...

==================================================
Training Enhanced NAVI (SVM)
==================================================
Training SVM model...

Enhanced NAVI Performance:
MAE: 403864.6411
RMSE: 563327.3071
MAPE: 4.92%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 29
   • Highly important features (top 5%): 21

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0018, rank=1
   2. Feature_0_t2: importance=0.0008, rank=2
   3. Feature_0_t3: importance=0.0007, rank=3
   4. Feature_2_t3: importance=0.0004, rank=4
   5. Feature_1_t2: importance=0.0003, rank=5

📊 NAVI Results:
  Baseline MAPE: 5.32%
  Enhanced MAPE: 4.92%
  MAPE Improvement: +0.39% (+7.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 287/464: NBHC
============================================================
📊 Loading data for NBHC...
📊 Loading data for NBHC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NBHC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NBHC...

==================================================
Training Baseline NBHC (SVM)
==================================================
Training SVM model...

Baseline NBHC Performance:
MAE: 74584.8843
RMSE: 98920.3540
MAPE: 11.70%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 294
   • Highly important features (top 5%): 139

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_76_t1: importance=0.0006, rank=1
   2. Feature_0_t3: importance=0.0005, rank=2
   3. Feature_72_t3: importance=0.0005, rank=3
   4. Feature_96_t0: importance=0.0005, rank=4
   5. Feature_85_t2: importance=0.0004, rank=5

🔧 Applying universal feature engineering for NBHC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NBHC...

==================================================
Training Enhanced NBHC (SVM)
==================================================
Training SVM model...

Enhanced NBHC Performance:
MAE: 81464.6406
RMSE: 105169.9520
MAPE: 13.08%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 55
   • Highly important features (top 5%): 43

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0042, rank=1
   2. Feature_0_t3: importance=0.0031, rank=2
   3. Feature_0_t1: importance=0.0017, rank=3
   4. Feature_2_t3: importance=0.0017, rank=4
   5. Feature_1_t2: importance=0.0014, rank=5

📊 NBHC Results:
  Baseline MAPE: 11.70%
  Enhanced MAPE: 13.08%
  MAPE Improvement: -1.38% (-11.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 288/464: NBTB
============================================================
📊 Loading data for NBTB...
📊 Loading data for NBTB from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NBTB...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NBTB...

==================================================
Training Baseline NBTB (SVM)
==================================================
Training SVM model...

Baseline NBTB Performance:
MAE: 125092.0934
RMSE: 168731.3410
MAPE: 10.16%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 246
   • Highly important features (top 5%): 167

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_73_t3: importance=0.0002, rank=1
   2. Feature_67_t3: importance=0.0001, rank=2
   3. Feature_76_t1: importance=0.0001, rank=3
   4. Feature_71_t3: importance=0.0001, rank=4
   5. Feature_74_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for NBTB...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NBTB...

==================================================
Training Enhanced NBTB (SVM)
==================================================
Training SVM model...

Enhanced NBTB Performance:
MAE: 115911.1283
RMSE: 160840.1171
MAPE: 9.34%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 36
   • Highly important features (top 5%): 24

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0018, rank=1
   2. Feature_1_t2: importance=0.0014, rank=2
   3. Feature_1_t0: importance=0.0006, rank=3
   4. Feature_3_t3: importance=0.0006, rank=4
   5. Feature_13_t0: importance=0.0005, rank=5

📊 NBTB Results:
  Baseline MAPE: 10.16%
  Enhanced MAPE: 9.34%
  MAPE Improvement: +0.82% (+8.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 289/464: NEO
============================================================
📊 Loading data for NEO...
📊 Loading data for NEO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NEO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NEO...

==================================================
Training Baseline NEO (SVM)
==================================================
Training SVM model...

Baseline NEO Performance:
MAE: 563765.1393
RMSE: 696134.7352
MAPE: 11.10%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 214
   • Highly important features (top 5%): 134

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_77_t3: importance=0.0004, rank=1
   2. Feature_90_t1: importance=0.0004, rank=2
   3. Feature_0_t3: importance=0.0003, rank=3
   4. Feature_80_t2: importance=0.0002, rank=4
   5. Feature_0_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for NEO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NEO...

==================================================
Training Enhanced NEO (SVM)
==================================================
Training SVM model...

Enhanced NEO Performance:
MAE: 582215.3967
RMSE: 712003.9863
MAPE: 12.90%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 32
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0029, rank=1
   2. Feature_0_t2: importance=0.0023, rank=2
   3. Feature_2_t3: importance=0.0006, rank=3
   4. Feature_13_t3: importance=0.0005, rank=4
   5. Feature_6_t2: importance=0.0005, rank=5

📊 NEO Results:
  Baseline MAPE: 11.10%
  Enhanced MAPE: 12.90%
  MAPE Improvement: -1.81% (-16.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 290/464: NEOG
============================================================
📊 Loading data for NEOG...
📊 Loading data for NEOG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NEOG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NEOG...

==================================================
Training Baseline NEOG (SVM)
==================================================
Training SVM model...

Baseline NEOG Performance:
MAE: 1600866.2211
RMSE: 2045372.3681
MAPE: 7.67%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 286
   • Highly important features (top 5%): 153

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_67_t3: importance=0.0014, rank=1
   2. Feature_68_t3: importance=0.0005, rank=2
   3. Feature_69_t1: importance=0.0004, rank=3
   4. Feature_75_t1: importance=0.0004, rank=4
   5. Feature_65_t0: importance=0.0003, rank=5

🔧 Applying universal feature engineering for NEOG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NEOG...

==================================================
Training Enhanced NEOG (SVM)
==================================================
Training SVM model...

Enhanced NEOG Performance:
MAE: 3612053.0959
RMSE: 4177673.7004
MAPE: 15.99%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 26

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t2: importance=0.0037, rank=1
   2. Feature_1_t3: importance=0.0021, rank=2
   3. Feature_1_t1: importance=0.0020, rank=3
   4. Feature_2_t3: importance=0.0017, rank=4
   5. Feature_2_t2: importance=0.0016, rank=5

📊 NEOG Results:
  Baseline MAPE: 7.67%
  Enhanced MAPE: 15.99%
  MAPE Improvement: -8.32% (-108.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 291/464: NGVT
============================================================
📊 Loading data for NGVT...
📊 Loading data for NGVT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NGVT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NGVT...

==================================================
Training Baseline NGVT (SVM)
==================================================
Training SVM model...

Baseline NGVT Performance:
MAE: 59693.1262
RMSE: 81882.3272
MAPE: 6.11%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 312
   • Highly important features (top 5%): 201

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_79_t3: importance=0.0004, rank=1
   2. Feature_77_t2: importance=0.0003, rank=2
   3. Feature_67_t3: importance=0.0002, rank=3
   4. Feature_63_t2: importance=0.0002, rank=4
   5. Feature_71_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for NGVT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NGVT...

==================================================
Training Enhanced NGVT (SVM)
==================================================
Training SVM model...

Enhanced NGVT Performance:
MAE: 72031.3080
RMSE: 89848.0585
MAPE: 7.21%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 35

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0009, rank=1
   2. Feature_2_t2: importance=0.0009, rank=2
   3. Feature_2_t1: importance=0.0008, rank=3
   4. Feature_5_t3: importance=0.0007, rank=4
   5. Feature_2_t0: importance=0.0006, rank=5

📊 NGVT Results:
  Baseline MAPE: 6.11%
  Enhanced MAPE: 7.21%
  MAPE Improvement: -1.10% (-18.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 292/464: NHC
============================================================
📊 Loading data for NHC...
📊 Loading data for NHC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NHC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NHC...

==================================================
Training Baseline NHC (SVM)
==================================================
Training SVM model...

Baseline NHC Performance:
MAE: 41401.2282
RMSE: 52254.0446
MAPE: 11.40%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 274
   • Highly important features (top 5%): 144

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_83_t1: importance=0.0007, rank=1
   2. Feature_70_t3: importance=0.0006, rank=2
   3. Feature_72_t3: importance=0.0006, rank=3
   4. Feature_88_t3: importance=0.0005, rank=4
   5. Feature_90_t3: importance=0.0005, rank=5

🔧 Applying universal feature engineering for NHC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NHC...

==================================================
Training Enhanced NHC (SVM)
==================================================
Training SVM model...

Enhanced NHC Performance:
MAE: 45062.6103
RMSE: 56523.9762
MAPE: 12.31%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 50
   • Highly important features (top 5%): 38

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0055, rank=1
   2. Feature_1_t3: importance=0.0033, rank=2
   3. Feature_5_t2: importance=0.0016, rank=3
   4. Feature_2_t0: importance=0.0016, rank=4
   5. Feature_9_t1: importance=0.0013, rank=5

📊 NHC Results:
  Baseline MAPE: 11.40%
  Enhanced MAPE: 12.31%
  MAPE Improvement: -0.91% (-8.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 293/464: NMIH
============================================================
📊 Loading data for NMIH...
📊 Loading data for NMIH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NMIH...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NMIH...

==================================================
Training Baseline NMIH (SVM)
==================================================
Training SVM model...

Baseline NMIH Performance:
MAE: 188349.4716
RMSE: 254903.0846
MAPE: 12.62%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 350
   • Highly important features (top 5%): 195

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0006, rank=1
   2. Feature_79_t0: importance=0.0005, rank=2
   3. Feature_92_t3: importance=0.0005, rank=3
   4. Feature_79_t2: importance=0.0004, rank=4
   5. Feature_63_t3: importance=0.0004, rank=5

🔧 Applying universal feature engineering for NMIH...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NMIH...

==================================================
Training Enhanced NMIH (SVM)
==================================================
Training SVM model...

Enhanced NMIH Performance:
MAE: 182032.1767
RMSE: 220555.5134
MAPE: 11.89%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 55
   • Highly important features (top 5%): 29

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0033, rank=1
   2. Feature_2_t2: importance=0.0029, rank=2
   3. Feature_0_t2: importance=0.0026, rank=3
   4. Feature_1_t1: importance=0.0026, rank=4
   5. Feature_1_t2: importance=0.0022, rank=5

📊 NMIH Results:
  Baseline MAPE: 12.62%
  Enhanced MAPE: 11.89%
  MAPE Improvement: +0.73% (+5.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 294/464: NOG
============================================================
📊 Loading data for NOG...
📊 Loading data for NOG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NOG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NOG...

==================================================
Training Baseline NOG (SVM)
==================================================
Training SVM model...

Baseline NOG Performance:
MAE: 936703.2994
RMSE: 1214630.3810
MAPE: 6.33%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 168
   • Highly important features (top 5%): 83

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_71_t3: importance=0.0029, rank=1
   2. Feature_72_t3: importance=0.0018, rank=2
   3. Feature_65_t3: importance=0.0015, rank=3
   4. Feature_93_t1: importance=0.0015, rank=4
   5. Feature_69_t3: importance=0.0013, rank=5

🔧 Applying universal feature engineering for NOG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NOG...

==================================================
Training Enhanced NOG (SVM)
==================================================
Training SVM model...

Enhanced NOG Performance:
MAE: 1695700.2977
RMSE: 1975322.6374
MAPE: 11.04%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 26
   • Highly important features (top 5%): 10

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0079, rank=1
   2. Feature_2_t1: importance=0.0034, rank=2
   3. Feature_2_t0: importance=0.0020, rank=3
   4. Feature_1_t3: importance=0.0015, rank=4
   5. Feature_1_t2: importance=0.0015, rank=5

📊 NOG Results:
  Baseline MAPE: 6.33%
  Enhanced MAPE: 11.04%
  MAPE Improvement: -4.71% (-74.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 295/464: NPK
============================================================
📊 Loading data for NPK...
📊 Loading data for NPK from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing NPK: 'NPK'

============================================================
TESTING TICKER 296/464: NPO
============================================================
📊 Loading data for NPO...
📊 Loading data for NPO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NPO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NPO...

==================================================
Training Baseline NPO (SVM)
==================================================
Training SVM model...

Baseline NPO Performance:
MAE: 52041.3669
RMSE: 80844.0844
MAPE: 11.23%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 240
   • Highly important features (top 5%): 133

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_86_t2: importance=0.0006, rank=1
   2. Feature_75_t3: importance=0.0004, rank=2
   3. Feature_83_t1: importance=0.0004, rank=3
   4. Feature_63_t1: importance=0.0003, rank=4
   5. Feature_70_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for NPO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NPO...

==================================================
Training Enhanced NPO (SVM)
==================================================
Training SVM model...

Enhanced NPO Performance:
MAE: 56302.0330
RMSE: 84597.7250
MAPE: 12.26%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 52
   • Highly important features (top 5%): 39

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0019, rank=1
   2. Feature_0_t2: importance=0.0016, rank=2
   3. Feature_1_t3: importance=0.0012, rank=3
   4. Feature_2_t3: importance=0.0011, rank=4
   5. Feature_11_t0: importance=0.0011, rank=5

📊 NPO Results:
  Baseline MAPE: 11.23%
  Enhanced MAPE: 12.26%
  MAPE Improvement: -1.03% (-9.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 297/464: NSIT
============================================================
📊 Loading data for NSIT...
📊 Loading data for NSIT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NSIT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NSIT...

==================================================
Training Baseline NSIT (SVM)
==================================================
Training SVM model...

Baseline NSIT Performance:
MAE: 187812.4874
RMSE: 308535.1305
MAPE: 9.91%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 73
   • Highly important features (top 5%): 41

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t0: importance=0.0009, rank=1
   2. Feature_90_t3: importance=0.0004, rank=2
   3. Feature_63_t2: importance=0.0004, rank=3
   4. Feature_64_t1: importance=0.0002, rank=4
   5. Feature_82_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for NSIT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NSIT...

==================================================
Training Enhanced NSIT (SVM)
==================================================
Training SVM model...

Enhanced NSIT Performance:
MAE: 177371.2005
RMSE: 297642.1606
MAPE: 9.34%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 34
   • Highly important features (top 5%): 18

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0027, rank=1
   2. Feature_0_t3: importance=0.0010, rank=2
   3. Feature_1_t0: importance=0.0008, rank=3
   4. Feature_1_t1: importance=0.0008, rank=4
   5. Feature_1_t2: importance=0.0008, rank=5

📊 NSIT Results:
  Baseline MAPE: 9.91%
  Enhanced MAPE: 9.34%
  MAPE Improvement: +0.57% (+5.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 298/464: NTCT
============================================================
📊 Loading data for NTCT...
📊 Loading data for NTCT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NTCT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NTCT...

==================================================
Training Baseline NTCT (SVM)
==================================================
Training SVM model...

Baseline NTCT Performance:
MAE: 185570.0126
RMSE: 248632.7539
MAPE: 11.33%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 174
   • Highly important features (top 5%): 75

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_94_t1: importance=0.0003, rank=1
   2. Feature_93_t1: importance=0.0002, rank=2
   3. Feature_77_t0: importance=0.0002, rank=3
   4. Feature_80_t1: importance=0.0001, rank=4
   5. Feature_64_t0: importance=0.0001, rank=5

🔧 Applying universal feature engineering for NTCT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NTCT...

==================================================
Training Enhanced NTCT (SVM)
==================================================
Training SVM model...

Enhanced NTCT Performance:
MAE: 275160.3916
RMSE: 337954.7490
MAPE: 16.88%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 33

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0012, rank=1
   2. Feature_3_t3: importance=0.0007, rank=2
   3. Feature_0_t3: importance=0.0007, rank=3
   4. Feature_1_t1: importance=0.0006, rank=4
   5. Feature_0_t1: importance=0.0005, rank=5

📊 NTCT Results:
  Baseline MAPE: 11.33%
  Enhanced MAPE: 16.88%
  MAPE Improvement: -5.56% (-49.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 299/464: NWBI
============================================================
📊 Loading data for NWBI...
📊 Loading data for NWBI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NWBI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NWBI...

==================================================
Training Baseline NWBI (SVM)
==================================================
Training SVM model...

Baseline NWBI Performance:
MAE: 259019.8635
RMSE: 328387.5057
MAPE: 7.54%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 190
   • Highly important features (top 5%): 120

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_85_t2: importance=0.0001, rank=1
   2. Feature_87_t2: importance=0.0001, rank=2
   3. Feature_66_t2: importance=0.0001, rank=3
   4. Feature_65_t3: importance=0.0001, rank=4
   5. Feature_69_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for NWBI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NWBI...

==================================================
Training Enhanced NWBI (SVM)
==================================================
Training SVM model...

Enhanced NWBI Performance:
MAE: 246271.4468
RMSE: 325265.8427
MAPE: 7.18%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 46
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_10_t0: importance=0.0003, rank=1
   2. Feature_1_t2: importance=0.0003, rank=2
   3. Feature_5_t1: importance=0.0002, rank=3
   4. Feature_2_t2: importance=0.0002, rank=4
   5. Feature_2_t3: importance=0.0002, rank=5

📊 NWBI Results:
  Baseline MAPE: 7.54%
  Enhanced MAPE: 7.18%
  MAPE Improvement: +0.37% (+4.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 300/464: NWL
============================================================
📊 Loading data for NWL...
📊 Loading data for NWL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing NWL: 'NWL'

============================================================
TESTING TICKER 301/464: NWN
============================================================
📊 Loading data for NWN...
📊 Loading data for NWN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NWN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NWN...

==================================================
Training Baseline NWN (SVM)
==================================================
Training SVM model...

Baseline NWN Performance:
MAE: 144668.7140
RMSE: 212204.0940
MAPE: 17.20%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 82
   • Highly important features (top 5%): 64

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t1: importance=0.0051, rank=1
   2. Feature_65_t0: importance=0.0022, rank=2
   3. Feature_86_t2: importance=0.0016, rank=3
   4. Feature_0_t3: importance=0.0015, rank=4
   5. Feature_85_t2: importance=0.0013, rank=5

🔧 Applying universal feature engineering for NWN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NWN...

==================================================
Training Enhanced NWN (SVM)
==================================================
Training SVM model...

Enhanced NWN Performance:
MAE: 152014.2892
RMSE: 223584.5283
MAPE: 18.06%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 32
   • Highly important features (top 5%): 21

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0164, rank=1
   2. Feature_1_t2: importance=0.0084, rank=2
   3. Feature_2_t3: importance=0.0066, rank=3
   4. Feature_0_t1: importance=0.0049, rank=4
   5. Feature_0_t2: importance=0.0038, rank=5

📊 NWN Results:
  Baseline MAPE: 17.20%
  Enhanced MAPE: 18.06%
  MAPE Improvement: -0.86% (-5.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 302/464: NX
============================================================
📊 Loading data for NX...
📊 Loading data for NX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NX...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NX...

==================================================
Training Baseline NX (SVM)
==================================================
Training SVM model...

Baseline NX Performance:
MAE: 238287.7542
RMSE: 376878.3070
MAPE: 13.14%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 277
   • Highly important features (top 5%): 180

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0003, rank=1
   2. Feature_68_t3: importance=0.0002, rank=2
   3. Feature_68_t2: importance=0.0002, rank=3
   4. Feature_69_t2: importance=0.0002, rank=4
   5. Feature_81_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for NX...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NX...

==================================================
Training Enhanced NX (SVM)
==================================================
Training SVM model...

Enhanced NX Performance:
MAE: 263013.6814
RMSE: 386142.8787
MAPE: 14.27%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 53
   • Highly important features (top 5%): 38

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0010, rank=1
   2. Feature_0_t0: importance=0.0007, rank=2
   3. Feature_2_t2: importance=0.0007, rank=3
   4. Feature_2_t0: importance=0.0006, rank=4
   5. Feature_1_t1: importance=0.0005, rank=5

📊 NX Results:
  Baseline MAPE: 13.14%
  Enhanced MAPE: 14.27%
  MAPE Improvement: -1.13% (-8.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 303/464: NXRT
============================================================
📊 Loading data for NXRT...
📊 Loading data for NXRT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for NXRT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for NXRT...

==================================================
Training Baseline NXRT (SVM)
==================================================
Training SVM model...

Baseline NXRT Performance:
MAE: 55018.0133
RMSE: 71165.3271
MAPE: 13.92%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 158
   • Highly important features (top 5%): 63

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0013, rank=1
   2. Feature_91_t3: importance=0.0011, rank=2
   3. Feature_2_t1: importance=0.0009, rank=3
   4. Feature_90_t3: importance=0.0009, rank=4
   5. Feature_78_t0: importance=0.0007, rank=5

🔧 Applying universal feature engineering for NXRT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for NXRT...

==================================================
Training Enhanced NXRT (SVM)
==================================================
Training SVM model...

Enhanced NXRT Performance:
MAE: 53926.0056
RMSE: 70508.4095
MAPE: 14.02%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 18

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0048, rank=1
   2. Feature_0_t1: importance=0.0023, rank=2
   3. Feature_1_t1: importance=0.0021, rank=3
   4. Feature_1_t2: importance=0.0015, rank=4
   5. Feature_2_t0: importance=0.0015, rank=5

📊 NXRT Results:
  Baseline MAPE: 13.92%
  Enhanced MAPE: 14.02%
  MAPE Improvement: -0.10% (-0.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 304/464: OFG
============================================================
📊 Loading data for OFG...
📊 Loading data for OFG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for OFG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for OFG...

==================================================
Training Baseline OFG (SVM)
==================================================
Training SVM model...

Baseline OFG Performance:
MAE: 119969.4817
RMSE: 170299.9042
MAPE: 23.64%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 226
   • Highly important features (top 5%): 127

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_92_t3: importance=0.0009, rank=1
   2. Feature_79_t1: importance=0.0008, rank=2
   3. Feature_81_t0: importance=0.0006, rank=3
   4. Feature_95_t1: importance=0.0006, rank=4
   5. Feature_71_t1: importance=0.0006, rank=5

🔧 Applying universal feature engineering for OFG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for OFG...

==================================================
Training Enhanced OFG (SVM)
==================================================
Training SVM model...

Enhanced OFG Performance:
MAE: 135861.1941
RMSE: 190668.8596
MAPE: 27.65%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0030, rank=1
   2. Feature_2_t2: importance=0.0024, rank=2
   3. Feature_1_t3: importance=0.0017, rank=3
   4. Feature_6_t3: importance=0.0017, rank=4
   5. Feature_0_t0: importance=0.0016, rank=5

📊 OFG Results:
  Baseline MAPE: 23.64%
  Enhanced MAPE: 27.65%
  MAPE Improvement: -4.01% (-17.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 305/464: OI
============================================================
📊 Loading data for OI...
📊 Loading data for OI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for OI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for OI...

==================================================
Training Baseline OI (SVM)
==================================================
Training SVM model...

Baseline OI Performance:
MAE: 586576.9909
RMSE: 770140.0943
MAPE: 10.69%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 185
   • Highly important features (top 5%): 109

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_88_t2: importance=0.0005, rank=1
   2. Feature_87_t2: importance=0.0004, rank=2
   3. Feature_63_t1: importance=0.0004, rank=3
   4. Feature_2_t3: importance=0.0003, rank=4
   5. Feature_64_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for OI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for OI...

==================================================
Training Enhanced OI (SVM)
==================================================
Training SVM model...

Enhanced OI Performance:
MAE: 493783.6441
RMSE: 635132.3567
MAPE: 9.36%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 44
   • Highly important features (top 5%): 25

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0017, rank=1
   2. Feature_2_t0: importance=0.0017, rank=2
   3. Feature_0_t2: importance=0.0015, rank=3
   4. Feature_1_t2: importance=0.0012, rank=4
   5. Feature_2_t1: importance=0.0009, rank=5

📊 OI Results:
  Baseline MAPE: 10.69%
  Enhanced MAPE: 9.36%
  MAPE Improvement: +1.34% (+12.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 306/464: OII
============================================================
📊 Loading data for OII...
📊 Loading data for OII from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for OII...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for OII...

==================================================
Training Baseline OII (SVM)
==================================================
Training SVM model...

Baseline OII Performance:
MAE: 307827.6696
RMSE: 382780.0576
MAPE: 7.00%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 269
   • Highly important features (top 5%): 165

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_82_t2: importance=0.0004, rank=1
   2. Feature_84_t2: importance=0.0004, rank=2
   3. Feature_90_t3: importance=0.0003, rank=3
   4. Feature_77_t1: importance=0.0003, rank=4
   5. Feature_89_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for OII...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for OII...

==================================================
Training Enhanced OII (SVM)
==================================================
Training SVM model...

Enhanced OII Performance:
MAE: 309279.1520
RMSE: 399711.3028
MAPE: 7.04%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 46
   • Highly important features (top 5%): 33

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0020, rank=1
   2. Feature_2_t1: importance=0.0013, rank=2
   3. Feature_1_t2: importance=0.0013, rank=3
   4. Feature_0_t2: importance=0.0013, rank=4
   5. Feature_1_t3: importance=0.0010, rank=5

📊 OII Results:
  Baseline MAPE: 7.00%
  Enhanced MAPE: 7.04%
  MAPE Improvement: -0.04% (-0.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 307/464: OMCL
============================================================
📊 Loading data for OMCL...
📊 Loading data for OMCL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for OMCL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for OMCL...

==================================================
Training Baseline OMCL (SVM)
==================================================
Training SVM model...

Baseline OMCL Performance:
MAE: 191083.8494
RMSE: 254423.5227
MAPE: 9.65%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 117
   • Highly important features (top 5%): 39

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0001, rank=1
   2. Feature_90_t2: importance=0.0001, rank=2
   3. Feature_0_t0: importance=0.0001, rank=3
   4. Feature_83_t1: importance=0.0001, rank=4
   5. Feature_83_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for OMCL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for OMCL...

==================================================
Training Enhanced OMCL (SVM)
==================================================
Training SVM model...

Enhanced OMCL Performance:
MAE: 198243.4034
RMSE: 255609.5786
MAPE: 9.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 24
   • Highly important features (top 5%): 15

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0008, rank=1
   2. Feature_2_t0: importance=0.0007, rank=2
   3. Feature_0_t0: importance=0.0005, rank=3
   4. Feature_0_t2: importance=0.0004, rank=4
   5. Feature_2_t3: importance=0.0004, rank=5

📊 OMCL Results:
  Baseline MAPE: 9.65%
  Enhanced MAPE: 9.74%
  MAPE Improvement: -0.09% (-0.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 308/464: OSIS
============================================================
📊 Loading data for OSIS...
📊 Loading data for OSIS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for OSIS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for OSIS...

==================================================
Training Baseline OSIS (SVM)
==================================================
Training SVM model...

Baseline OSIS Performance:
MAE: 103051.1516
RMSE: 160824.6349
MAPE: 8.65%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 230
   • Highly important features (top 5%): 129

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_89_t1: importance=0.0002, rank=1
   2. Feature_89_t2: importance=0.0002, rank=2
   3. Feature_82_t2: importance=0.0001, rank=3
   4. Feature_73_t0: importance=0.0001, rank=4
   5. Feature_85_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for OSIS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for OSIS...

==================================================
Training Enhanced OSIS (SVM)
==================================================
Training SVM model...

Enhanced OSIS Performance:
MAE: 113960.8508
RMSE: 166667.0622
MAPE: 9.42%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 47
   • Highly important features (top 5%): 27

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_12_t0: importance=0.0011, rank=1
   2. Feature_13_t0: importance=0.0007, rank=2
   3. Feature_9_t1: importance=0.0007, rank=3
   4. Feature_11_t0: importance=0.0007, rank=4
   5. Feature_14_t0: importance=0.0006, rank=5

📊 OSIS Results:
  Baseline MAPE: 8.65%
  Enhanced MAPE: 9.42%
  MAPE Improvement: -0.77% (-8.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 309/464: OTTR
============================================================
📊 Loading data for OTTR...
📊 Loading data for OTTR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for OTTR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for OTTR...

==================================================
Training Baseline OTTR (SVM)
==================================================
Training SVM model...

Baseline OTTR Performance:
MAE: 185100.6918
RMSE: 240185.2422
MAPE: 5.28%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 74
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0022, rank=1
   2. Feature_63_t0: importance=0.0015, rank=2
   3. Feature_64_t1: importance=0.0013, rank=3
   4. Feature_64_t3: importance=0.0010, rank=4
   5. Feature_76_t3: importance=0.0008, rank=5

🔧 Applying universal feature engineering for OTTR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for OTTR...

==================================================
Training Enhanced OTTR (SVM)
==================================================
Training SVM model...

Enhanced OTTR Performance:
MAE: 172900.9271
RMSE: 220039.1400
MAPE: 4.85%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 32
   • Highly important features (top 5%): 25

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0045, rank=1
   2. Feature_5_t3: importance=0.0028, rank=2
   3. Feature_0_t3: importance=0.0026, rank=3
   4. Feature_6_t3: importance=0.0023, rank=4
   5. Feature_9_t3: importance=0.0017, rank=5

📊 OTTR Results:
  Baseline MAPE: 5.28%
  Enhanced MAPE: 4.85%
  MAPE Improvement: +0.43% (+8.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 310/464: OUT
============================================================
📊 Loading data for OUT...
📊 Loading data for OUT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for OUT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for OUT...

==================================================
Training Baseline OUT (SVM)
==================================================
Training SVM model...

Baseline OUT Performance:
MAE: 1089656.3107
RMSE: 1443738.0500
MAPE: 11.06%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 232
   • Highly important features (top 5%): 123

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_85_t0: importance=0.0007, rank=1
   2. Feature_2_t3: importance=0.0007, rank=2
   3. Feature_90_t1: importance=0.0006, rank=3
   4. Feature_84_t3: importance=0.0006, rank=4
   5. Feature_72_t2: importance=0.0005, rank=5

🔧 Applying universal feature engineering for OUT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for OUT...

==================================================
Training Enhanced OUT (SVM)
==================================================
Training SVM model...

Enhanced OUT Performance:
MAE: 1413770.0546
RMSE: 1873489.5785
MAPE: 12.72%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 12

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0042, rank=1
   2. Feature_2_t1: importance=0.0024, rank=2
   3. Feature_1_t1: importance=0.0023, rank=3
   4. Feature_1_t3: importance=0.0023, rank=4
   5. Feature_1_t2: importance=0.0017, rank=5

📊 OUT Results:
  Baseline MAPE: 11.06%
  Enhanced MAPE: 12.72%
  MAPE Improvement: -1.66% (-15.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 311/464: OXM
============================================================
📊 Loading data for OXM...
📊 Loading data for OXM from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for OXM...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for OXM...

==================================================
Training Baseline OXM (SVM)
==================================================
Training SVM model...

Baseline OXM Performance:
MAE: 148892.6976
RMSE: 193839.9445
MAPE: 6.55%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 270
   • Highly important features (top 5%): 158

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_64_t3: importance=0.0003, rank=1
   2. Feature_89_t3: importance=0.0002, rank=2
   3. Feature_78_t2: importance=0.0002, rank=3
   4. Feature_83_t2: importance=0.0002, rank=4
   5. Feature_90_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for OXM...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for OXM...

==================================================
Training Enhanced OXM (SVM)
==================================================
Training SVM model...

Enhanced OXM Performance:
MAE: 167185.4027
RMSE: 214321.5072
MAPE: 7.50%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 47
   • Highly important features (top 5%): 36

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_7_t1: importance=0.0007, rank=1
   2. Feature_2_t3: importance=0.0006, rank=2
   3. Feature_1_t3: importance=0.0006, rank=3
   4. Feature_1_t2: importance=0.0005, rank=4
   5. Feature_11_t1: importance=0.0004, rank=5

📊 OXM Results:
  Baseline MAPE: 6.55%
  Enhanced MAPE: 7.50%
  MAPE Improvement: -0.95% (-14.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 312/464: PAHC
============================================================
📊 Loading data for PAHC...
📊 Loading data for PAHC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing PAHC: 'PAHC'

============================================================
TESTING TICKER 313/464: PARR
============================================================
📊 Loading data for PARR...
📊 Loading data for PARR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PARR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PARR...

==================================================
Training Baseline PARR (SVM)
==================================================
Training SVM model...

Baseline PARR Performance:
MAE: 425965.6366
RMSE: 569595.3435
MAPE: 12.63%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 248
   • Highly important features (top 5%): 132

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_75_t2: importance=0.0008, rank=1
   2. Feature_73_t2: importance=0.0006, rank=2
   3. Feature_71_t2: importance=0.0004, rank=3
   4. Feature_63_t3: importance=0.0004, rank=4
   5. Feature_94_t2: importance=0.0004, rank=5

🔧 Applying universal feature engineering for PARR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PARR...

==================================================
Training Enhanced PARR (SVM)
==================================================
Training SVM model...

Enhanced PARR Performance:
MAE: 397666.2187
RMSE: 585229.6256
MAPE: 11.99%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 24

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0034, rank=1
   2. Feature_0_t2: importance=0.0030, rank=2
   3. Feature_0_t1: importance=0.0016, rank=3
   4. Feature_0_t0: importance=0.0013, rank=4
   5. Feature_2_t1: importance=0.0013, rank=5

📊 PARR Results:
  Baseline MAPE: 12.63%
  Enhanced MAPE: 11.99%
  MAPE Improvement: +0.65% (+5.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 314/464: PATK
============================================================
📊 Loading data for PATK...
📊 Loading data for PATK from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PATK...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PATK...

==================================================
Training Baseline PATK (SVM)
==================================================
Training SVM model...

Baseline PATK Performance:
MAE: 147633.8550
RMSE: 174424.2836
MAPE: 7.61%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 64
   • Highly important features (top 5%): 44

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_69_t0: importance=0.0010, rank=1
   2. Feature_93_t0: importance=0.0004, rank=2
   3. Feature_92_t1: importance=0.0003, rank=3
   4. Feature_83_t1: importance=0.0002, rank=4
   5. Feature_63_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for PATK...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PATK...

==================================================
Training Enhanced PATK (SVM)
==================================================
Training SVM model...

Enhanced PATK Performance:
MAE: 134694.4222
RMSE: 171207.9994
MAPE: 7.11%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 32
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0011, rank=1
   2. Feature_2_t2: importance=0.0006, rank=2
   3. Feature_4_t0: importance=0.0004, rank=3
   4. Feature_0_t3: importance=0.0004, rank=4
   5. Feature_2_t0: importance=0.0004, rank=5

📊 PATK Results:
  Baseline MAPE: 7.61%
  Enhanced MAPE: 7.11%
  MAPE Improvement: +0.50% (+6.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 315/464: PBH
============================================================
📊 Loading data for PBH...
📊 Loading data for PBH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PBH...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PBH...

==================================================
Training Baseline PBH (SVM)
==================================================
Training SVM model...

Baseline PBH Performance:
MAE: 139654.9580
RMSE: 179887.2990
MAPE: 7.62%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 70
   • Highly important features (top 5%): 28

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0002, rank=1
   2. Feature_89_t0: importance=0.0002, rank=2
   3. Feature_72_t2: importance=0.0001, rank=3
   4. Feature_74_t1: importance=0.0001, rank=4
   5. Feature_64_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for PBH...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PBH...

==================================================
Training Enhanced PBH (SVM)
==================================================
Training SVM model...

Enhanced PBH Performance:
MAE: 133262.6144
RMSE: 172181.0372
MAPE: 7.25%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 8
   • Highly important features (top 5%): 4

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0019, rank=1
   2. Feature_2_t2: importance=0.0008, rank=2
   3. Feature_2_t1: importance=0.0004, rank=3
   4. Feature_1_t3: importance=0.0003, rank=4
   5. Feature_1_t1: importance=0.0003, rank=5

📊 PBH Results:
  Baseline MAPE: 7.62%
  Enhanced MAPE: 7.25%
  MAPE Improvement: +0.38% (+4.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 316/464: PBI
============================================================
📊 Loading data for PBI...
📊 Loading data for PBI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PBI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PBI...

==================================================
Training Baseline PBI (SVM)
==================================================
Training SVM model...

Baseline PBI Performance:
MAE: 985694.3350
RMSE: 1222270.4882
MAPE: 8.65%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 129
   • Highly important features (top 5%): 79

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t2: importance=0.0019, rank=1
   2. Feature_69_t2: importance=0.0019, rank=2
   3. Feature_69_t0: importance=0.0004, rank=3
   4. Feature_82_t2: importance=0.0004, rank=4
   5. Feature_66_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for PBI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PBI...

==================================================
Training Enhanced PBI (SVM)
==================================================
Training SVM model...

Enhanced PBI Performance:
MAE: 804240.5752
RMSE: 1034125.0617
MAPE: 7.08%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 47
   • Highly important features (top 5%): 38

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0009, rank=1
   2. Feature_1_t3: importance=0.0008, rank=2
   3. Feature_4_t3: importance=0.0007, rank=3
   4. Feature_0_t3: importance=0.0007, rank=4
   5. Feature_1_t1: importance=0.0006, rank=5

📊 PBI Results:
  Baseline MAPE: 8.65%
  Enhanced MAPE: 7.08%
  MAPE Improvement: +1.57% (+18.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 317/464: PCRX
============================================================
📊 Loading data for PCRX...
📊 Loading data for PCRX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PCRX...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Error: Ticker 'PCRX' not found in short volume data.
Retrieved short volume data for 0 days
Creating short volume features with 15 days lookback...
No short volume data available, creating zero features
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PCRX...

==================================================
Training Baseline PCRX (SVM)
==================================================
Training SVM model...

Baseline PCRX Performance:
MAE: 423912.2054
RMSE: 609282.2624
MAPE: 7.83%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 45
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t0: importance=0.0006, rank=1
   2. Feature_65_t1: importance=0.0006, rank=2
   3. Feature_66_t3: importance=0.0004, rank=3
   4. Feature_1_t2: importance=0.0002, rank=4
   5. Feature_1_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for PCRX...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PCRX...

==================================================
Training Enhanced PCRX (SVM)
==================================================
Training SVM model...

Enhanced PCRX Performance:
MAE: 410180.1940
RMSE: 605158.7081
MAPE: 7.48%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 25
   • Highly important features (top 5%): 16

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t2: importance=0.0008, rank=1
   2. Feature_2_t0: importance=0.0005, rank=2
   3. Feature_12_t1: importance=0.0004, rank=3
   4. Feature_0_t1: importance=0.0004, rank=4
   5. Feature_1_t3: importance=0.0004, rank=5

📊 PCRX Results:
  Baseline MAPE: 7.83%
  Enhanced MAPE: 7.48%
  MAPE Improvement: +0.35% (+4.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 318/464: PDFS
============================================================
📊 Loading data for PDFS...
📊 Loading data for PDFS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PDFS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PDFS...

==================================================
Training Baseline PDFS (SVM)
==================================================
Training SVM model...

Baseline PDFS Performance:
MAE: 62763.1528
RMSE: 82492.8598
MAPE: 9.06%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 167
   • Highly important features (top 5%): 97

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_79_t1: importance=0.0009, rank=1
   2. Feature_79_t0: importance=0.0003, rank=2
   3. Feature_80_t0: importance=0.0003, rank=3
   4. Feature_74_t0: importance=0.0003, rank=4
   5. Feature_64_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for PDFS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PDFS...

==================================================
Training Enhanced PDFS (SVM)
==================================================
Training SVM model...

Enhanced PDFS Performance:
MAE: 68107.5867
RMSE: 87634.9366
MAPE: 9.62%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 54
   • Highly important features (top 5%): 44

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0015, rank=1
   2. Feature_1_t0: importance=0.0015, rank=2
   3. Feature_2_t0: importance=0.0009, rank=3
   4. Feature_6_t3: importance=0.0009, rank=4
   5. Feature_0_t2: importance=0.0008, rank=5

📊 PDFS Results:
  Baseline MAPE: 9.06%
  Enhanced MAPE: 9.62%
  MAPE Improvement: -0.55% (-6.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 319/464: PEB
============================================================
📊 Loading data for PEB...
📊 Loading data for PEB from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PEB...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PEB...

==================================================
Training Baseline PEB (SVM)
==================================================
Training SVM model...

Baseline PEB Performance:
MAE: 1210391.5881
RMSE: 1444532.9916
MAPE: 7.61%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 204
   • Highly important features (top 5%): 103

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_77_t0: importance=0.0005, rank=1
   2. Feature_82_t0: importance=0.0003, rank=2
   3. Feature_88_t1: importance=0.0003, rank=3
   4. Feature_65_t3: importance=0.0003, rank=4
   5. Feature_84_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for PEB...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PEB...

==================================================
Training Enhanced PEB (SVM)
==================================================
Training SVM model...

Enhanced PEB Performance:
MAE: 1231696.0105
RMSE: 1494076.1503
MAPE: 7.88%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 34
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0041, rank=1
   2. Feature_2_t3: importance=0.0020, rank=2
   3. Feature_2_t0: importance=0.0020, rank=3
   4. Feature_1_t3: importance=0.0019, rank=4
   5. Feature_1_t0: importance=0.0016, rank=5

📊 PEB Results:
  Baseline MAPE: 7.61%
  Enhanced MAPE: 7.88%
  MAPE Improvement: -0.27% (-3.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 320/464: PENN
============================================================
📊 Loading data for PENN...
📊 Loading data for PENN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing PENN: 'PENN'

============================================================
TESTING TICKER 321/464: PFBC
============================================================
📊 Loading data for PFBC...
📊 Loading data for PFBC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing PFBC: 'PFBC'

============================================================
TESTING TICKER 322/464: PFS
============================================================
📊 Loading data for PFS...
📊 Loading data for PFS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PFS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PFS...

==================================================
Training Baseline PFS (SVM)
==================================================
Training SVM model...

Baseline PFS Performance:
MAE: 395365.5745
RMSE: 497378.1179
MAPE: 10.90%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 198
   • Highly important features (top 5%): 112

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t1: importance=0.0005, rank=1
   2. Feature_63_t2: importance=0.0005, rank=2
   3. Feature_71_t3: importance=0.0004, rank=3
   4. Feature_75_t2: importance=0.0004, rank=4
   5. Feature_2_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for PFS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PFS...

==================================================
Training Enhanced PFS (SVM)
==================================================
Training SVM model...

Enhanced PFS Performance:
MAE: 351796.7637
RMSE: 461205.4198
MAPE: 9.50%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 47
   • Highly important features (top 5%): 27

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0014, rank=1
   2. Feature_1_t3: importance=0.0012, rank=2
   3. Feature_7_t3: importance=0.0012, rank=3
   4. Feature_8_t3: importance=0.0008, rank=4
   5. Feature_11_t1: importance=0.0008, rank=5

📊 PFS Results:
  Baseline MAPE: 10.90%
  Enhanced MAPE: 9.50%
  MAPE Improvement: +1.40% (+12.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 323/464: PI
============================================================
📊 Loading data for PI...
📊 Loading data for PI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PI...

==================================================
Training Baseline PI (SVM)
==================================================
Training SVM model...

Baseline PI Performance:
MAE: 238258.7932
RMSE: 341933.0724
MAPE: 7.21%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 126
   • Highly important features (top 5%): 44

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t2: importance=0.0002, rank=1
   2. Feature_64_t0: importance=0.0001, rank=2
   3. Feature_71_t0: importance=0.0001, rank=3
   4. Feature_64_t3: importance=0.0001, rank=4
   5. Feature_65_t0: importance=0.0001, rank=5

🔧 Applying universal feature engineering for PI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PI...

==================================================
Training Enhanced PI (SVM)
==================================================
Training SVM model...

Enhanced PI Performance:
MAE: 239393.8279
RMSE: 325121.1144
MAPE: 7.04%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 20
   • Highly important features (top 5%): 9

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0014, rank=1
   2. Feature_2_t0: importance=0.0008, rank=2
   3. Feature_2_t2: importance=0.0007, rank=3
   4. Feature_5_t2: importance=0.0003, rank=4
   5. Feature_1_t2: importance=0.0003, rank=5

📊 PI Results:
  Baseline MAPE: 7.21%
  Enhanced MAPE: 7.04%
  MAPE Improvement: +0.17% (+2.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 324/464: PINC
============================================================
📊 Loading data for PINC...
📊 Loading data for PINC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PINC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PINC...

==================================================
Training Baseline PINC (SVM)
==================================================
Training SVM model...

Baseline PINC Performance:
MAE: 918850.1896
RMSE: 1745140.7558
MAPE: 9.71%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 251
   • Highly important features (top 5%): 147

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_85_t2: importance=0.0005, rank=1
   2. Feature_68_t2: importance=0.0005, rank=2
   3. Feature_65_t3: importance=0.0004, rank=3
   4. Feature_80_t1: importance=0.0003, rank=4
   5. Feature_70_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for PINC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PINC...

==================================================
Training Enhanced PINC (SVM)
==================================================
Training SVM model...

Enhanced PINC Performance:
MAE: 986501.1675
RMSE: 1801910.1863
MAPE: 10.19%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 49
   • Highly important features (top 5%): 28

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0014, rank=1
   2. Feature_2_t1: importance=0.0012, rank=2
   3. Feature_1_t3: importance=0.0012, rank=3
   4. Feature_0_t0: importance=0.0012, rank=4
   5. Feature_6_t0: importance=0.0008, rank=5

📊 PINC Results:
  Baseline MAPE: 9.71%
  Enhanced MAPE: 10.19%
  MAPE Improvement: -0.49% (-5.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 325/464: PJT
============================================================
📊 Loading data for PJT...
📊 Loading data for PJT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PJT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PJT...

==================================================
Training Baseline PJT (SVM)
==================================================
Training SVM model...

Baseline PJT Performance:
MAE: 149851.3309
RMSE: 187936.8439
MAPE: 9.25%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 200
   • Highly important features (top 5%): 115

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_96_t1: importance=0.0012, rank=1
   2. Feature_65_t1: importance=0.0012, rank=2
   3. Feature_84_t0: importance=0.0010, rank=3
   4. Feature_0_t3: importance=0.0009, rank=4
   5. Feature_74_t0: importance=0.0009, rank=5

🔧 Applying universal feature engineering for PJT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PJT...

==================================================
Training Enhanced PJT (SVM)
==================================================
Training SVM model...

Enhanced PJT Performance:
MAE: 119994.8008
RMSE: 150299.1532
MAPE: 7.75%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 32

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0131, rank=1
   2. Feature_0_t2: importance=0.0038, rank=2
   3. Feature_2_t2: importance=0.0023, rank=3
   4. Feature_2_t1: importance=0.0022, rank=4
   5. Feature_13_t0: importance=0.0021, rank=5

📊 PJT Results:
  Baseline MAPE: 9.25%
  Enhanced MAPE: 7.75%
  MAPE Improvement: +1.50% (+16.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 326/464: PLAB
============================================================
📊 Loading data for PLAB...
📊 Loading data for PLAB from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PLAB...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PLAB...

==================================================
Training Baseline PLAB (SVM)
==================================================
Training SVM model...

Baseline PLAB Performance:
MAE: 182064.1947
RMSE: 229111.4474
MAPE: 7.56%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 206
   • Highly important features (top 5%): 101

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t2: importance=0.0005, rank=1
   2. Feature_96_t0: importance=0.0005, rank=2
   3. Feature_0_t3: importance=0.0005, rank=3
   4. Feature_94_t0: importance=0.0005, rank=4
   5. Feature_86_t2: importance=0.0004, rank=5

🔧 Applying universal feature engineering for PLAB...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PLAB...

==================================================
Training Enhanced PLAB (SVM)
==================================================
Training SVM model...

Enhanced PLAB Performance:
MAE: 178464.5095
RMSE: 242027.5562
MAPE: 7.51%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 34
   • Highly important features (top 5%): 14

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t2: importance=0.0034, rank=1
   2. Feature_0_t3: importance=0.0031, rank=2
   3. Feature_2_t0: importance=0.0030, rank=3
   4. Feature_2_t2: importance=0.0022, rank=4
   5. Feature_1_t0: importance=0.0021, rank=5

📊 PLAB Results:
  Baseline MAPE: 7.56%
  Enhanced MAPE: 7.51%
  MAPE Improvement: +0.05% (+0.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 327/464: PLAY
============================================================
📊 Loading data for PLAY...
📊 Loading data for PLAY from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PLAY...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PLAY...

==================================================
Training Baseline PLAY (SVM)
==================================================
Training SVM model...

Baseline PLAY Performance:
MAE: 740637.7515
RMSE: 975522.7626
MAPE: 12.09%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 337
   • Highly important features (top 5%): 254

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0005, rank=1
   2. Feature_83_t3: importance=0.0003, rank=2
   3. Feature_85_t3: importance=0.0002, rank=3
   4. Feature_86_t3: importance=0.0002, rank=4
   5. Feature_84_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for PLAY...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PLAY...

==================================================
Training Enhanced PLAY (SVM)
==================================================
Training SVM model...

Enhanced PLAY Performance:
MAE: 744720.3497
RMSE: 962343.6461
MAPE: 11.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 46
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0034, rank=1
   2. Feature_2_t2: importance=0.0006, rank=2
   3. Feature_0_t2: importance=0.0005, rank=3
   4. Feature_0_t1: importance=0.0004, rank=4
   5. Feature_0_t3: importance=0.0004, rank=5

📊 PLAY Results:
  Baseline MAPE: 12.09%
  Enhanced MAPE: 11.94%
  MAPE Improvement: +0.15% (+1.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 328/464: PLUS
============================================================
📊 Loading data for PLUS...
📊 Loading data for PLUS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing PLUS: 'PLUS'

============================================================
TESTING TICKER 329/464: PLXS
============================================================
📊 Loading data for PLXS...
📊 Loading data for PLXS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PLXS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PLXS...

==================================================
Training Baseline PLXS (SVM)
==================================================
Training SVM model...

Baseline PLXS Performance:
MAE: 59470.8819
RMSE: 76229.2077
MAPE: 12.11%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 249
   • Highly important features (top 5%): 161

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t2: importance=0.0003, rank=1
   2. Feature_90_t3: importance=0.0003, rank=2
   3. Feature_79_t1: importance=0.0002, rank=3
   4. Feature_73_t3: importance=0.0002, rank=4
   5. Feature_63_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for PLXS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PLXS...

==================================================
Training Enhanced PLXS (SVM)
==================================================
Training SVM model...

Enhanced PLXS Performance:
MAE: 49928.1131
RMSE: 66965.5268
MAPE: 10.33%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 16

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0025, rank=1
   2. Feature_0_t0: importance=0.0020, rank=2
   3. Feature_0_t2: importance=0.0014, rank=3
   4. Feature_2_t1: importance=0.0009, rank=4
   5. Feature_2_t3: importance=0.0008, rank=5

📊 PLXS Results:
  Baseline MAPE: 12.11%
  Enhanced MAPE: 10.33%
  MAPE Improvement: +1.79% (+14.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 330/464: PMT
============================================================
📊 Loading data for PMT...
📊 Loading data for PMT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PMT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PMT...

==================================================
Training Baseline PMT (SVM)
==================================================
Training SVM model...

Baseline PMT Performance:
MAE: 264928.1447
RMSE: 425497.1896
MAPE: 7.24%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 134
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_82_t3: importance=0.0028, rank=1
   2. Feature_81_t3: importance=0.0017, rank=2
   3. Feature_65_t0: importance=0.0013, rank=3
   4. Feature_0_t3: importance=0.0010, rank=4
   5. Feature_63_t2: importance=0.0009, rank=5

🔧 Applying universal feature engineering for PMT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PMT...

==================================================
Training Enhanced PMT (SVM)
==================================================
Training SVM model...

Enhanced PMT Performance:
MAE: 344746.3449
RMSE: 480146.9469
MAPE: 9.09%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 35

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0034, rank=1
   2. Feature_2_t2: importance=0.0017, rank=2
   3. Feature_0_t0: importance=0.0016, rank=3
   4. Feature_0_t2: importance=0.0016, rank=4
   5. Feature_0_t1: importance=0.0015, rank=5

📊 PMT Results:
  Baseline MAPE: 7.24%
  Enhanced MAPE: 9.09%
  MAPE Improvement: -1.85% (-25.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 331/464: POWL
============================================================
📊 Loading data for POWL...
📊 Loading data for POWL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing POWL: 'POWL'

============================================================
TESTING TICKER 332/464: PRA
============================================================
📊 Loading data for PRA...
📊 Loading data for PRA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PRA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PRA...

==================================================
Training Baseline PRA (SVM)
==================================================
Training SVM model...

Baseline PRA Performance:
MAE: 120304.5113
RMSE: 199919.6029
MAPE: 12.68%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 223
   • Highly important features (top 5%): 118

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_92_t0: importance=0.0006, rank=1
   2. Feature_96_t2: importance=0.0006, rank=2
   3. Feature_66_t3: importance=0.0004, rank=3
   4. Feature_2_t3: importance=0.0004, rank=4
   5. Feature_67_t2: importance=0.0004, rank=5

🔧 Applying universal feature engineering for PRA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PRA...

==================================================
Training Enhanced PRA (SVM)
==================================================
Training SVM model...

Enhanced PRA Performance:
MAE: 127924.0541
RMSE: 203455.2291
MAPE: 13.51%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 36
   • Highly important features (top 5%): 15

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t0: importance=0.0026, rank=1
   2. Feature_1_t1: importance=0.0020, rank=2
   3. Feature_2_t3: importance=0.0019, rank=3
   4. Feature_0_t3: importance=0.0018, rank=4
   5. Feature_2_t1: importance=0.0018, rank=5

📊 PRA Results:
  Baseline MAPE: 12.68%
  Enhanced MAPE: 13.51%
  MAPE Improvement: -0.82% (-6.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 333/464: PRAA
============================================================
📊 Loading data for PRAA...
📊 Loading data for PRAA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PRAA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PRAA...

==================================================
Training Baseline PRAA (SVM)
==================================================
Training SVM model...

Baseline PRAA Performance:
MAE: 96807.7174
RMSE: 132088.1152
MAPE: 12.39%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 96
   • Highly important features (top 5%): 62

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_76_t2: importance=0.0001, rank=1
   2. Feature_74_t2: importance=0.0001, rank=2
   3. Feature_94_t0: importance=0.0001, rank=3
   4. Feature_86_t3: importance=0.0001, rank=4
   5. Feature_65_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for PRAA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PRAA...

==================================================
Training Enhanced PRAA (SVM)
==================================================
Training SVM model...

Enhanced PRAA Performance:
MAE: 93454.0645
RMSE: 130449.5076
MAPE: 11.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 21
   • Highly important features (top 5%): 16

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0005, rank=1
   2. Feature_11_t0: importance=0.0002, rank=2
   3. Feature_5_t0: importance=0.0002, rank=3
   4. Feature_4_t0: importance=0.0002, rank=4
   5. Feature_13_t0: importance=0.0002, rank=5

📊 PRAA Results:
  Baseline MAPE: 12.39%
  Enhanced MAPE: 11.94%
  MAPE Improvement: +0.45% (+3.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 334/464: PRGS
============================================================
📊 Loading data for PRGS...
📊 Loading data for PRGS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PRGS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PRGS...

==================================================
Training Baseline PRGS (SVM)
==================================================
Training SVM model...

Baseline PRGS Performance:
MAE: 252897.7922
RMSE: 330840.1687
MAPE: 5.37%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 181
   • Highly important features (top 5%): 60

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t2: importance=0.0016, rank=1
   2. Feature_65_t3: importance=0.0011, rank=2
   3. Feature_68_t3: importance=0.0009, rank=3
   4. Feature_90_t1: importance=0.0007, rank=4
   5. Feature_88_t1: importance=0.0007, rank=5

🔧 Applying universal feature engineering for PRGS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PRGS...

==================================================
Training Enhanced PRGS (SVM)
==================================================
Training SVM model...

Enhanced PRGS Performance:
MAE: 254257.3899
RMSE: 321554.7580
MAPE: 5.42%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 52
   • Highly important features (top 5%): 34

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0029, rank=1
   2. Feature_1_t1: importance=0.0026, rank=2
   3. Feature_0_t3: importance=0.0025, rank=3
   4. Feature_4_t3: importance=0.0018, rank=4
   5. Feature_0_t1: importance=0.0017, rank=5

📊 PRGS Results:
  Baseline MAPE: 5.37%
  Enhanced MAPE: 5.42%
  MAPE Improvement: -0.05% (-0.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 335/464: PRK
============================================================
📊 Loading data for PRK...
📊 Loading data for PRK from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PRK...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PRK...

==================================================
Training Baseline PRK (SVM)
==================================================
Training SVM model...

Baseline PRK Performance:
MAE: 43145.2764
RMSE: 50635.2374
MAPE: 7.95%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 266
   • Highly important features (top 5%): 168

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t3: importance=0.0022, rank=1
   2. Feature_67_t3: importance=0.0018, rank=2
   3. Feature_75_t3: importance=0.0008, rank=3
   4. Feature_1_t3: importance=0.0005, rank=4
   5. Feature_75_t1: importance=0.0004, rank=5

🔧 Applying universal feature engineering for PRK...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PRK...

==================================================
Training Enhanced PRK (SVM)
==================================================
Training SVM model...

Enhanced PRK Performance:
MAE: 36575.6578
RMSE: 48099.1966
MAPE: 6.48%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 49
   • Highly important features (top 5%): 34

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0072, rank=1
   2. Feature_1_t0: importance=0.0020, rank=2
   3. Feature_9_t3: importance=0.0020, rank=3
   4. Feature_7_t1: importance=0.0017, rank=4
   5. Feature_5_t1: importance=0.0016, rank=5

📊 PRK Results:
  Baseline MAPE: 7.95%
  Enhanced MAPE: 6.48%
  MAPE Improvement: +1.47% (+18.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 336/464: PRLB
============================================================
📊 Loading data for PRLB...
📊 Loading data for PRLB from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PRLB...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PRLB...

==================================================
Training Baseline PRLB (SVM)
==================================================
Training SVM model...

Baseline PRLB Performance:
MAE: 79808.0715
RMSE: 108445.7022
MAPE: 11.22%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 217
   • Highly important features (top 5%): 96

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t0: importance=0.0003, rank=1
   2. Feature_78_t3: importance=0.0002, rank=2
   3. Feature_80_t3: importance=0.0002, rank=3
   4. Feature_89_t1: importance=0.0002, rank=4
   5. Feature_83_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for PRLB...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PRLB...

==================================================
Training Enhanced PRLB (SVM)
==================================================
Training SVM model...

Enhanced PRLB Performance:
MAE: 65772.3607
RMSE: 92891.9453
MAPE: 9.41%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 50
   • Highly important features (top 5%): 31

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0016, rank=1
   2. Feature_2_t3: importance=0.0010, rank=2
   3. Feature_4_t1: importance=0.0007, rank=3
   4. Feature_0_t3: importance=0.0007, rank=4
   5. Feature_14_t1: importance=0.0006, rank=5

📊 PRLB Results:
  Baseline MAPE: 11.22%
  Enhanced MAPE: 9.41%
  MAPE Improvement: +1.81% (+16.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 337/464: PSMT
============================================================
📊 Loading data for PSMT...
📊 Loading data for PSMT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PSMT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PSMT...

==================================================
Training Baseline PSMT (SVM)
==================================================
Training SVM model...

Baseline PSMT Performance:
MAE: 103150.3982
RMSE: 128077.2201
MAPE: 10.17%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 188
   • Highly important features (top 5%): 110

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_72_t2: importance=0.0013, rank=1
   2. Feature_71_t2: importance=0.0010, rank=2
   3. Feature_63_t3: importance=0.0008, rank=3
   4. Feature_75_t1: importance=0.0007, rank=4
   5. Feature_85_t2: importance=0.0006, rank=5

🔧 Applying universal feature engineering for PSMT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PSMT...

==================================================
Training Enhanced PSMT (SVM)
==================================================
Training SVM model...

Enhanced PSMT Performance:
MAE: 98681.9921
RMSE: 113733.5300
MAPE: 10.37%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 50
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0014, rank=1
   2. Feature_2_t3: importance=0.0012, rank=2
   3. Feature_12_t2: importance=0.0009, rank=3
   4. Feature_6_t1: importance=0.0007, rank=4
   5. Feature_11_t2: importance=0.0006, rank=5

📊 PSMT Results:
  Baseline MAPE: 10.17%
  Enhanced MAPE: 10.37%
  MAPE Improvement: -0.20% (-2.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 338/464: PTEN
============================================================
📊 Loading data for PTEN...
📊 Loading data for PTEN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PTEN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PTEN...

==================================================
Training Baseline PTEN (SVM)
==================================================
Training SVM model...

Baseline PTEN Performance:
MAE: 3120330.8877
RMSE: 3928747.5482
MAPE: 12.12%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 279
   • Highly important features (top 5%): 141

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_78_t3: importance=0.0003, rank=1
   2. Feature_96_t2: importance=0.0002, rank=2
   3. Feature_77_t3: importance=0.0002, rank=3
   4. Feature_65_t0: importance=0.0002, rank=4
   5. Feature_82_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for PTEN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PTEN...

==================================================
Training Enhanced PTEN (SVM)
==================================================
Training SVM model...

Enhanced PTEN Performance:
MAE: 3591636.9013
RMSE: 4417022.7455
MAPE: 13.91%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0018, rank=1
   2. Feature_2_t2: importance=0.0014, rank=2
   3. Feature_1_t0: importance=0.0013, rank=3
   4. Feature_1_t2: importance=0.0013, rank=4
   5. Feature_2_t3: importance=0.0011, rank=5

📊 PTEN Results:
  Baseline MAPE: 12.12%
  Enhanced MAPE: 13.91%
  MAPE Improvement: -1.79% (-14.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 339/464: PTGX
============================================================
📊 Loading data for PTGX...
📊 Loading data for PTGX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing PTGX: 'PTGX'

============================================================
TESTING TICKER 340/464: PZZA
============================================================
📊 Loading data for PZZA...
📊 Loading data for PZZA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for PZZA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for PZZA...

==================================================
Training Baseline PZZA (SVM)
==================================================
Training SVM model...

Baseline PZZA Performance:
MAE: 619098.3380
RMSE: 891783.7650
MAPE: 16.65%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 115
   • Highly important features (top 5%): 68

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_75_t3: importance=0.0010, rank=1
   2. Feature_63_t0: importance=0.0008, rank=2
   3. Feature_65_t3: importance=0.0006, rank=3
   4. Feature_65_t0: importance=0.0006, rank=4
   5. Feature_0_t3: importance=0.0006, rank=5

🔧 Applying universal feature engineering for PZZA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for PZZA...

==================================================
Training Enhanced PZZA (SVM)
==================================================
Training SVM model...

Enhanced PZZA Performance:
MAE: 631200.4515
RMSE: 894502.0932
MAPE: 16.93%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 45
   • Highly important features (top 5%): 31

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0031, rank=1
   2. Feature_2_t3: importance=0.0028, rank=2
   3. Feature_1_t3: importance=0.0018, rank=3
   4. Feature_2_t1: importance=0.0013, rank=4
   5. Feature_9_t2: importance=0.0012, rank=5

📊 PZZA Results:
  Baseline MAPE: 16.65%
  Enhanced MAPE: 16.93%
  MAPE Improvement: -0.28% (-1.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 341/464: QDEL
============================================================
📊 Loading data for QDEL...
📊 Loading data for QDEL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing QDEL: 'QDEL'

============================================================
TESTING TICKER 342/464: QNST
============================================================
📊 Loading data for QNST...
📊 Loading data for QNST from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for QNST...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for QNST...

==================================================
Training Baseline QNST (SVM)
==================================================
Training SVM model...

Baseline QNST Performance:
MAE: 240772.2277
RMSE: 381971.1578
MAPE: 13.60%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 233
   • Highly important features (top 5%): 130

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t2: importance=0.0021, rank=1
   2. Feature_94_t2: importance=0.0006, rank=2
   3. Feature_63_t3: importance=0.0005, rank=3
   4. Feature_63_t0: importance=0.0005, rank=4
   5. Feature_93_t2: importance=0.0004, rank=5

🔧 Applying universal feature engineering for QNST...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for QNST...

==================================================
Training Enhanced QNST (SVM)
==================================================
Training SVM model...

Enhanced QNST Performance:
MAE: 270570.3381
RMSE: 438637.4077
MAPE: 15.72%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 55
   • Highly important features (top 5%): 37

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0034, rank=1
   2. Feature_1_t2: importance=0.0024, rank=2
   3. Feature_2_t2: importance=0.0024, rank=3
   4. Feature_2_t3: importance=0.0021, rank=4
   5. Feature_0_t0: importance=0.0019, rank=5

📊 QNST Results:
  Baseline MAPE: 13.60%
  Enhanced MAPE: 15.72%
  MAPE Improvement: -2.12% (-15.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 343/464: QRVO
============================================================
📊 Loading data for QRVO...
📊 Loading data for QRVO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for QRVO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for QRVO...

==================================================
Training Baseline QRVO (SVM)
==================================================
Training SVM model...

Baseline QRVO Performance:
MAE: 566988.2830
RMSE: 950482.0443
MAPE: 11.61%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 224
   • Highly important features (top 5%): 133

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t2: importance=0.0006, rank=1
   2. Feature_65_t3: importance=0.0004, rank=2
   3. Feature_65_t1: importance=0.0004, rank=3
   4. Feature_70_t1: importance=0.0003, rank=4
   5. Feature_79_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for QRVO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for QRVO...

==================================================
Training Enhanced QRVO (SVM)
==================================================
Training SVM model...

Enhanced QRVO Performance:
MAE: 557645.2615
RMSE: 903532.2420
MAPE: 11.71%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 38

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0026, rank=1
   2. Feature_0_t3: importance=0.0026, rank=2
   3. Feature_2_t2: importance=0.0010, rank=3
   4. Feature_1_t3: importance=0.0009, rank=4
   5. Feature_11_t0: importance=0.0006, rank=5

📊 QRVO Results:
  Baseline MAPE: 11.61%
  Enhanced MAPE: 11.71%
  MAPE Improvement: -0.09% (-0.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 344/464: QTWO
============================================================
📊 Loading data for QTWO...
📊 Loading data for QTWO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing QTWO: 'QTWO'

============================================================
TESTING TICKER 345/464: RDN
============================================================
📊 Loading data for RDN...
📊 Loading data for RDN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for RDN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for RDN...

==================================================
Training Baseline RDN (SVM)
==================================================
Training SVM model...

Baseline RDN Performance:
MAE: 766852.5851
RMSE: 1126708.1908
MAPE: 9.64%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 207
   • Highly important features (top 5%): 105

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0012, rank=1
   2. Feature_0_t3: importance=0.0010, rank=2
   3. Feature_69_t1: importance=0.0009, rank=3
   4. Feature_72_t0: importance=0.0008, rank=4
   5. Feature_80_t3: importance=0.0006, rank=5

🔧 Applying universal feature engineering for RDN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for RDN...

==================================================
Training Enhanced RDN (SVM)
==================================================
Training SVM model...

Enhanced RDN Performance:
MAE: 781868.8127
RMSE: 1110040.7758
MAPE: 10.02%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 39
   • Highly important features (top 5%): 25

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0068, rank=1
   2. Feature_1_t3: importance=0.0038, rank=2
   3. Feature_0_t1: importance=0.0038, rank=3
   4. Feature_1_t2: importance=0.0031, rank=4
   5. Feature_1_t0: importance=0.0019, rank=5

📊 RDN Results:
  Baseline MAPE: 9.64%
  Enhanced MAPE: 10.02%
  MAPE Improvement: -0.38% (-3.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 346/464: RDNT
============================================================
📊 Loading data for RDNT...
📊 Loading data for RDNT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for RDNT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for RDNT...

==================================================
Training Baseline RDNT (SVM)
==================================================
Training SVM model...

Baseline RDNT Performance:
MAE: 433851.3647
RMSE: 544181.8099
MAPE: 9.99%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 175
   • Highly important features (top 5%): 86

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0011, rank=1
   2. Feature_63_t2: importance=0.0007, rank=2
   3. Feature_82_t0: importance=0.0006, rank=3
   4. Feature_63_t0: importance=0.0005, rank=4
   5. Feature_0_t3: importance=0.0005, rank=5

🔧 Applying universal feature engineering for RDNT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for RDNT...

==================================================
Training Enhanced RDNT (SVM)
==================================================
Training SVM model...

Enhanced RDNT Performance:
MAE: 394921.3011
RMSE: 493005.4703
MAPE: 9.55%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0035, rank=1
   2. Feature_1_t0: importance=0.0024, rank=2
   3. Feature_0_t1: importance=0.0016, rank=3
   4. Feature_0_t0: importance=0.0015, rank=4
   5. Feature_14_t1: importance=0.0011, rank=5

📊 RDNT Results:
  Baseline MAPE: 9.99%
  Enhanced MAPE: 9.55%
  MAPE Improvement: +0.44% (+4.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 347/464: RES
============================================================
📊 Loading data for RES...
📊 Loading data for RES from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for RES...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for RES...

==================================================
Training Baseline RES (SVM)
==================================================
Training SVM model...

Baseline RES Performance:
MAE: 1610991.1181
RMSE: 2018218.0064
MAPE: 9.95%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 329
   • Highly important features (top 5%): 193

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_83_t2: importance=0.0003, rank=1
   2. Feature_65_t0: importance=0.0002, rank=2
   3. Feature_70_t0: importance=0.0002, rank=3
   4. Feature_76_t3: importance=0.0002, rank=4
   5. Feature_0_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for RES...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for RES...

==================================================
Training Enhanced RES (SVM)
==================================================
Training SVM model...

Enhanced RES Performance:
MAE: 1448254.9990
RMSE: 1861908.7195
MAPE: 8.80%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0051, rank=1
   2. Feature_2_t3: importance=0.0038, rank=2
   3. Feature_1_t2: importance=0.0012, rank=3
   4. Feature_1_t1: importance=0.0010, rank=4
   5. Feature_2_t0: importance=0.0010, rank=5

📊 RES Results:
  Baseline MAPE: 9.95%
  Enhanced MAPE: 8.80%
  MAPE Improvement: +1.14% (+11.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 348/464: REX
============================================================
📊 Loading data for REX...
📊 Loading data for REX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing REX: 'REX'

============================================================
TESTING TICKER 349/464: RGR
============================================================
📊 Loading data for RGR...
📊 Loading data for RGR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for RGR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for RGR...

==================================================
Training Baseline RGR (SVM)
==================================================
Training SVM model...

Baseline RGR Performance:
MAE: 65092.2764
RMSE: 80495.7176
MAPE: 11.12%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 109
   • Highly important features (top 5%): 68

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t0: importance=0.0006, rank=1
   2. Feature_65_t1: importance=0.0005, rank=2
   3. Feature_92_t3: importance=0.0004, rank=3
   4. Feature_2_t2: importance=0.0004, rank=4
   5. Feature_2_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for RGR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for RGR...

==================================================
Training Enhanced RGR (SVM)
==================================================
Training SVM model...

Enhanced RGR Performance:
MAE: 58737.9801
RMSE: 76726.4476
MAPE: 10.18%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 35
   • Highly important features (top 5%): 27

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0015, rank=1
   2. Feature_2_t2: importance=0.0014, rank=2
   3. Feature_2_t1: importance=0.0012, rank=3
   4. Feature_1_t0: importance=0.0011, rank=4
   5. Feature_1_t2: importance=0.0008, rank=5

📊 RGR Results:
  Baseline MAPE: 11.12%
  Enhanced MAPE: 10.18%
  MAPE Improvement: +0.94% (+8.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 350/464: RHI
============================================================
📊 Loading data for RHI...
📊 Loading data for RHI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for RHI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for RHI...

==================================================
Training Baseline RHI (SVM)
==================================================
Training SVM model...

Baseline RHI Performance:
MAE: 600425.9357
RMSE: 759838.1558
MAPE: 8.28%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 208
   • Highly important features (top 5%): 121

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_64_t0: importance=0.0001, rank=1
   2. Feature_93_t0: importance=0.0001, rank=2
   3. Feature_0_t1: importance=0.0001, rank=3
   4. Feature_90_t2: importance=0.0001, rank=4
   5. Feature_88_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for RHI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for RHI...

==================================================
Training Enhanced RHI (SVM)
==================================================
Training SVM model...

Enhanced RHI Performance:
MAE: 625043.7820
RMSE: 788122.5620
MAPE: 8.77%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 44
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0008, rank=1
   2. Feature_2_t2: importance=0.0007, rank=2
   3. Feature_2_t1: importance=0.0006, rank=3
   4. Feature_0_t1: importance=0.0005, rank=4
   5. Feature_12_t3: importance=0.0005, rank=5

📊 RHI Results:
  Baseline MAPE: 8.28%
  Enhanced MAPE: 8.77%
  MAPE Improvement: -0.50% (-6.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 351/464: RHP
============================================================
📊 Loading data for RHP...
📊 Loading data for RHP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for RHP...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for RHP...

==================================================
Training Baseline RHP (SVM)
==================================================
Training SVM model...

Baseline RHP Performance:
MAE: 344888.6875
RMSE: 525943.5184
MAPE: 12.42%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 186
   • Highly important features (top 5%): 95

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t2: importance=0.0006, rank=1
   2. Feature_2_t3: importance=0.0006, rank=2
   3. Feature_71_t2: importance=0.0006, rank=3
   4. Feature_96_t0: importance=0.0005, rank=4
   5. Feature_72_t2: importance=0.0004, rank=5

🔧 Applying universal feature engineering for RHP...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for RHP...

==================================================
Training Enhanced RHP (SVM)
==================================================
Training SVM model...

Enhanced RHP Performance:
MAE: 358830.5927
RMSE: 541873.1737
MAPE: 12.87%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 43
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0026, rank=1
   2. Feature_2_t0: importance=0.0014, rank=2
   3. Feature_5_t3: importance=0.0013, rank=3
   4. Feature_2_t1: importance=0.0010, rank=4
   5. Feature_0_t2: importance=0.0009, rank=5

📊 RHP Results:
  Baseline MAPE: 12.42%
  Enhanced MAPE: 12.87%
  MAPE Improvement: -0.45% (-3.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 352/464: RNST
============================================================
📊 Loading data for RNST...
📊 Loading data for RNST from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for RNST...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for RNST...

==================================================
Training Baseline RNST (SVM)
==================================================
Training SVM model...

Baseline RNST Performance:
MAE: 296972.0776
RMSE: 529504.3999
MAPE: 10.75%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 136
   • Highly important features (top 5%): 76

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_74_t0: importance=0.0010, rank=1
   2. Feature_79_t2: importance=0.0010, rank=2
   3. Feature_81_t1: importance=0.0006, rank=3
   4. Feature_94_t2: importance=0.0005, rank=4
   5. Feature_76_t3: importance=0.0004, rank=5

🔧 Applying universal feature engineering for RNST...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for RNST...

==================================================
Training Enhanced RNST (SVM)
==================================================
Training SVM model...

Enhanced RNST Performance:
MAE: 362009.6530
RMSE: 600293.8944
MAPE: 12.12%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 43
   • Highly important features (top 5%): 33

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_5_t1: importance=0.0008, rank=1
   2. Feature_1_t1: importance=0.0007, rank=2
   3. Feature_0_t3: importance=0.0007, rank=3
   4. Feature_2_t1: importance=0.0007, rank=4
   5. Feature_10_t1: importance=0.0006, rank=5

📊 RNST Results:
  Baseline MAPE: 10.75%
  Enhanced MAPE: 12.12%
  MAPE Improvement: -1.37% (-12.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 353/464: ROCK
============================================================
📊 Loading data for ROCK...
📊 Loading data for ROCK from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ROCK...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ROCK...

==================================================
Training Baseline ROCK (SVM)
==================================================
Training SVM model...

Baseline ROCK Performance:
MAE: 62378.3781
RMSE: 77111.3258
MAPE: 14.97%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 247
   • Highly important features (top 5%): 145

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_77_t3: importance=0.0006, rank=1
   2. Feature_73_t3: importance=0.0004, rank=2
   3. Feature_72_t3: importance=0.0003, rank=3
   4. Feature_82_t0: importance=0.0003, rank=4
   5. Feature_92_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for ROCK...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ROCK...

==================================================
Training Enhanced ROCK (SVM)
==================================================
Training SVM model...

Enhanced ROCK Performance:
MAE: 64502.6970
RMSE: 80568.2046
MAPE: 15.37%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 24

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0019, rank=1
   2. Feature_6_t3: importance=0.0011, rank=2
   3. Feature_1_t3: importance=0.0009, rank=3
   4. Feature_0_t3: importance=0.0008, rank=4
   5. Feature_7_t0: importance=0.0008, rank=5

📊 ROCK Results:
  Baseline MAPE: 14.97%
  Enhanced MAPE: 15.37%
  MAPE Improvement: -0.39% (-2.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 354/464: ROG
============================================================
📊 Loading data for ROG...
📊 Loading data for ROG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for ROG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for ROG...

==================================================
Training Baseline ROG (SVM)
==================================================
Training SVM model...

Baseline ROG Performance:
MAE: 58886.6141
RMSE: 77059.1111
MAPE: 11.16%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 106
   • Highly important features (top 5%): 67

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_83_t0: importance=0.0016, rank=1
   2. Feature_96_t0: importance=0.0013, rank=2
   3. Feature_65_t3: importance=0.0009, rank=3
   4. Feature_95_t0: importance=0.0008, rank=4
   5. Feature_84_t0: importance=0.0008, rank=5

🔧 Applying universal feature engineering for ROG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for ROG...

==================================================
Training Enhanced ROG (SVM)
==================================================
Training SVM model...

Enhanced ROG Performance:
MAE: 45859.0126
RMSE: 58503.4191
MAPE: 8.67%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 32
   • Highly important features (top 5%): 18

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0030, rank=1
   2. Feature_1_t0: importance=0.0029, rank=2
   3. Feature_4_t3: importance=0.0013, rank=3
   4. Feature_2_t1: importance=0.0013, rank=4
   5. Feature_0_t3: importance=0.0012, rank=5

📊 ROG Results:
  Baseline MAPE: 11.16%
  Enhanced MAPE: 8.67%
  MAPE Improvement: +2.49% (+22.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 355/464: RUN
============================================================
📊 Loading data for RUN...
📊 Loading data for RUN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for RUN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for RUN...

==================================================
Training Baseline RUN (SVM)
==================================================
Training SVM model...

Baseline RUN Performance:
MAE: 2433085.8086
RMSE: 3106364.7899
MAPE: 4.78%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 159
   • Highly important features (top 5%): 61

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t0: importance=0.0001, rank=1
   2. Feature_68_t3: importance=0.0001, rank=2
   3. Feature_65_t2: importance=0.0001, rank=3
   4. Feature_80_t1: importance=0.0001, rank=4
   5. Feature_67_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for RUN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for RUN...

==================================================
Training Enhanced RUN (SVM)
==================================================
Training SVM model...

Enhanced RUN Performance:
MAE: 3415663.2180
RMSE: 4367465.6061
MAPE: 6.75%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 39
   • Highly important features (top 5%): 14

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t0: importance=0.0008, rank=1
   2. Feature_1_t0: importance=0.0005, rank=2
   3. Feature_1_t2: importance=0.0004, rank=3
   4. Feature_1_t3: importance=0.0004, rank=4
   5. Feature_0_t3: importance=0.0004, rank=5

📊 RUN Results:
  Baseline MAPE: 4.78%
  Enhanced MAPE: 6.75%
  MAPE Improvement: -1.97% (-41.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 356/464: RUSHA
============================================================
📊 Loading data for RUSHA...
📊 Loading data for RUSHA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for RUSHA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for RUSHA...

==================================================
Training Baseline RUSHA (SVM)
==================================================
Training SVM model...

Baseline RUSHA Performance:
MAE: 256262.6889
RMSE: 336241.2601
MAPE: 7.80%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 262
   • Highly important features (top 5%): 116

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0008, rank=1
   2. Feature_74_t2: importance=0.0007, rank=2
   3. Feature_63_t0: importance=0.0005, rank=3
   4. Feature_63_t1: importance=0.0005, rank=4
   5. Feature_78_t3: importance=0.0004, rank=5

🔧 Applying universal feature engineering for RUSHA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for RUSHA...

==================================================
Training Enhanced RUSHA (SVM)
==================================================
Training SVM model...

Enhanced RUSHA Performance:
MAE: 277245.7299
RMSE: 357690.5359
MAPE: 8.39%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 50
   • Highly important features (top 5%): 34

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0023, rank=1
   2. Feature_2_t1: importance=0.0016, rank=2
   3. Feature_1_t2: importance=0.0014, rank=3
   4. Feature_0_t3: importance=0.0013, rank=4
   5. Feature_1_t3: importance=0.0012, rank=5

📊 RUSHA Results:
  Baseline MAPE: 7.80%
  Enhanced MAPE: 8.39%
  MAPE Improvement: -0.59% (-7.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 357/464: RWT
============================================================
📊 Loading data for RWT...
📊 Loading data for RWT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for RWT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for RWT...

==================================================
Training Baseline RWT (SVM)
==================================================
Training SVM model...

Baseline RWT Performance:
MAE: 488871.1592
RMSE: 673076.9994
MAPE: 10.21%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 128
   • Highly important features (top 5%): 41

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_67_t3: importance=0.0008, rank=1
   2. Feature_65_t3: importance=0.0006, rank=2
   3. Feature_68_t3: importance=0.0006, rank=3
   4. Feature_63_t2: importance=0.0004, rank=4
   5. Feature_0_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for RWT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for RWT...

==================================================
Training Enhanced RWT (SVM)
==================================================
Training SVM model...

Enhanced RWT Performance:
MAE: 505499.4165
RMSE: 706432.7361
MAPE: 10.54%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 35
   • Highly important features (top 5%): 22

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0012, rank=1
   2. Feature_0_t1: importance=0.0012, rank=2
   3. Feature_2_t3: importance=0.0008, rank=3
   4. Feature_1_t2: importance=0.0007, rank=4
   5. Feature_2_t0: importance=0.0007, rank=5

📊 RWT Results:
  Baseline MAPE: 10.21%
  Enhanced MAPE: 10.54%
  MAPE Improvement: -0.33% (-3.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 358/464: SAFE
============================================================
📊 Loading data for SAFE...
📊 Loading data for SAFE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing SAFE: 'SAFE'

============================================================
TESTING TICKER 359/464: SABR
============================================================
📊 Loading data for SABR...
📊 Loading data for SABR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SABR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SABR...

==================================================
Training Baseline SABR (SVM)
==================================================
Training SVM model...

Baseline SABR Performance:
MAE: 1856113.7545
RMSE: 2169075.8764
MAPE: 7.58%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 240
   • Highly important features (top 5%): 123

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t1: importance=0.0005, rank=1
   2. Feature_2_t2: importance=0.0004, rank=2
   3. Feature_70_t2: importance=0.0004, rank=3
   4. Feature_79_t2: importance=0.0003, rank=4
   5. Feature_70_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for SABR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SABR...

==================================================
Training Enhanced SABR (SVM)
==================================================
Training SVM model...

Enhanced SABR Performance:
MAE: 1600558.6697
RMSE: 2098446.2652
MAPE: 6.49%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 33

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0016, rank=1
   2. Feature_11_t2: importance=0.0013, rank=2
   3. Feature_2_t2: importance=0.0013, rank=3
   4. Feature_2_t3: importance=0.0008, rank=4
   5. Feature_5_t2: importance=0.0007, rank=5

📊 SABR Results:
  Baseline MAPE: 7.58%
  Enhanced MAPE: 6.49%
  MAPE Improvement: +1.10% (+14.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 360/464: SAFT
============================================================
📊 Loading data for SAFT...
📊 Loading data for SAFT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SAFT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SAFT...

==================================================
Training Baseline SAFT (SVM)
==================================================
Training SVM model...

Baseline SAFT Performance:
MAE: 11471.3726
RMSE: 15671.0077
MAPE: 9.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 220
   • Highly important features (top 5%): 111

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t0: importance=0.0009, rank=1
   2. Feature_65_t1: importance=0.0007, rank=2
   3. Feature_0_t2: importance=0.0007, rank=3
   4. Feature_68_t0: importance=0.0006, rank=4
   5. Feature_1_t3: importance=0.0005, rank=5

🔧 Applying universal feature engineering for SAFT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SAFT...

==================================================
Training Enhanced SAFT (SVM)
==================================================
Training SVM model...

Enhanced SAFT Performance:
MAE: 11669.2801
RMSE: 15211.6811
MAPE: 10.34%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 47
   • Highly important features (top 5%): 35

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0112, rank=1
   2. Feature_1_t0: importance=0.0021, rank=2
   3. Feature_1_t3: importance=0.0018, rank=3
   4. Feature_2_t1: importance=0.0018, rank=4
   5. Feature_2_t3: importance=0.0017, rank=5

📊 SAFT Results:
  Baseline MAPE: 9.74%
  Enhanced MAPE: 10.34%
  MAPE Improvement: -0.60% (-6.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 361/464: SAH
============================================================
📊 Loading data for SAH...
📊 Loading data for SAH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SAH...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SAH...

==================================================
Training Baseline SAH (SVM)
==================================================
Training SVM model...

Baseline SAH Performance:
MAE: 81345.2319
RMSE: 100055.9006
MAPE: 5.00%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 217
   • Highly important features (top 5%): 122

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_84_t3: importance=0.0000, rank=1
   2. Feature_77_t2: importance=0.0000, rank=2
   3. Feature_83_t3: importance=0.0000, rank=3
   4. Feature_76_t2: importance=0.0000, rank=4
   5. Feature_67_t2: importance=0.0000, rank=5

🔧 Applying universal feature engineering for SAH...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SAH...

==================================================
Training Enhanced SAH (SVM)
==================================================
Training SVM model...

Enhanced SAH Performance:
MAE: 79725.0433
RMSE: 97114.7131
MAPE: 4.83%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 17
   • Highly important features (top 5%): 9

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0002, rank=1
   2. Feature_0_t0: importance=0.0001, rank=2
   3. Feature_0_t3: importance=0.0001, rank=3
   4. Feature_1_t2: importance=0.0001, rank=4
   5. Feature_1_t3: importance=0.0001, rank=5

📊 SAH Results:
  Baseline MAPE: 5.00%
  Enhanced MAPE: 4.83%
  MAPE Improvement: +0.16% (+3.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 362/464: SANM
============================================================
📊 Loading data for SANM...
📊 Loading data for SANM from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SANM...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SANM...

==================================================
Training Baseline SANM (SVM)
==================================================
Training SVM model...

Baseline SANM Performance:
MAE: 161803.9976
RMSE: 233589.4472
MAPE: 10.30%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 219
   • Highly important features (top 5%): 78

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t0: importance=0.0004, rank=1
   2. Feature_96_t1: importance=0.0004, rank=2
   3. Feature_86_t2: importance=0.0003, rank=3
   4. Feature_84_t2: importance=0.0003, rank=4
   5. Feature_0_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for SANM...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SANM...

==================================================
Training Enhanced SANM (SVM)
==================================================
Training SVM model...

Enhanced SANM Performance:
MAE: 154738.1484
RMSE: 214157.2540
MAPE: 9.90%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 47
   • Highly important features (top 5%): 15

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0024, rank=1
   2. Feature_1_t2: importance=0.0016, rank=2
   3. Feature_0_t0: importance=0.0012, rank=3
   4. Feature_2_t0: importance=0.0011, rank=4
   5. Feature_1_t1: importance=0.0008, rank=5

📊 SANM Results:
  Baseline MAPE: 10.30%
  Enhanced MAPE: 9.90%
  MAPE Improvement: +0.40% (+3.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 363/464: SBCF
============================================================
📊 Loading data for SBCF...
📊 Loading data for SBCF from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SBCF...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SBCF...

==================================================
Training Baseline SBCF (SVM)
==================================================
Training SVM model...

Baseline SBCF Performance:
MAE: 174319.9304
RMSE: 237983.8086
MAPE: 9.64%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 214
   • Highly important features (top 5%): 98

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0007, rank=1
   2. Feature_68_t3: importance=0.0006, rank=2
   3. Feature_1_t2: importance=0.0006, rank=3
   4. Feature_68_t1: importance=0.0005, rank=4
   5. Feature_2_t2: importance=0.0005, rank=5

🔧 Applying universal feature engineering for SBCF...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SBCF...

==================================================
Training Enhanced SBCF (SVM)
==================================================
Training SVM model...

Enhanced SBCF Performance:
MAE: 250914.0859
RMSE: 292766.9537
MAPE: 14.67%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 26

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0051, rank=1
   2. Feature_2_t1: importance=0.0026, rank=2
   3. Feature_2_t3: importance=0.0026, rank=3
   4. Feature_0_t2: importance=0.0024, rank=4
   5. Feature_0_t1: importance=0.0023, rank=5

📊 SBCF Results:
  Baseline MAPE: 9.64%
  Enhanced MAPE: 14.67%
  MAPE Improvement: -5.03% (-52.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 364/464: SBH
============================================================
📊 Loading data for SBH...
📊 Loading data for SBH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SBH...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SBH...

==================================================
Training Baseline SBH (SVM)
==================================================
Training SVM model...

Baseline SBH Performance:
MAE: 1116113.8572
RMSE: 1605942.5479
MAPE: 8.86%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 143
   • Highly important features (top 5%): 102

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t1: importance=0.0007, rank=1
   2. Feature_63_t1: importance=0.0003, rank=2
   3. Feature_92_t1: importance=0.0002, rank=3
   4. Feature_84_t1: importance=0.0001, rank=4
   5. Feature_76_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for SBH...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SBH...

==================================================
Training Enhanced SBH (SVM)
==================================================
Training SVM model...

Enhanced SBH Performance:
MAE: 1097558.9146
RMSE: 1620010.5605
MAPE: 8.84%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 34
   • Highly important features (top 5%): 27

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_11_t3: importance=0.0004, rank=1
   2. Feature_1_t2: importance=0.0003, rank=2
   3. Feature_0_t3: importance=0.0003, rank=3
   4. Feature_0_t1: importance=0.0002, rank=4
   5. Feature_1_t0: importance=0.0002, rank=5

📊 SBH Results:
  Baseline MAPE: 8.86%
  Enhanced MAPE: 8.84%
  MAPE Improvement: +0.02% (+0.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 365/464: SBSI
============================================================
📊 Loading data for SBSI...
📊 Loading data for SBSI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SBSI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SBSI...

==================================================
Training Baseline SBSI (SVM)
==================================================
Training SVM model...

Baseline SBSI Performance:
MAE: 67170.0084
RMSE: 136305.6920
MAPE: 6.62%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 172
   • Highly important features (top 5%): 107

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_66_t3: importance=0.0001, rank=1
   2. Feature_65_t0: importance=0.0001, rank=2
   3. Feature_63_t2: importance=0.0001, rank=3
   4. Feature_71_t3: importance=0.0001, rank=4
   5. Feature_64_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for SBSI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SBSI...

==================================================
Training Enhanced SBSI (SVM)
==================================================
Training SVM model...

Enhanced SBSI Performance:
MAE: 62111.8645
RMSE: 129879.5960
MAPE: 6.19%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 27

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0006, rank=1
   2. Feature_7_t0: importance=0.0003, rank=2
   3. Feature_11_t0: importance=0.0003, rank=3
   4. Feature_0_t1: importance=0.0003, rank=4
   5. Feature_12_t0: importance=0.0003, rank=5

📊 SBSI Results:
  Baseline MAPE: 6.62%
  Enhanced MAPE: 6.19%
  MAPE Improvement: +0.44% (+6.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 366/464: SCHL
============================================================
📊 Loading data for SCHL...
📊 Loading data for SCHL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SCHL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SCHL...

==================================================
Training Baseline SCHL (SVM)
==================================================
Training SVM model...

Baseline SCHL Performance:
MAE: 117330.0616
RMSE: 164543.2289
MAPE: 12.17%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 155
   • Highly important features (top 5%): 55

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0013, rank=1
   2. Feature_63_t1: importance=0.0013, rank=2
   3. Feature_70_t0: importance=0.0012, rank=3
   4. Feature_70_t1: importance=0.0007, rank=4
   5. Feature_86_t2: importance=0.0007, rank=5

🔧 Applying universal feature engineering for SCHL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SCHL...

==================================================
Training Enhanced SCHL (SVM)
==================================================
Training SVM model...

Enhanced SCHL Performance:
MAE: 139272.1687
RMSE: 204793.1099
MAPE: 13.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 24

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0077, rank=1
   2. Feature_1_t1: importance=0.0065, rank=2
   3. Feature_0_t3: importance=0.0056, rank=3
   4. Feature_2_t3: importance=0.0044, rank=4
   5. Feature_2_t1: importance=0.0022, rank=5

📊 SCHL Results:
  Baseline MAPE: 12.17%
  Enhanced MAPE: 13.74%
  MAPE Improvement: -1.57% (-12.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 367/464: SCL
============================================================
📊 Loading data for SCL...
📊 Loading data for SCL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SCL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SCL...

==================================================
Training Baseline SCL (SVM)
==================================================
Training SVM model...

Baseline SCL Performance:
MAE: 30718.4327
RMSE: 43471.1926
MAPE: 10.11%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 238
   • Highly important features (top 5%): 134

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0010, rank=1
   2. Feature_0_t2: importance=0.0008, rank=2
   3. Feature_2_t2: importance=0.0006, rank=3
   4. Feature_89_t2: importance=0.0005, rank=4
   5. Feature_78_t2: importance=0.0004, rank=5

🔧 Applying universal feature engineering for SCL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SCL...

==================================================
Training Enhanced SCL (SVM)
==================================================
Training SVM model...

Enhanced SCL Performance:
MAE: 34983.8203
RMSE: 49216.8562
MAPE: 11.67%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 29

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0047, rank=1
   2. Feature_0_t3: importance=0.0023, rank=2
   3. Feature_0_t1: importance=0.0023, rank=3
   4. Feature_0_t2: importance=0.0016, rank=4
   5. Feature_7_t2: importance=0.0013, rank=5

📊 SCL Results:
  Baseline MAPE: 10.11%
  Enhanced MAPE: 11.67%
  MAPE Improvement: -1.56% (-15.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 368/464: SCSC
============================================================
📊 Loading data for SCSC...
📊 Loading data for SCSC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SCSC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SCSC...

==================================================
Training Baseline SCSC (SVM)
==================================================
Training SVM model...

Baseline SCSC Performance:
MAE: 166784.6698
RMSE: 242181.3330
MAPE: 11.52%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 204
   • Highly important features (top 5%): 103

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_82_t0: importance=0.0010, rank=1
   2. Feature_81_t2: importance=0.0008, rank=2
   3. Feature_0_t3: importance=0.0007, rank=3
   4. Feature_82_t2: importance=0.0006, rank=4
   5. Feature_85_t0: importance=0.0006, rank=5

🔧 Applying universal feature engineering for SCSC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SCSC...

==================================================
Training Enhanced SCSC (SVM)
==================================================
Training SVM model...

Enhanced SCSC Performance:
MAE: 155303.5921
RMSE: 236470.0015
MAPE: 11.29%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 54
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0034, rank=1
   2. Feature_0_t1: importance=0.0025, rank=2
   3. Feature_0_t0: importance=0.0023, rank=3
   4. Feature_2_t3: importance=0.0020, rank=4
   5. Feature_0_t2: importance=0.0017, rank=5

📊 SCSC Results:
  Baseline MAPE: 11.52%
  Enhanced MAPE: 11.29%
  MAPE Improvement: +0.23% (+2.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 369/464: SCVL
============================================================
📊 Loading data for SCVL...
📊 Loading data for SCVL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SCVL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SCVL...

==================================================
Training Baseline SCVL (SVM)
==================================================
Training SVM model...

Baseline SCVL Performance:
MAE: 184399.6350
RMSE: 241794.2977
MAPE: 6.41%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 255
   • Highly important features (top 5%): 138

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_75_t1: importance=0.0002, rank=1
   2. Feature_79_t2: importance=0.0002, rank=2
   3. Feature_2_t1: importance=0.0001, rank=3
   4. Feature_65_t2: importance=0.0001, rank=4
   5. Feature_89_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for SCVL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SCVL...

==================================================
Training Enhanced SCVL (SVM)
==================================================
Training SVM model...

Enhanced SCVL Performance:
MAE: 237526.3133
RMSE: 314018.2025
MAPE: 7.65%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0008, rank=1
   2. Feature_10_t2: importance=0.0006, rank=2
   3. Feature_3_t3: importance=0.0005, rank=3
   4. Feature_8_t2: importance=0.0004, rank=4
   5. Feature_13_t2: importance=0.0004, rank=5

📊 SCVL Results:
  Baseline MAPE: 6.41%
  Enhanced MAPE: 7.65%
  MAPE Improvement: -1.24% (-19.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 370/464: SEDG
============================================================
📊 Loading data for SEDG...
📊 Loading data for SEDG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SEDG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SEDG...

==================================================
Training Baseline SEDG (SVM)
==================================================
Training SVM model...

Baseline SEDG Performance:
MAE: 1172683.4451
RMSE: 1513787.2622
MAPE: 7.54%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 168
   • Highly important features (top 5%): 97

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0004, rank=1
   2. Feature_2_t1: importance=0.0003, rank=2
   3. Feature_80_t3: importance=0.0003, rank=3
   4. Feature_63_t2: importance=0.0003, rank=4
   5. Feature_67_t0: importance=0.0003, rank=5

🔧 Applying universal feature engineering for SEDG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SEDG...

==================================================
Training Enhanced SEDG (SVM)
==================================================
Training SVM model...

Enhanced SEDG Performance:
MAE: 1569024.7457
RMSE: 1967601.3203
MAPE: 9.29%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 29
   • Highly important features (top 5%): 22

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0024, rank=1
   2. Feature_1_t1: importance=0.0011, rank=2
   3. Feature_1_t3: importance=0.0011, rank=3
   4. Feature_2_t2: importance=0.0011, rank=4
   5. Feature_1_t2: importance=0.0011, rank=5

📊 SEDG Results:
  Baseline MAPE: 7.54%
  Enhanced MAPE: 9.29%
  MAPE Improvement: -1.75% (-23.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 371/464: SEE
============================================================
📊 Loading data for SEE...
📊 Loading data for SEE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SEE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SEE...

==================================================
Training Baseline SEE (SVM)
==================================================
Training SVM model...

Baseline SEE Performance:
MAE: 551081.7644
RMSE: 731934.9434
MAPE: 9.63%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 246
   • Highly important features (top 5%): 128

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_75_t1: importance=0.0003, rank=1
   2. Feature_74_t0: importance=0.0003, rank=2
   3. Feature_87_t3: importance=0.0002, rank=3
   4. Feature_63_t3: importance=0.0002, rank=4
   5. Feature_2_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for SEE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SEE...

==================================================
Training Enhanced SEE (SVM)
==================================================
Training SVM model...

Enhanced SEE Performance:
MAE: 589392.8372
RMSE: 747851.2362
MAPE: 10.26%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 33
   • Highly important features (top 5%): 22

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0021, rank=1
   2. Feature_1_t0: importance=0.0013, rank=2
   3. Feature_4_t2: importance=0.0008, rank=3
   4. Feature_2_t1: importance=0.0007, rank=4
   5. Feature_2_t2: importance=0.0007, rank=5

📊 SEE Results:
  Baseline MAPE: 9.63%
  Enhanced MAPE: 10.26%
  MAPE Improvement: -0.63% (-6.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 372/464: SEM
============================================================
📊 Loading data for SEM...
📊 Loading data for SEM from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SEM...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SEM...

==================================================
Training Baseline SEM (SVM)
==================================================
Training SVM model...

Baseline SEM Performance:
MAE: 257811.5746
RMSE: 350258.2505
MAPE: 8.60%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 254
   • Highly important features (top 5%): 123

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_78_t3: importance=0.0003, rank=1
   2. Feature_75_t0: importance=0.0003, rank=2
   3. Feature_80_t2: importance=0.0003, rank=3
   4. Feature_68_t0: importance=0.0002, rank=4
   5. Feature_64_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for SEM...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SEM...

==================================================
Training Enhanced SEM (SVM)
==================================================
Training SVM model...

Enhanced SEM Performance:
MAE: 307597.6485
RMSE: 387548.5066
MAPE: 10.31%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0022, rank=1
   2. Feature_1_t1: importance=0.0019, rank=2
   3. Feature_1_t3: importance=0.0019, rank=3
   4. Feature_0_t3: importance=0.0013, rank=4
   5. Feature_2_t3: importance=0.0010, rank=5

📊 SEM Results:
  Baseline MAPE: 8.60%
  Enhanced MAPE: 10.31%
  MAPE Improvement: -1.71% (-19.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 373/464: SFBS
============================================================
📊 Loading data for SFBS...
📊 Loading data for SFBS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SFBS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SFBS...

==================================================
Training Baseline SFBS (SVM)
==================================================
Training SVM model...

Baseline SFBS Performance:
MAE: 192743.8723
RMSE: 227251.7855
MAPE: 5.14%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 209
   • Highly important features (top 5%): 102

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t2: importance=0.0001, rank=1
   2. Feature_89_t0: importance=0.0001, rank=2
   3. Feature_63_t1: importance=0.0001, rank=3
   4. Feature_80_t1: importance=0.0001, rank=4
   5. Feature_70_t1: importance=0.0000, rank=5

🔧 Applying universal feature engineering for SFBS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SFBS...

==================================================
Training Enhanced SFBS (SVM)
==================================================
Training SVM model...

Enhanced SFBS Performance:
MAE: 183629.5040
RMSE: 221809.4576
MAPE: 4.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 27
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0004, rank=1
   2. Feature_1_t3: importance=0.0003, rank=2
   3. Feature_0_t1: importance=0.0002, rank=3
   4. Feature_2_t1: importance=0.0002, rank=4
   5. Feature_1_t1: importance=0.0002, rank=5

📊 SFBS Results:
  Baseline MAPE: 5.14%
  Enhanced MAPE: 4.94%
  MAPE Improvement: +0.20% (+3.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 374/464: SFNC
============================================================
📊 Loading data for SFNC...
📊 Loading data for SFNC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SFNC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SFNC...

==================================================
Training Baseline SFNC (SVM)
==================================================
Training SVM model...

Baseline SFNC Performance:
MAE: 207896.6342
RMSE: 302989.0363
MAPE: 7.78%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 116
   • Highly important features (top 5%): 52

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_69_t2: importance=0.0006, rank=1
   2. Feature_69_t0: importance=0.0004, rank=2
   3. Feature_70_t0: importance=0.0003, rank=3
   4. Feature_70_t2: importance=0.0003, rank=4
   5. Feature_80_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for SFNC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SFNC...

==================================================
Training Enhanced SFNC (SVM)
==================================================
Training SVM model...

Enhanced SFNC Performance:
MAE: 252407.2721
RMSE: 333520.3662
MAPE: 9.89%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 22

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0016, rank=1
   2. Feature_0_t2: importance=0.0014, rank=2
   3. Feature_1_t2: importance=0.0010, rank=3
   4. Feature_1_t1: importance=0.0008, rank=4
   5. Feature_0_t3: importance=0.0008, rank=5

📊 SFNC Results:
  Baseline MAPE: 7.78%
  Enhanced MAPE: 9.89%
  MAPE Improvement: -2.11% (-27.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 375/464: SHAK
============================================================
📊 Loading data for SHAK...
📊 Loading data for SHAK from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SHAK...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SHAK...

==================================================
Training Baseline SHAK (SVM)
==================================================
Training SVM model...

Baseline SHAK Performance:
MAE: 206881.1032
RMSE: 264363.2490
MAPE: 5.09%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 143
   • Highly important features (top 5%): 68

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t2: importance=0.0001, rank=1
   2. Feature_63_t1: importance=0.0001, rank=2
   3. Feature_63_t0: importance=0.0001, rank=3
   4. Feature_75_t0: importance=0.0001, rank=4
   5. Feature_2_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for SHAK...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SHAK...

==================================================
Training Enhanced SHAK (SVM)
==================================================
Training SVM model...

Enhanced SHAK Performance:
MAE: 282683.1771
RMSE: 374320.9579
MAPE: 6.71%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 32
   • Highly important features (top 5%): 21

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t2: importance=0.0006, rank=1
   2. Feature_2_t3: importance=0.0005, rank=2
   3. Feature_1_t3: importance=0.0004, rank=3
   4. Feature_1_t1: importance=0.0004, rank=4
   5. Feature_1_t2: importance=0.0003, rank=5

📊 SHAK Results:
  Baseline MAPE: 5.09%
  Enhanced MAPE: 6.71%
  MAPE Improvement: -1.62% (-31.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 376/464: SHEN
============================================================
📊 Loading data for SHEN...
📊 Loading data for SHEN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SHEN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SHEN...

==================================================
Training Baseline SHEN (SVM)
==================================================
Training SVM model...

Baseline SHEN Performance:
MAE: 110532.4648
RMSE: 131783.0500
MAPE: 8.26%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 141
   • Highly important features (top 5%): 92

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_84_t3: importance=0.0024, rank=1
   2. Feature_79_t3: importance=0.0009, rank=2
   3. Feature_94_t1: importance=0.0008, rank=3
   4. Feature_64_t2: importance=0.0007, rank=4
   5. Feature_78_t0: importance=0.0006, rank=5

🔧 Applying universal feature engineering for SHEN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SHEN...

==================================================
Training Enhanced SHEN (SVM)
==================================================
Training SVM model...

Enhanced SHEN Performance:
MAE: 94277.7205
RMSE: 112775.1247
MAPE: 7.25%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 26
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0042, rank=1
   2. Feature_0_t3: importance=0.0022, rank=2
   3. Feature_2_t1: importance=0.0012, rank=3
   4. Feature_2_t3: importance=0.0012, rank=4
   5. Feature_0_t2: importance=0.0012, rank=5

📊 SHEN Results:
  Baseline MAPE: 8.26%
  Enhanced MAPE: 7.25%
  MAPE Improvement: +1.00% (+12.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 377/464: SHO
============================================================
📊 Loading data for SHO...
📊 Loading data for SHO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SHO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SHO...

==================================================
Training Baseline SHO (SVM)
==================================================
Training SVM model...

Baseline SHO Performance:
MAE: 1351492.6029
RMSE: 1747244.6497
MAPE: 10.56%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 266
   • Highly important features (top 5%): 97

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_67_t2: importance=0.0005, rank=1
   2. Feature_68_t2: importance=0.0004, rank=2
   3. Feature_0_t0: importance=0.0003, rank=3
   4. Feature_2_t1: importance=0.0003, rank=4
   5. Feature_63_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for SHO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SHO...

==================================================
Training Enhanced SHO (SVM)
==================================================
Training SVM model...

Enhanced SHO Performance:
MAE: 1421549.9000
RMSE: 1856087.4871
MAPE: 11.32%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 39

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0018, rank=1
   2. Feature_0_t0: importance=0.0013, rank=2
   3. Feature_2_t2: importance=0.0010, rank=3
   4. Feature_1_t0: importance=0.0010, rank=4
   5. Feature_0_t3: importance=0.0009, rank=5

📊 SHO Results:
  Baseline MAPE: 10.56%
  Enhanced MAPE: 11.32%
  MAPE Improvement: -0.76% (-7.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 378/464: SHOO
============================================================
📊 Loading data for SHOO...
📊 Loading data for SHOO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SHOO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SHOO...

==================================================
Training Baseline SHOO (SVM)
==================================================
Training SVM model...

Baseline SHOO Performance:
MAE: 425743.8668
RMSE: 564943.6326
MAPE: 11.83%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 217
   • Highly important features (top 5%): 109

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t3: importance=0.0005, rank=1
   2. Feature_70_t0: importance=0.0005, rank=2
   3. Feature_68_t0: importance=0.0003, rank=3
   4. Feature_2_t2: importance=0.0003, rank=4
   5. Feature_92_t0: importance=0.0003, rank=5

🔧 Applying universal feature engineering for SHOO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SHOO...

==================================================
Training Enhanced SHOO (SVM)
==================================================
Training SVM model...

Enhanced SHOO Performance:
MAE: 472998.7912
RMSE: 606460.3552
MAPE: 13.64%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 40
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0024, rank=1
   2. Feature_1_t2: importance=0.0023, rank=2
   3. Feature_0_t0: importance=0.0022, rank=3
   4. Feature_1_t1: importance=0.0020, rank=4
   5. Feature_2_t2: importance=0.0015, rank=5

📊 SHOO Results:
  Baseline MAPE: 11.83%
  Enhanced MAPE: 13.64%
  MAPE Improvement: -1.81% (-15.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 379/464: SIG
============================================================
📊 Loading data for SIG...
📊 Loading data for SIG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SIG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SIG...

==================================================
Training Baseline SIG (SVM)
==================================================
Training SVM model...

Baseline SIG Performance:
MAE: 337503.3160
RMSE: 422032.3160
MAPE: 6.96%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 138
   • Highly important features (top 5%): 43

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0003, rank=1
   2. Feature_89_t1: importance=0.0002, rank=2
   3. Feature_2_t2: importance=0.0002, rank=3
   4. Feature_93_t3: importance=0.0002, rank=4
   5. Feature_0_t0: importance=0.0001, rank=5

🔧 Applying universal feature engineering for SIG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SIG...

==================================================
Training Enhanced SIG (SVM)
==================================================
Training SVM model...

Enhanced SIG Performance:
MAE: 300589.8320
RMSE: 379771.5353
MAPE: 6.30%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 31
   • Highly important features (top 5%): 18

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0009, rank=1
   2. Feature_0_t3: importance=0.0008, rank=2
   3. Feature_2_t0: importance=0.0006, rank=3
   4. Feature_1_t3: importance=0.0006, rank=4
   5. Feature_1_t2: importance=0.0005, rank=5

📊 SIG Results:
  Baseline MAPE: 6.96%
  Enhanced MAPE: 6.30%
  MAPE Improvement: +0.66% (+9.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 380/464: SKT
============================================================
📊 Loading data for SKT...
📊 Loading data for SKT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing SKT: 'SKT'

============================================================
TESTING TICKER 381/464: SKY
============================================================
📊 Loading data for SKY...
📊 Loading data for SKY from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing SKY: 'SKY'

============================================================
TESTING TICKER 382/464: SKYW
============================================================
📊 Loading data for SKYW...
📊 Loading data for SKYW from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SKYW...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SKYW...

==================================================
Training Baseline SKYW (SVM)
==================================================
Training SVM model...

Baseline SKYW Performance:
MAE: 179153.4295
RMSE: 214474.0331
MAPE: 12.03%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 257
   • Highly important features (top 5%): 122

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0005, rank=1
   2. Feature_84_t3: importance=0.0004, rank=2
   3. Feature_72_t1: importance=0.0003, rank=3
   4. Feature_70_t1: importance=0.0003, rank=4
   5. Feature_64_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for SKYW...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SKYW...

==================================================
Training Enhanced SKYW (SVM)
==================================================
Training SVM model...

Enhanced SKYW Performance:
MAE: 155889.9861
RMSE: 196760.3640
MAPE: 10.33%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 40
   • Highly important features (top 5%): 24

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0040, rank=1
   2. Feature_2_t3: importance=0.0022, rank=2
   3. Feature_1_t0: importance=0.0012, rank=3
   4. Feature_0_t0: importance=0.0011, rank=4
   5. Feature_2_t1: importance=0.0011, rank=5

📊 SKYW Results:
  Baseline MAPE: 12.03%
  Enhanced MAPE: 10.33%
  MAPE Improvement: +1.70% (+14.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 383/464: SLG
============================================================
📊 Loading data for SLG...
📊 Loading data for SLG from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SLG...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SLG...

==================================================
Training Baseline SLG (SVM)
==================================================
Training SVM model...

Baseline SLG Performance:
MAE: 437113.1914
RMSE: 560535.7022
MAPE: 5.00%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 240
   • Highly important features (top 5%): 134

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_90_t3: importance=0.0005, rank=1
   2. Feature_85_t3: importance=0.0002, rank=2
   3. Feature_65_t1: importance=0.0002, rank=3
   4. Feature_64_t3: importance=0.0001, rank=4
   5. Feature_2_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for SLG...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SLG...

==================================================
Training Enhanced SLG (SVM)
==================================================
Training SVM model...

Enhanced SLG Performance:
MAE: 444295.9341
RMSE: 546808.0184
MAPE: 5.41%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 46
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0011, rank=1
   2. Feature_2_t1: importance=0.0006, rank=2
   3. Feature_1_t3: importance=0.0005, rank=3
   4. Feature_2_t2: importance=0.0004, rank=4
   5. Feature_0_t2: importance=0.0004, rank=5

📊 SLG Results:
  Baseline MAPE: 5.00%
  Enhanced MAPE: 5.41%
  MAPE Improvement: -0.41% (-8.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 384/464: SM
============================================================
📊 Loading data for SM...
📊 Loading data for SM from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SM...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SM...

==================================================
Training Baseline SM (SVM)
==================================================
Training SVM model...

Baseline SM Performance:
MAE: 783586.6342
RMSE: 991888.0015
MAPE: 7.57%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 238
   • Highly important features (top 5%): 126

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0006, rank=1
   2. Feature_66_t3: importance=0.0005, rank=2
   3. Feature_66_t2: importance=0.0004, rank=3
   4. Feature_83_t2: importance=0.0003, rank=4
   5. Feature_84_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for SM...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SM...

==================================================
Training Enhanced SM (SVM)
==================================================
Training SVM model...

Enhanced SM Performance:
MAE: 812772.5052
RMSE: 1069740.8222
MAPE: 7.78%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 43
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0023, rank=1
   2. Feature_0_t3: importance=0.0018, rank=2
   3. Feature_1_t1: importance=0.0015, rank=3
   4. Feature_2_t3: importance=0.0011, rank=4
   5. Feature_0_t2: importance=0.0011, rank=5

📊 SM Results:
  Baseline MAPE: 7.57%
  Enhanced MAPE: 7.78%
  MAPE Improvement: -0.21% (-2.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 385/464: SMP
============================================================
📊 Loading data for SMP...
📊 Loading data for SMP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SMP...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SMP...

==================================================
Training Baseline SMP (SVM)
==================================================
Training SVM model...

Baseline SMP Performance:
MAE: 119992.5877
RMSE: 159133.4498
MAPE: 21.40%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 313
   • Highly important features (top 5%): 156

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_80_t2: importance=0.0006, rank=1
   2. Feature_0_t3: importance=0.0006, rank=2
   3. Feature_81_t0: importance=0.0006, rank=3
   4. Feature_89_t2: importance=0.0006, rank=4
   5. Feature_82_t2: importance=0.0005, rank=5

🔧 Applying universal feature engineering for SMP...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SMP...

==================================================
Training Enhanced SMP (SVM)
==================================================
Training SVM model...

Enhanced SMP Performance:
MAE: 110400.0069
RMSE: 144597.8373
MAPE: 19.79%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 40
   • Highly important features (top 5%): 21

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0091, rank=1
   2. Feature_1_t1: importance=0.0033, rank=2
   3. Feature_1_t2: importance=0.0027, rank=3
   4. Feature_1_t0: importance=0.0023, rank=4
   5. Feature_0_t1: importance=0.0021, rank=5

📊 SMP Results:
  Baseline MAPE: 21.40%
  Enhanced MAPE: 19.79%
  MAPE Improvement: +1.60% (+7.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 386/464: SMPL
============================================================
📊 Loading data for SMPL...
📊 Loading data for SMPL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing SMPL: 'SMPL'

============================================================
TESTING TICKER 387/464: SMTC
============================================================
📊 Loading data for SMTC...
📊 Loading data for SMTC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SMTC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SMTC...

==================================================
Training Baseline SMTC (SVM)
==================================================
Training SVM model...

Baseline SMTC Performance:
MAE: 1034021.5288
RMSE: 1457755.0101
MAPE: 11.96%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 147
   • Highly important features (top 5%): 76

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t2: importance=0.0014, rank=1
   2. Feature_63_t3: importance=0.0010, rank=2
   3. Feature_65_t0: importance=0.0010, rank=3
   4. Feature_94_t2: importance=0.0009, rank=4
   5. Feature_93_t2: importance=0.0006, rank=5

🔧 Applying universal feature engineering for SMTC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SMTC...

==================================================
Training Enhanced SMTC (SVM)
==================================================
Training SVM model...

Enhanced SMTC Performance:
MAE: 1097082.9616
RMSE: 1845724.3765
MAPE: 12.65%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 46
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0037, rank=1
   2. Feature_2_t3: importance=0.0033, rank=2
   3. Feature_2_t0: importance=0.0025, rank=3
   4. Feature_1_t3: importance=0.0012, rank=4
   5. Feature_1_t0: importance=0.0011, rank=5

📊 SMTC Results:
  Baseline MAPE: 11.96%
  Enhanced MAPE: 12.65%
  MAPE Improvement: -0.69% (-5.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 388/464: SNDR
============================================================
📊 Loading data for SNDR...
📊 Loading data for SNDR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing SNDR: 'SNDR'

============================================================
TESTING TICKER 389/464: SPSC
============================================================
📊 Loading data for SPSC...
📊 Loading data for SPSC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SPSC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SPSC...

==================================================
Training Baseline SPSC (SVM)
==================================================
Training SVM model...

Baseline SPSC Performance:
MAE: 83649.7939
RMSE: 110374.0926
MAPE: 9.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 222
   • Highly important features (top 5%): 117

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t1: importance=0.0010, rank=1
   2. Feature_81_t3: importance=0.0006, rank=2
   3. Feature_65_t0: importance=0.0005, rank=3
   4. Feature_79_t2: importance=0.0004, rank=4
   5. Feature_93_t1: importance=0.0004, rank=5

🔧 Applying universal feature engineering for SPSC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SPSC...

==================================================
Training Enhanced SPSC (SVM)
==================================================
Training SVM model...

Enhanced SPSC Performance:
MAE: 98692.6853
RMSE: 135116.4519
MAPE: 10.89%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 46
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0045, rank=1
   2. Feature_2_t3: importance=0.0030, rank=2
   3. Feature_0_t0: importance=0.0025, rank=3
   4. Feature_1_t3: importance=0.0025, rank=4
   5. Feature_1_t1: importance=0.0025, rank=5

📊 SPSC Results:
  Baseline MAPE: 9.74%
  Enhanced MAPE: 10.89%
  MAPE Improvement: -1.15% (-11.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 390/464: SPXC
============================================================
📊 Loading data for SPXC...
📊 Loading data for SPXC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SPXC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SPXC...

==================================================
Training Baseline SPXC (SVM)
==================================================
Training SVM model...

Baseline SPXC Performance:
MAE: 63722.1471
RMSE: 80737.4456
MAPE: 9.73%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 300
   • Highly important features (top 5%): 141

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_94_t3: importance=0.0005, rank=1
   2. Feature_71_t1: importance=0.0004, rank=2
   3. Feature_96_t2: importance=0.0004, rank=3
   4. Feature_0_t3: importance=0.0003, rank=4
   5. Feature_65_t0: importance=0.0003, rank=5

🔧 Applying universal feature engineering for SPXC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SPXC...

==================================================
Training Enhanced SPXC (SVM)
==================================================
Training SVM model...

Enhanced SPXC Performance:
MAE: 64979.0713
RMSE: 81489.5345
MAPE: 10.14%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 45
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0062, rank=1
   2. Feature_1_t2: importance=0.0013, rank=2
   3. Feature_2_t3: importance=0.0013, rank=3
   4. Feature_0_t1: importance=0.0012, rank=4
   5. Feature_1_t3: importance=0.0011, rank=5

📊 SPXC Results:
  Baseline MAPE: 9.73%
  Enhanced MAPE: 10.14%
  MAPE Improvement: -0.41% (-4.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 391/464: SRPT
============================================================
📊 Loading data for SRPT...
📊 Loading data for SRPT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SRPT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Error: Ticker 'SRPT' not found in short volume data.
Retrieved short volume data for 0 days
Creating short volume features with 15 days lookback...
No short volume data available, creating zero features
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SRPT...

==================================================
Training Baseline SRPT (SVM)
==================================================
Training SVM model...

Baseline SRPT Performance:
MAE: 671815.5123
RMSE: 1138522.0027
MAPE: 8.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 66
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0004, rank=1
   2. Feature_65_t3: importance=0.0004, rank=2
   3. Feature_66_t1: importance=0.0004, rank=3
   4. Feature_2_t1: importance=0.0002, rank=4
   5. Feature_64_t0: importance=0.0001, rank=5

🔧 Applying universal feature engineering for SRPT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SRPT...

==================================================
Training Enhanced SRPT (SVM)
==================================================
Training SVM model...

Enhanced SRPT Performance:
MAE: 647908.1829
RMSE: 1135122.3720
MAPE: 8.59%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 30
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0004, rank=1
   2. Feature_0_t0: importance=0.0004, rank=2
   3. Feature_5_t2: importance=0.0004, rank=3
   4. Feature_13_t3: importance=0.0003, rank=4
   5. Feature_2_t0: importance=0.0003, rank=5

📊 SRPT Results:
  Baseline MAPE: 8.94%
  Enhanced MAPE: 8.59%
  MAPE Improvement: +0.34% (+3.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 392/464: SSTK
============================================================
📊 Loading data for SSTK...
📊 Loading data for SSTK from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SSTK...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SSTK...

==================================================
Training Baseline SSTK (SVM)
==================================================
Training SVM model...

Baseline SSTK Performance:
MAE: 235984.3807
RMSE: 298900.4420
MAPE: 7.08%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 234
   • Highly important features (top 5%): 92

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t3: importance=0.0001, rank=1
   2. Feature_80_t2: importance=0.0001, rank=2
   3. Feature_2_t0: importance=0.0001, rank=3
   4. Feature_96_t2: importance=0.0001, rank=4
   5. Feature_74_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for SSTK...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SSTK...

==================================================
Training Enhanced SSTK (SVM)
==================================================
Training SVM model...

Enhanced SSTK Performance:
MAE: 202566.2966
RMSE: 262935.8932
MAPE: 5.51%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 25
   • Highly important features (top 5%): 10

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0014, rank=1
   2. Feature_0_t3: importance=0.0008, rank=2
   3. Feature_1_t1: importance=0.0005, rank=3
   4. Feature_2_t2: importance=0.0005, rank=4
   5. Feature_9_t2: importance=0.0004, rank=5

📊 SSTK Results:
  Baseline MAPE: 7.08%
  Enhanced MAPE: 5.51%
  MAPE Improvement: +1.57% (+22.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 393/464: STAA
============================================================
📊 Loading data for STAA...
📊 Loading data for STAA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for STAA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for STAA...

==================================================
Training Baseline STAA (SVM)
==================================================
Training SVM model...

Baseline STAA Performance:
MAE: 399591.9750
RMSE: 527489.7032
MAPE: 8.64%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 219
   • Highly important features (top 5%): 112

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0004, rank=1
   2. Feature_75_t3: importance=0.0004, rank=2
   3. Feature_76_t3: importance=0.0003, rank=3
   4. Feature_65_t3: importance=0.0003, rank=4
   5. Feature_65_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for STAA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for STAA...

==================================================
Training Enhanced STAA (SVM)
==================================================
Training SVM model...

Enhanced STAA Performance:
MAE: 363062.4366
RMSE: 490325.2398
MAPE: 7.86%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 29
   • Highly important features (top 5%): 16

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0019, rank=1
   2. Feature_2_t3: importance=0.0019, rank=2
   3. Feature_1_t2: importance=0.0017, rank=3
   4. Feature_1_t0: importance=0.0010, rank=4
   5. Feature_2_t0: importance=0.0007, rank=5

📊 STAA Results:
  Baseline MAPE: 8.64%
  Enhanced MAPE: 7.86%
  MAPE Improvement: +0.77% (+9.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 394/464: STBA
============================================================
📊 Loading data for STBA...
📊 Loading data for STBA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for STBA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for STBA...

==================================================
Training Baseline STBA (SVM)
==================================================
Training SVM model...

Baseline STBA Performance:
MAE: 53363.5343
RMSE: 66789.8168
MAPE: 6.17%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 108
   • Highly important features (top 5%): 70

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_67_t3: importance=0.0002, rank=1
   2. Feature_89_t0: importance=0.0002, rank=2
   3. Feature_2_t2: importance=0.0002, rank=3
   4. Feature_87_t3: importance=0.0002, rank=4
   5. Feature_1_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for STBA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for STBA...

==================================================
Training Enhanced STBA (SVM)
==================================================
Training SVM model...

Enhanced STBA Performance:
MAE: 45278.3796
RMSE: 62601.8496
MAPE: 5.28%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 39
   • Highly important features (top 5%): 22

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0015, rank=1
   2. Feature_1_t3: importance=0.0015, rank=2
   3. Feature_1_t2: importance=0.0012, rank=3
   4. Feature_1_t0: importance=0.0005, rank=4
   5. Feature_11_t0: importance=0.0005, rank=5

📊 STBA Results:
  Baseline MAPE: 6.17%
  Enhanced MAPE: 5.28%
  MAPE Improvement: +0.88% (+14.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 395/464: STC
============================================================
📊 Loading data for STC...
📊 Loading data for STC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for STC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for STC...

==================================================
Training Baseline STC (SVM)
==================================================
Training SVM model...

Baseline STC Performance:
MAE: 120968.3779
RMSE: 205855.0849
MAPE: 18.42%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 239
   • Highly important features (top 5%): 137

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_76_t1: importance=0.0012, rank=1
   2. Feature_65_t2: importance=0.0011, rank=2
   3. Feature_96_t2: importance=0.0011, rank=3
   4. Feature_96_t0: importance=0.0010, rank=4
   5. Feature_74_t2: importance=0.0010, rank=5

🔧 Applying universal feature engineering for STC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for STC...

==================================================
Training Enhanced STC (SVM)
==================================================
Training SVM model...

Enhanced STC Performance:
MAE: 120844.4803
RMSE: 196775.6639
MAPE: 18.44%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 56
   • Highly important features (top 5%): 47

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0041, rank=1
   2. Feature_0_t3: importance=0.0036, rank=2
   3. Feature_1_t3: importance=0.0034, rank=3
   4. Feature_9_t3: importance=0.0027, rank=4
   5. Feature_0_t1: importance=0.0025, rank=5

📊 STC Results:
  Baseline MAPE: 18.42%
  Enhanced MAPE: 18.44%
  MAPE Improvement: -0.02% (-0.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 396/464: STRA
============================================================
📊 Loading data for STRA...
📊 Loading data for STRA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for STRA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for STRA...

==================================================
Training Baseline STRA (SVM)
==================================================
Training SVM model...

Baseline STRA Performance:
MAE: 47018.0453
RMSE: 62429.7982
MAPE: 10.96%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 232
   • Highly important features (top 5%): 88

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t3: importance=0.0005, rank=1
   2. Feature_71_t2: importance=0.0004, rank=2
   3. Feature_76_t3: importance=0.0003, rank=3
   4. Feature_72_t2: importance=0.0003, rank=4
   5. Feature_74_t0: importance=0.0003, rank=5

🔧 Applying universal feature engineering for STRA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for STRA...

==================================================
Training Enhanced STRA (SVM)
==================================================
Training SVM model...

Enhanced STRA Performance:
MAE: 63655.8657
RMSE: 77437.9269
MAPE: 15.38%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 27
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0035, rank=1
   2. Feature_2_t2: importance=0.0017, rank=2
   3. Feature_0_t1: importance=0.0010, rank=3
   4. Feature_2_t3: importance=0.0009, rank=4
   5. Feature_1_t3: importance=0.0007, rank=5

📊 STRA Results:
  Baseline MAPE: 10.96%
  Enhanced MAPE: 15.38%
  MAPE Improvement: -4.42% (-40.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 397/464: STRL
============================================================
📊 Loading data for STRL...
📊 Loading data for STRL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for STRL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for STRL...

==================================================
Training Baseline STRL (SVM)
==================================================
Training SVM model...

Baseline STRL Performance:
MAE: 163640.2970
RMSE: 261275.8337
MAPE: 9.70%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 290
   • Highly important features (top 5%): 101

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_81_t3: importance=0.0006, rank=1
   2. Feature_75_t3: importance=0.0006, rank=2
   3. Feature_82_t2: importance=0.0005, rank=3
   4. Feature_89_t0: importance=0.0004, rank=4
   5. Feature_2_t1: importance=0.0004, rank=5

🔧 Applying universal feature engineering for STRL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for STRL...

==================================================
Training Enhanced STRL (SVM)
==================================================
Training SVM model...

Enhanced STRL Performance:
MAE: 184106.6632
RMSE: 279641.6514
MAPE: 10.85%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 56
   • Highly important features (top 5%): 46

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0028, rank=1
   2. Feature_1_t1: importance=0.0016, rank=2
   3. Feature_2_t0: importance=0.0016, rank=3
   4. Feature_1_t0: importance=0.0014, rank=4
   5. Feature_0_t2: importance=0.0012, rank=5

📊 STRL Results:
  Baseline MAPE: 9.70%
  Enhanced MAPE: 10.85%
  MAPE Improvement: -1.14% (-11.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 398/464: SUPN
============================================================
📊 Loading data for SUPN...
📊 Loading data for SUPN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SUPN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SUPN...

==================================================
Training Baseline SUPN (SVM)
==================================================
Training SVM model...

Baseline SUPN Performance:
MAE: 310351.9922
RMSE: 391859.2410
MAPE: 6.01%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 248
   • Highly important features (top 5%): 116

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t2: importance=0.0001, rank=1
   2. Feature_65_t0: importance=0.0001, rank=2
   3. Feature_95_t1: importance=0.0001, rank=3
   4. Feature_0_t2: importance=0.0001, rank=4
   5. Feature_2_t1: importance=0.0001, rank=5

🔧 Applying universal feature engineering for SUPN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SUPN...

==================================================
Training Enhanced SUPN (SVM)
==================================================
Training SVM model...

Enhanced SUPN Performance:
MAE: 365980.9647
RMSE: 430277.7197
MAPE: 6.93%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 21

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0004, rank=1
   2. Feature_1_t0: importance=0.0004, rank=2
   3. Feature_2_t1: importance=0.0002, rank=3
   4. Feature_0_t0: importance=0.0002, rank=4
   5. Feature_1_t1: importance=0.0002, rank=5

📊 SUPN Results:
  Baseline MAPE: 6.01%
  Enhanced MAPE: 6.93%
  MAPE Improvement: -0.92% (-15.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 399/464: SXC
============================================================
📊 Loading data for SXC...
📊 Loading data for SXC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SXC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SXC...

==================================================
Training Baseline SXC (SVM)
==================================================
Training SVM model...

Baseline SXC Performance:
MAE: 537534.3858
RMSE: 777529.0739
MAPE: 15.80%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 276
   • Highly important features (top 5%): 113

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0013, rank=1
   2. Feature_90_t1: importance=0.0013, rank=2
   3. Feature_67_t1: importance=0.0011, rank=3
   4. Feature_92_t1: importance=0.0010, rank=4
   5. Feature_2_t3: importance=0.0010, rank=5

🔧 Applying universal feature engineering for SXC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SXC...

==================================================
Training Enhanced SXC (SVM)
==================================================
Training SVM model...

Enhanced SXC Performance:
MAE: 560080.2838
RMSE: 788925.6546
MAPE: 16.75%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 44
   • Highly important features (top 5%): 12

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0082, rank=1
   2. Feature_1_t0: importance=0.0065, rank=2
   3. Feature_2_t3: importance=0.0056, rank=3
   4. Feature_1_t3: importance=0.0049, rank=4
   5. Feature_2_t2: importance=0.0046, rank=5

📊 SXC Results:
  Baseline MAPE: 15.80%
  Enhanced MAPE: 16.75%
  MAPE Improvement: -0.95% (-6.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 400/464: SXI
============================================================
📊 Loading data for SXI...
📊 Loading data for SXI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SXI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SXI...

==================================================
Training Baseline SXI (SVM)
==================================================
Training SVM model...

Baseline SXI Performance:
MAE: 21691.0582
RMSE: 27764.2618
MAPE: 10.23%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 282
   • Highly important features (top 5%): 159

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0019, rank=1
   2. Feature_83_t3: importance=0.0011, rank=2
   3. Feature_2_t3: importance=0.0010, rank=3
   4. Feature_63_t3: importance=0.0010, rank=4
   5. Feature_65_t3: importance=0.0009, rank=5

🔧 Applying universal feature engineering for SXI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SXI...

==================================================
Training Enhanced SXI (SVM)
==================================================
Training SVM model...

Enhanced SXI Performance:
MAE: 39442.8918
RMSE: 44728.4590
MAPE: 17.18%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 55
   • Highly important features (top 5%): 38

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0077, rank=1
   2. Feature_2_t2: importance=0.0046, rank=2
   3. Feature_0_t2: importance=0.0034, rank=3
   4. Feature_7_t1: importance=0.0026, rank=4
   5. Feature_1_t1: importance=0.0021, rank=5

📊 SXI Results:
  Baseline MAPE: 10.23%
  Enhanced MAPE: 17.18%
  MAPE Improvement: -6.95% (-68.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 401/464: SXT
============================================================
📊 Loading data for SXT...
📊 Loading data for SXT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for SXT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for SXT...

==================================================
Training Baseline SXT (SVM)
==================================================
Training SVM model...

Baseline SXT Performance:
MAE: 84243.3650
RMSE: 127045.1486
MAPE: 10.68%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 322
   • Highly important features (top 5%): 191

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0012, rank=1
   2. Feature_63_t2: importance=0.0003, rank=2
   3. Feature_63_t0: importance=0.0003, rank=3
   4. Feature_81_t2: importance=0.0003, rank=4
   5. Feature_72_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for SXT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for SXT...

==================================================
Training Enhanced SXT (SVM)
==================================================
Training SVM model...

Enhanced SXT Performance:
MAE: 98903.1216
RMSE: 163946.6567
MAPE: 11.46%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 54
   • Highly important features (top 5%): 43

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0021, rank=1
   2. Feature_1_t1: importance=0.0019, rank=2
   3. Feature_1_t3: importance=0.0018, rank=3
   4. Feature_13_t3: importance=0.0011, rank=4
   5. Feature_1_t0: importance=0.0011, rank=5

📊 SXT Results:
  Baseline MAPE: 10.68%
  Enhanced MAPE: 11.46%
  MAPE Improvement: -0.78% (-7.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 402/464: TBBK
============================================================
📊 Loading data for TBBK...
📊 Loading data for TBBK from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for TBBK...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for TBBK...

==================================================
Training Baseline TBBK (SVM)
==================================================
Training SVM model...

Baseline TBBK Performance:
MAE: 313424.0936
RMSE: 379319.7253
MAPE: 5.25%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 183
   • Highly important features (top 5%): 81

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_76_t3: importance=0.0008, rank=1
   2. Feature_76_t2: importance=0.0008, rank=2
   3. Feature_89_t3: importance=0.0005, rank=3
   4. Feature_74_t3: importance=0.0005, rank=4
   5. Feature_90_t1: importance=0.0005, rank=5

🔧 Applying universal feature engineering for TBBK...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for TBBK...

==================================================
Training Enhanced TBBK (SVM)
==================================================
Training SVM model...

Enhanced TBBK Performance:
MAE: 290859.8366
RMSE: 383525.4866
MAPE: 5.06%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 26

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0025, rank=1
   2. Feature_1_t1: importance=0.0013, rank=2
   3. Feature_0_t2: importance=0.0012, rank=3
   4. Feature_2_t3: importance=0.0011, rank=4
   5. Feature_11_t0: importance=0.0009, rank=5

📊 TBBK Results:
  Baseline MAPE: 5.25%
  Enhanced MAPE: 5.06%
  MAPE Improvement: +0.19% (+3.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 403/464: TDC
============================================================
📊 Loading data for TDC...
📊 Loading data for TDC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for TDC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for TDC...

==================================================
Training Baseline TDC (SVM)
==================================================
Training SVM model...

Baseline TDC Performance:
MAE: 352950.0881
RMSE: 461073.0540
MAPE: 9.13%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 238
   • Highly important features (top 5%): 148

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t3: importance=0.0005, rank=1
   2. Feature_65_t2: importance=0.0003, rank=2
   3. Feature_69_t3: importance=0.0002, rank=3
   4. Feature_75_t3: importance=0.0002, rank=4
   5. Feature_8_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for TDC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for TDC...

==================================================
Training Enhanced TDC (SVM)
==================================================
Training SVM model...

Enhanced TDC Performance:
MAE: 313792.1544
RMSE: 400285.8601
MAPE: 8.47%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0015, rank=1
   2. Feature_8_t3: importance=0.0008, rank=2
   3. Feature_1_t3: importance=0.0007, rank=3
   4. Feature_3_t3: importance=0.0005, rank=4
   5. Feature_1_t0: importance=0.0005, rank=5

📊 TDC Results:
  Baseline MAPE: 9.13%
  Enhanced MAPE: 8.47%
  MAPE Improvement: +0.66% (+7.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 404/464: TDS
============================================================
📊 Loading data for TDS...
📊 Loading data for TDS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing TDS: 'TDS'

============================================================
TESTING TICKER 405/464: TDW
============================================================
📊 Loading data for TDW...
📊 Loading data for TDW from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for TDW...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for TDW...

==================================================
Training Baseline TDW (SVM)
==================================================
Training SVM model...

Baseline TDW Performance:
MAE: 401722.6307
RMSE: 495442.0127
MAPE: 7.40%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 137
   • Highly important features (top 5%): 46

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0006, rank=1
   2. Feature_65_t0: importance=0.0005, rank=2
   3. Feature_67_t3: importance=0.0004, rank=3
   4. Feature_68_t0: importance=0.0003, rank=4
   5. Feature_91_t0: importance=0.0003, rank=5

🔧 Applying universal feature engineering for TDW...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for TDW...

==================================================
Training Enhanced TDW (SVM)
==================================================
Training SVM model...

Enhanced TDW Performance:
MAE: 384127.1928
RMSE: 488807.8081
MAPE: 7.11%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 20
   • Highly important features (top 5%): 9

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0025, rank=1
   2. Feature_0_t3: importance=0.0021, rank=2
   3. Feature_2_t1: importance=0.0013, rank=3
   4. Feature_2_t3: importance=0.0012, rank=4
   5. Feature_2_t2: importance=0.0012, rank=5

📊 TDW Results:
  Baseline MAPE: 7.40%
  Enhanced MAPE: 7.11%
  MAPE Improvement: +0.29% (+3.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 406/464: TFX
============================================================
📊 Loading data for TFX...
📊 Loading data for TFX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for TFX...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for TFX...

==================================================
Training Baseline TFX (SVM)
==================================================
Training SVM model...

Baseline TFX Performance:
MAE: 198649.0016
RMSE: 332601.8244
MAPE: 20.91%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 356
   • Highly important features (top 5%): 220

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_96_t3: importance=0.0006, rank=1
   2. Feature_78_t3: importance=0.0003, rank=2
   3. Feature_64_t1: importance=0.0003, rank=3
   4. Feature_95_t2: importance=0.0002, rank=4
   5. Feature_72_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for TFX...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for TFX...

==================================================
Training Enhanced TFX (SVM)
==================================================
Training SVM model...

Enhanced TFX Performance:
MAE: 233663.9314
RMSE: 366676.8580
MAPE: 27.28%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 53
   • Highly important features (top 5%): 33

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0029, rank=1
   2. Feature_2_t3: importance=0.0018, rank=2
   3. Feature_0_t2: importance=0.0017, rank=3
   4. Feature_11_t1: importance=0.0015, rank=4
   5. Feature_0_t0: importance=0.0015, rank=5

📊 TFX Results:
  Baseline MAPE: 20.91%
  Enhanced MAPE: 27.28%
  MAPE Improvement: -6.37% (-30.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 407/464: TGNA
============================================================
📊 Loading data for TGNA...
📊 Loading data for TGNA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for TGNA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for TGNA...

==================================================
Training Baseline TGNA (SVM)
==================================================
Training SVM model...

Baseline TGNA Performance:
MAE: 880329.2902
RMSE: 1149203.5960
MAPE: 11.06%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 247
   • Highly important features (top 5%): 117

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t1: importance=0.0011, rank=1
   2. Feature_66_t2: importance=0.0010, rank=2
   3. Feature_93_t1: importance=0.0010, rank=3
   4. Feature_73_t1: importance=0.0009, rank=4
   5. Feature_91_t1: importance=0.0008, rank=5

🔧 Applying universal feature engineering for TGNA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for TGNA...

==================================================
Training Enhanced TGNA (SVM)
==================================================
Training SVM model...

Enhanced TGNA Performance:
MAE: 803995.4395
RMSE: 1070342.8043
MAPE: 10.96%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 54
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0043, rank=1
   2. Feature_0_t3: importance=0.0031, rank=2
   3. Feature_6_t2: importance=0.0024, rank=3
   4. Feature_1_t1: importance=0.0019, rank=4
   5. Feature_1_t2: importance=0.0018, rank=5

📊 TGNA Results:
  Baseline MAPE: 11.06%
  Enhanced MAPE: 10.96%
  MAPE Improvement: +0.11% (+1.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 408/464: TGTX
============================================================
📊 Loading data for TGTX...
📊 Loading data for TGTX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing TGTX: 'TGTX'

============================================================
TESTING TICKER 409/464: THRM
============================================================
📊 Loading data for THRM...
📊 Loading data for THRM from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for THRM...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for THRM...

==================================================
Training Baseline THRM (SVM)
==================================================
Training SVM model...

Baseline THRM Performance:
MAE: 100622.6494
RMSE: 135658.6105
MAPE: 10.51%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 238
   • Highly important features (top 5%): 133

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_92_t1: importance=0.0003, rank=1
   2. Feature_76_t1: importance=0.0002, rank=2
   3. Feature_63_t0: importance=0.0002, rank=3
   4. Feature_65_t0: importance=0.0002, rank=4
   5. Feature_92_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for THRM...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for THRM...

==================================================
Training Enhanced THRM (SVM)
==================================================
Training SVM model...

Enhanced THRM Performance:
MAE: 93643.1140
RMSE: 123075.0206
MAPE: 10.06%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 40
   • Highly important features (top 5%): 25

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0034, rank=1
   2. Feature_1_t2: importance=0.0016, rank=2
   3. Feature_2_t1: importance=0.0012, rank=3
   4. Feature_1_t3: importance=0.0011, rank=4
   5. Feature_2_t3: importance=0.0010, rank=5

📊 THRM Results:
  Baseline MAPE: 10.51%
  Enhanced MAPE: 10.06%
  MAPE Improvement: +0.45% (+4.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 410/464: THS
============================================================
📊 Loading data for THS...
📊 Loading data for THS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for THS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for THS...

==================================================
Training Baseline THS (SVM)
==================================================
Training SVM model...

Baseline THS Performance:
MAE: 208396.1000
RMSE: 306211.0807
MAPE: 9.65%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 201
   • Highly important features (top 5%): 98

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_96_t0: importance=0.0002, rank=1
   2. Feature_64_t3: importance=0.0002, rank=2
   3. Feature_72_t0: importance=0.0002, rank=3
   4. Feature_93_t0: importance=0.0002, rank=4
   5. Feature_74_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for THS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for THS...

==================================================
Training Enhanced THS (SVM)
==================================================
Training SVM model...

Enhanced THS Performance:
MAE: 207571.4861
RMSE: 315311.4272
MAPE: 9.53%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 40

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_6_t3: importance=0.0007, rank=1
   2. Feature_5_t3: importance=0.0006, rank=2
   3. Feature_1_t3: importance=0.0006, rank=3
   4. Feature_2_t0: importance=0.0005, rank=4
   5. Feature_1_t2: importance=0.0004, rank=5

📊 THS Results:
  Baseline MAPE: 9.65%
  Enhanced MAPE: 9.53%
  MAPE Improvement: +0.12% (+1.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 411/464: TILE
============================================================
📊 Loading data for TILE...
📊 Loading data for TILE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for TILE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for TILE...

==================================================
Training Baseline TILE (SVM)
==================================================
Training SVM model...

Baseline TILE Performance:
MAE: 299405.3101
RMSE: 452594.5467
MAPE: 17.19%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 322
   • Highly important features (top 5%): 114

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_69_t3: importance=0.0005, rank=1
   2. Feature_73_t3: importance=0.0005, rank=2
   3. Feature_80_t3: importance=0.0005, rank=3
   4. Feature_81_t0: importance=0.0005, rank=4
   5. Feature_2_t1: importance=0.0005, rank=5

🔧 Applying universal feature engineering for TILE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for TILE...

==================================================
Training Enhanced TILE (SVM)
==================================================
Training SVM model...

Enhanced TILE Performance:
MAE: 317186.9930
RMSE: 475329.0155
MAPE: 16.95%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 24

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0049, rank=1
   2. Feature_1_t0: importance=0.0029, rank=2
   3. Feature_2_t0: importance=0.0021, rank=3
   4. Feature_2_t2: importance=0.0019, rank=4
   5. Feature_0_t2: importance=0.0017, rank=5

📊 TILE Results:
  Baseline MAPE: 17.19%
  Enhanced MAPE: 16.95%
  MAPE Improvement: +0.24% (+1.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 412/464: TMP
============================================================
📊 Loading data for TMP...
📊 Loading data for TMP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for TMP...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for TMP...

==================================================
Training Baseline TMP (SVM)
==================================================
Training SVM model...

Baseline TMP Performance:
MAE: 18171.9398
RMSE: 25998.7156
MAPE: 11.30%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 262
   • Highly important features (top 5%): 138

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_68_t3: importance=0.0001, rank=1
   2. Feature_63_t0: importance=0.0000, rank=2
   3. Feature_67_t3: importance=0.0000, rank=3
   4. Feature_65_t3: importance=0.0000, rank=4
   5. Feature_78_t0: importance=0.0000, rank=5

🔧 Applying universal feature engineering for TMP...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for TMP...

==================================================
Training Enhanced TMP (SVM)
==================================================
Training SVM model...

Enhanced TMP Performance:
MAE: 18997.4214
RMSE: 27629.8108
MAPE: 11.67%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 34
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0002, rank=1
   2. Feature_1_t3: importance=0.0002, rank=2
   3. Feature_0_t2: importance=0.0001, rank=3
   4. Feature_2_t3: importance=0.0001, rank=4
   5. Feature_6_t3: importance=0.0001, rank=5

📊 TMP Results:
  Baseline MAPE: 11.30%
  Enhanced MAPE: 11.67%
  MAPE Improvement: -0.37% (-3.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 413/464: TNC
============================================================
📊 Loading data for TNC...
📊 Loading data for TNC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for TNC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for TNC...

==================================================
Training Baseline TNC (SVM)
==================================================
Training SVM model...

Baseline TNC Performance:
MAE: 45614.9268
RMSE: 54698.1568
MAPE: 9.71%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 197
   • Highly important features (top 5%): 98

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_83_t0: importance=0.0004, rank=1
   2. Feature_82_t1: importance=0.0002, rank=2
   3. Feature_89_t3: importance=0.0002, rank=3
   4. Feature_69_t3: importance=0.0002, rank=4
   5. Feature_88_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for TNC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for TNC...

==================================================
Training Enhanced TNC (SVM)
==================================================
Training SVM model...

Enhanced TNC Performance:
MAE: 47491.7624
RMSE: 58525.4112
MAPE: 10.14%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 29

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0019, rank=1
   2. Feature_2_t1: importance=0.0012, rank=2
   3. Feature_2_t0: importance=0.0009, rank=3
   4. Feature_1_t2: importance=0.0009, rank=4
   5. Feature_1_t1: importance=0.0009, rank=5

📊 TNC Results:
  Baseline MAPE: 9.71%
  Enhanced MAPE: 10.14%
  MAPE Improvement: -0.44% (-4.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 414/464: TNDM
============================================================
📊 Loading data for TNDM...
📊 Loading data for TNDM from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing TNDM: 'TNDM'

============================================================
TESTING TICKER 415/464: TPH
============================================================
📊 Loading data for TPH...
📊 Loading data for TPH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for TPH...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for TPH...

==================================================
Training Baseline TPH (SVM)
==================================================
Training SVM model...

Baseline TPH Performance:
MAE: 361869.4167
RMSE: 586052.8506
MAPE: 13.69%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 181
   • Highly important features (top 5%): 93

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_64_t0: importance=0.0003, rank=1
   2. Feature_65_t0: importance=0.0002, rank=2
   3. Feature_89_t0: importance=0.0002, rank=3
   4. Feature_92_t2: importance=0.0002, rank=4
   5. Feature_65_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for TPH...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for TPH...

==================================================
Training Enhanced TPH (SVM)
==================================================
Training SVM model...

Enhanced TPH Performance:
MAE: 360645.4850
RMSE: 589970.9911
MAPE: 13.84%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 45
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0011, rank=1
   2. Feature_1_t0: importance=0.0009, rank=2
   3. Feature_4_t3: importance=0.0007, rank=3
   4. Feature_6_t3: importance=0.0007, rank=4
   5. Feature_5_t2: importance=0.0005, rank=5

📊 TPH Results:
  Baseline MAPE: 13.69%
  Enhanced MAPE: 13.84%
  MAPE Improvement: -0.15% (-1.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 416/464: TR
============================================================
📊 Loading data for TR...
📊 Loading data for TR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing TR: 'TR'

============================================================
TESTING TICKER 417/464: TRIP
============================================================
📊 Loading data for TRIP...
📊 Loading data for TRIP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for TRIP...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for TRIP...

==================================================
Training Baseline TRIP (SVM)
==================================================
Training SVM model...

Baseline TRIP Performance:
MAE: 1099244.5358
RMSE: 1868842.2794
MAPE: 11.24%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 116
   • Highly important features (top 5%): 49

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_81_t1: importance=0.0008, rank=1
   2. Feature_0_t3: importance=0.0008, rank=2
   3. Feature_79_t0: importance=0.0006, rank=3
   4. Feature_91_t2: importance=0.0005, rank=4
   5. Feature_63_t0: importance=0.0004, rank=5

🔧 Applying universal feature engineering for TRIP...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for TRIP...

==================================================
Training Enhanced TRIP (SVM)
==================================================
Training SVM model...

Enhanced TRIP Performance:
MAE: 1128782.7649
RMSE: 1694716.3191
MAPE: 12.15%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 18
   • Highly important features (top 5%): 7

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0030, rank=1
   2. Feature_1_t1: importance=0.0023, rank=2
   3. Feature_1_t0: importance=0.0015, rank=3
   4. Feature_0_t1: importance=0.0009, rank=4
   5. Feature_0_t0: importance=0.0008, rank=5

📊 TRIP Results:
  Baseline MAPE: 11.24%
  Enhanced MAPE: 12.15%
  MAPE Improvement: -0.91% (-8.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 418/464: TRMK
============================================================
📊 Loading data for TRMK...
📊 Loading data for TRMK from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for TRMK...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for TRMK...

==================================================
Training Baseline TRMK (SVM)
==================================================
Training SVM model...

Baseline TRMK Performance:
MAE: 122761.6343
RMSE: 153020.8154
MAPE: 7.81%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 183
   • Highly important features (top 5%): 88

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_89_t2: importance=0.0004, rank=1
   2. Feature_87_t2: importance=0.0003, rank=2
   3. Feature_83_t2: importance=0.0003, rank=3
   4. Feature_90_t1: importance=0.0003, rank=4
   5. Feature_84_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for TRMK...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for TRMK...

==================================================
Training Enhanced TRMK (SVM)
==================================================
Training SVM model...

Enhanced TRMK Performance:
MAE: 132964.7413
RMSE: 169034.3582
MAPE: 8.35%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 39

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0009, rank=1
   2. Feature_1_t2: importance=0.0008, rank=2
   3. Feature_1_t3: importance=0.0007, rank=3
   4. Feature_1_t0: importance=0.0006, rank=4
   5. Feature_0_t1: importance=0.0005, rank=5

📊 TRMK Results:
  Baseline MAPE: 7.81%
  Enhanced MAPE: 8.35%
  MAPE Improvement: -0.54% (-6.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 419/464: TRN
============================================================
📊 Loading data for TRN...
📊 Loading data for TRN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for TRN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for TRN...

==================================================
Training Baseline TRN (SVM)
==================================================
Training SVM model...

Baseline TRN Performance:
MAE: 192780.5683
RMSE: 275954.9701
MAPE: 9.43%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 228
   • Highly important features (top 5%): 146

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_78_t2: importance=0.0008, rank=1
   2. Feature_71_t1: importance=0.0007, rank=2
   3. Feature_94_t3: importance=0.0005, rank=3
   4. Feature_77_t2: importance=0.0005, rank=4
   5. Feature_93_t0: importance=0.0004, rank=5

🔧 Applying universal feature engineering for TRN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for TRN...

==================================================
Training Enhanced TRN (SVM)
==================================================
Training SVM model...

Enhanced TRN Performance:
MAE: 181167.9387
RMSE: 258658.7931
MAPE: 8.86%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 37

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0025, rank=1
   2. Feature_1_t3: importance=0.0019, rank=2
   3. Feature_12_t1: importance=0.0018, rank=3
   4. Feature_6_t0: importance=0.0017, rank=4
   5. Feature_13_t0: importance=0.0016, rank=5

📊 TRN Results:
  Baseline MAPE: 9.43%
  Enhanced MAPE: 8.86%
  MAPE Improvement: +0.57% (+6.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 420/464: TRNO
============================================================
📊 Loading data for TRNO...
📊 Loading data for TRNO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing TRNO: 'TRNO'

============================================================
TESTING TICKER 421/464: TRST
============================================================
📊 Loading data for TRST...
📊 Loading data for TRST from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing TRST: 'TRST'

============================================================
TESTING TICKER 422/464: TRUP
============================================================
📊 Loading data for TRUP...
📊 Loading data for TRUP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing TRUP: 'TRUP'

============================================================
TESTING TICKER 423/464: TTMI
============================================================
📊 Loading data for TTMI...
📊 Loading data for TTMI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for TTMI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for TTMI...

==================================================
Training Baseline TTMI (SVM)
==================================================
Training SVM model...

Baseline TTMI Performance:
MAE: 271021.2536
RMSE: 355235.8840
MAPE: 14.03%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 131
   • Highly important features (top 5%): 59

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t0: importance=0.0004, rank=1
   2. Feature_85_t0: importance=0.0003, rank=2
   3. Feature_88_t1: importance=0.0003, rank=3
   4. Feature_72_t3: importance=0.0003, rank=4
   5. Feature_74_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for TTMI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for TTMI...

==================================================
Training Enhanced TTMI (SVM)
==================================================
Training SVM model...

Enhanced TTMI Performance:
MAE: 265108.9702
RMSE: 351975.5471
MAPE: 13.70%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 55
   • Highly important features (top 5%): 36

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0011, rank=1
   2. Feature_1_t0: importance=0.0010, rank=2
   3. Feature_0_t2: importance=0.0007, rank=3
   4. Feature_0_t0: importance=0.0007, rank=4
   5. Feature_6_t0: importance=0.0006, rank=5

📊 TTMI Results:
  Baseline MAPE: 14.03%
  Enhanced MAPE: 13.70%
  MAPE Improvement: +0.33% (+2.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 424/464: TWI
============================================================
📊 Loading data for TWI...
📊 Loading data for TWI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for TWI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for TWI...

==================================================
Training Baseline TWI (SVM)
==================================================
Training SVM model...

Baseline TWI Performance:
MAE: 344084.1546
RMSE: 447360.9805
MAPE: 9.77%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 172
   • Highly important features (top 5%): 104

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0008, rank=1
   2. Feature_64_t0: importance=0.0007, rank=2
   3. Feature_63_t2: importance=0.0006, rank=3
   4. Feature_2_t3: importance=0.0005, rank=4
   5. Feature_2_t1: importance=0.0004, rank=5

🔧 Applying universal feature engineering for TWI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for TWI...

==================================================
Training Enhanced TWI (SVM)
==================================================
Training SVM model...

Enhanced TWI Performance:
MAE: 308520.2728
RMSE: 409185.5522
MAPE: 8.62%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 25

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0035, rank=1
   2. Feature_2_t3: importance=0.0021, rank=2
   3. Feature_2_t1: importance=0.0014, rank=3
   4. Feature_1_t2: importance=0.0014, rank=4
   5. Feature_1_t0: importance=0.0013, rank=5

📊 TWI Results:
  Baseline MAPE: 9.77%
  Enhanced MAPE: 8.62%
  MAPE Improvement: +1.15% (+11.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 425/464: TWO
============================================================
📊 Loading data for TWO...
📊 Loading data for TWO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for TWO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for TWO...

==================================================
Training Baseline TWO (SVM)
==================================================
Training SVM model...

Baseline TWO Performance:
MAE: 468058.6938
RMSE: 626515.4170
MAPE: 12.41%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 265
   • Highly important features (top 5%): 141

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t1: importance=0.0015, rank=1
   2. Feature_2_t2: importance=0.0014, rank=2
   3. Feature_91_t3: importance=0.0012, rank=3
   4. Feature_71_t3: importance=0.0009, rank=4
   5. Feature_73_t1: importance=0.0008, rank=5

🔧 Applying universal feature engineering for TWO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for TWO...

==================================================
Training Enhanced TWO (SVM)
==================================================
Training SVM model...

Enhanced TWO Performance:
MAE: 520094.9526
RMSE: 721165.3360
MAPE: 12.91%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 24

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0066, rank=1
   2. Feature_1_t2: importance=0.0032, rank=2
   3. Feature_2_t1: importance=0.0028, rank=3
   4. Feature_0_t3: importance=0.0026, rank=4
   5. Feature_2_t3: importance=0.0023, rank=5

📊 TWO Results:
  Baseline MAPE: 12.41%
  Enhanced MAPE: 12.91%
  MAPE Improvement: -0.50% (-4.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 426/464: UCTT
============================================================
📊 Loading data for UCTT...
📊 Loading data for UCTT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for UCTT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for UCTT...

==================================================
Training Baseline UCTT (SVM)
==================================================
Training SVM model...

Baseline UCTT Performance:
MAE: 88957.2230
RMSE: 104588.2068
MAPE: 9.38%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 186
   • Highly important features (top 5%): 102

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_75_t3: importance=0.0002, rank=1
   2. Feature_64_t1: importance=0.0002, rank=2
   3. Feature_82_t1: importance=0.0002, rank=3
   4. Feature_65_t1: importance=0.0002, rank=4
   5. Feature_84_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for UCTT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for UCTT...

==================================================
Training Enhanced UCTT (SVM)
==================================================
Training SVM model...

Enhanced UCTT Performance:
MAE: 87377.6315
RMSE: 102939.6592
MAPE: 9.32%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 37
   • Highly important features (top 5%): 28

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0011, rank=1
   2. Feature_2_t3: importance=0.0010, rank=2
   3. Feature_6_t2: importance=0.0007, rank=3
   4. Feature_6_t3: importance=0.0007, rank=4
   5. Feature_2_t2: importance=0.0007, rank=5

📊 UCTT Results:
  Baseline MAPE: 9.38%
  Enhanced MAPE: 9.32%
  MAPE Improvement: +0.06% (+0.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 427/464: UE
============================================================
📊 Loading data for UE...
📊 Loading data for UE from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for UE...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for UE...

==================================================
Training Baseline UE (SVM)
==================================================
Training SVM model...

Baseline UE Performance:
MAE: 398008.7505
RMSE: 534317.6040
MAPE: 12.18%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 247
   • Highly important features (top 5%): 121

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_79_t2: importance=0.0006, rank=1
   2. Feature_2_t2: importance=0.0004, rank=2
   3. Feature_0_t3: importance=0.0003, rank=3
   4. Feature_85_t0: importance=0.0003, rank=4
   5. Feature_79_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for UE...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for UE...

==================================================
Training Enhanced UE (SVM)
==================================================
Training SVM model...

Enhanced UE Performance:
MAE: 420404.8844
RMSE: 545811.0346
MAPE: 12.95%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 49
   • Highly important features (top 5%): 36

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0015, rank=1
   2. Feature_14_t0: importance=0.0012, rank=2
   3. Feature_0_t3: importance=0.0011, rank=3
   4. Feature_0_t1: importance=0.0008, rank=4
   5. Feature_2_t3: importance=0.0007, rank=5

📊 UE Results:
  Baseline MAPE: 12.18%
  Enhanced MAPE: 12.95%
  MAPE Improvement: -0.76% (-6.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 428/464: UFCS
============================================================
📊 Loading data for UFCS...
📊 Loading data for UFCS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for UFCS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for UFCS...

==================================================
Training Baseline UFCS (SVM)
==================================================
Training SVM model...

Baseline UFCS Performance:
MAE: 44650.5961
RMSE: 61140.7764
MAPE: 14.85%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 286
   • Highly important features (top 5%): 163

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t3: importance=0.0012, rank=1
   2. Feature_0_t3: importance=0.0012, rank=2
   3. Feature_65_t2: importance=0.0011, rank=3
   4. Feature_1_t3: importance=0.0007, rank=4
   5. Feature_78_t3: importance=0.0005, rank=5

🔧 Applying universal feature engineering for UFCS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for UFCS...

==================================================
Training Enhanced UFCS (SVM)
==================================================
Training SVM model...

Enhanced UFCS Performance:
MAE: 54888.5176
RMSE: 72989.7707
MAPE: 17.21%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 49
   • Highly important features (top 5%): 25

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0058, rank=1
   2. Feature_1_t3: importance=0.0040, rank=2
   3. Feature_2_t1: importance=0.0033, rank=3
   4. Feature_0_t1: importance=0.0022, rank=4
   5. Feature_1_t1: importance=0.0022, rank=5

📊 UFCS Results:
  Baseline MAPE: 14.85%
  Enhanced MAPE: 17.21%
  MAPE Improvement: -2.36% (-15.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 429/464: UFPT
============================================================
📊 Loading data for UFPT...
📊 Loading data for UFPT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing UFPT: 'UFPT'

============================================================
TESTING TICKER 430/464: UHT
============================================================
📊 Loading data for UHT...
📊 Loading data for UHT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for UHT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for UHT...

==================================================
Training Baseline UHT (SVM)
==================================================
Training SVM model...

Baseline UHT Performance:
MAE: 45317.8931
RMSE: 69960.4770
MAPE: 27.03%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 162
   • Highly important features (top 5%): 79

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_94_t1: importance=0.0010, rank=1
   2. Feature_91_t0: importance=0.0010, rank=2
   3. Feature_82_t3: importance=0.0009, rank=3
   4. Feature_65_t3: importance=0.0008, rank=4
   5. Feature_63_t0: importance=0.0008, rank=5

🔧 Applying universal feature engineering for UHT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
⚠️ Some errors in feature engineering: 3 train, 0 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for UHT...

==================================================
Training Enhanced UHT (SVM)
==================================================
Training SVM model...
❌ Error testing UHT: X has 100 features, but StandardScaler is expecting 60 features as input.

============================================================
TESTING TICKER 431/464: UNF
============================================================
📊 Loading data for UNF...
📊 Loading data for UNF from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for UNF...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for UNF...

==================================================
Training Baseline UNF (SVM)
==================================================
Training SVM model...

Baseline UNF Performance:
MAE: 25147.2406
RMSE: 31746.6607
MAPE: 15.10%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 304
   • Highly important features (top 5%): 138

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_65_t2: importance=0.0007, rank=1
   2. Feature_75_t0: importance=0.0006, rank=2
   3. Feature_96_t2: importance=0.0005, rank=3
   4. Feature_92_t3: importance=0.0005, rank=4
   5. Feature_96_t0: importance=0.0005, rank=5

🔧 Applying universal feature engineering for UNF...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for UNF...

==================================================
Training Enhanced UNF (SVM)
==================================================
Training SVM model...

Enhanced UNF Performance:
MAE: 24664.2150
RMSE: 33953.8522
MAPE: 14.92%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 50
   • Highly important features (top 5%): 26

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t0: importance=0.0040, rank=1
   2. Feature_0_t3: importance=0.0031, rank=2
   3. Feature_0_t1: importance=0.0017, rank=3
   4. Feature_2_t0: importance=0.0017, rank=4
   5. Feature_5_t0: importance=0.0017, rank=5

📊 UNF Results:
  Baseline MAPE: 15.10%
  Enhanced MAPE: 14.92%
  MAPE Improvement: +0.18% (+1.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 432/464: UNFI
============================================================
📊 Loading data for UNFI...
📊 Loading data for UNFI from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for UNFI...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for UNFI...

==================================================
Training Baseline UNFI (SVM)
==================================================
Training SVM model...

Baseline UNFI Performance:
MAE: 257333.5577
RMSE: 329559.2710
MAPE: 6.88%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 209
   • Highly important features (top 5%): 128

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_64_t3: importance=0.0004, rank=1
   2. Feature_1_t3: importance=0.0003, rank=2
   3. Feature_91_t2: importance=0.0002, rank=3
   4. Feature_2_t1: importance=0.0002, rank=4
   5. Feature_93_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for UNFI...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for UNFI...

==================================================
Training Enhanced UNFI (SVM)
==================================================
Training SVM model...

Enhanced UNFI Performance:
MAE: 268354.3849
RMSE: 345699.6859
MAPE: 7.25%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 47
   • Highly important features (top 5%): 35

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0014, rank=1
   2. Feature_0_t3: importance=0.0012, rank=2
   3. Feature_2_t2: importance=0.0008, rank=3
   4. Feature_4_t3: importance=0.0006, rank=4
   5. Feature_1_t0: importance=0.0006, rank=5

📊 UNFI Results:
  Baseline MAPE: 6.88%
  Enhanced MAPE: 7.25%
  MAPE Improvement: -0.37% (-5.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 433/464: UNIT
============================================================
📊 Loading data for UNIT...
📊 Loading data for UNIT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing UNIT: 'UNIT'

============================================================
TESTING TICKER 434/464: URBN
============================================================
📊 Loading data for URBN...
📊 Loading data for URBN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for URBN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for URBN...

==================================================
Training Baseline URBN (SVM)
==================================================
Training SVM model...

Baseline URBN Performance:
MAE: 741180.7655
RMSE: 914771.6506
MAPE: 13.19%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 310
   • Highly important features (top 5%): 151

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_83_t2: importance=0.0004, rank=1
   2. Feature_2_t2: importance=0.0004, rank=2
   3. Feature_86_t1: importance=0.0003, rank=3
   4. Feature_69_t0: importance=0.0003, rank=4
   5. Feature_0_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for URBN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for URBN...

==================================================
Training Enhanced URBN (SVM)
==================================================
Training SVM model...

Enhanced URBN Performance:
MAE: 845450.7412
RMSE: 1034870.7775
MAPE: 14.66%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 47
   • Highly important features (top 5%): 33

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0022, rank=1
   2. Feature_0_t2: importance=0.0021, rank=2
   3. Feature_1_t3: importance=0.0020, rank=3
   4. Feature_2_t1: importance=0.0019, rank=4
   5. Feature_2_t2: importance=0.0014, rank=5

📊 URBN Results:
  Baseline MAPE: 13.19%
  Enhanced MAPE: 14.66%
  MAPE Improvement: -1.47% (-11.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 435/464: USNA
============================================================
📊 Loading data for USNA...
📊 Loading data for USNA from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for USNA...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for USNA...

==================================================
Training Baseline USNA (SVM)
==================================================
Training SVM model...

Baseline USNA Performance:
MAE: 48426.0414
RMSE: 66251.4668
MAPE: 9.72%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 306
   • Highly important features (top 5%): 212

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_84_t3: importance=0.0008, rank=1
   2. Feature_83_t3: importance=0.0005, rank=2
   3. Feature_81_t3: importance=0.0004, rank=3
   4. Feature_84_t2: importance=0.0004, rank=4
   5. Feature_83_t2: importance=0.0003, rank=5

🔧 Applying universal feature engineering for USNA...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for USNA...

==================================================
Training Enhanced USNA (SVM)
==================================================
Training SVM model...

Enhanced USNA Performance:
MAE: 48762.7050
RMSE: 66662.3013
MAPE: 9.80%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 38
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0025, rank=1
   2. Feature_2_t3: importance=0.0024, rank=2
   3. Feature_1_t1: importance=0.0021, rank=3
   4. Feature_1_t3: importance=0.0021, rank=4
   5. Feature_2_t0: importance=0.0018, rank=5

📊 USNA Results:
  Baseline MAPE: 9.72%
  Enhanced MAPE: 9.80%
  MAPE Improvement: -0.08% (-0.8%)
  Features: 97 -> 15

============================================================
TESTING TICKER 436/464: USPH
============================================================
📊 Loading data for USPH...
📊 Loading data for USPH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for USPH...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for USPH...

==================================================
Training Baseline USPH (SVM)
==================================================
Training SVM model...

Baseline USPH Performance:
MAE: 43929.8124
RMSE: 54768.8675
MAPE: 7.68%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 165
   • Highly important features (top 5%): 89

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0002, rank=1
   2. Feature_75_t2: importance=0.0001, rank=2
   3. Feature_2_t3: importance=0.0001, rank=3
   4. Feature_70_t0: importance=0.0001, rank=4
   5. Feature_2_t2: importance=0.0001, rank=5

🔧 Applying universal feature engineering for USPH...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for USPH...

==================================================
Training Enhanced USPH (SVM)
==================================================
Training SVM model...

Enhanced USPH Performance:
MAE: 48948.7934
RMSE: 61523.2208
MAPE: 8.97%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 34
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t0: importance=0.0003, rank=1
   2. Feature_1_t3: importance=0.0003, rank=2
   3. Feature_2_t3: importance=0.0003, rank=3
   4. Feature_1_t1: importance=0.0002, rank=4
   5. Feature_0_t3: importance=0.0002, rank=5

📊 USPH Results:
  Baseline MAPE: 7.68%
  Enhanced MAPE: 8.97%
  MAPE Improvement: -1.28% (-16.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 437/464: UTL
============================================================
📊 Loading data for UTL...
📊 Loading data for UTL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for UTL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for UTL...

==================================================
Training Baseline UTL (SVM)
==================================================
Training SVM model...

Baseline UTL Performance:
MAE: 25442.0507
RMSE: 34227.5092
MAPE: 15.10%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 322
   • Highly important features (top 5%): 163

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0011, rank=1
   2. Feature_85_t1: importance=0.0009, rank=2
   3. Feature_86_t3: importance=0.0008, rank=3
   4. Feature_83_t3: importance=0.0008, rank=4
   5. Feature_69_t3: importance=0.0008, rank=5

🔧 Applying universal feature engineering for UTL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for UTL...

==================================================
Training Enhanced UTL (SVM)
==================================================
Training SVM model...

Enhanced UTL Performance:
MAE: 28354.2389
RMSE: 42849.9248
MAPE: 15.40%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 50
   • Highly important features (top 5%): 38

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0082, rank=1
   2. Feature_0_t3: importance=0.0055, rank=2
   3. Feature_1_t3: importance=0.0039, rank=3
   4. Feature_2_t1: importance=0.0035, rank=4
   5. Feature_1_t1: importance=0.0034, rank=5

📊 UTL Results:
  Baseline MAPE: 15.10%
  Enhanced MAPE: 15.40%
  MAPE Improvement: -0.30% (-2.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 438/464: UVV
============================================================
📊 Loading data for UVV...
📊 Loading data for UVV from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for UVV...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for UVV...

==================================================
Training Baseline UVV (SVM)
==================================================
Training SVM model...

Baseline UVV Performance:
MAE: 79427.5482
RMSE: 146265.7017
MAPE: 19.66%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 156
   • Highly important features (top 5%): 86

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t0: importance=0.0006, rank=1
   2. Feature_67_t3: importance=0.0003, rank=2
   3. Feature_83_t0: importance=0.0002, rank=3
   4. Feature_63_t2: importance=0.0002, rank=4
   5. Feature_94_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for UVV...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for UVV...

==================================================
Training Enhanced UVV (SVM)
==================================================
Training SVM model...

Enhanced UVV Performance:
MAE: 78302.2079
RMSE: 147334.6893
MAPE: 19.78%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 58
   • Highly important features (top 5%): 41

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t2: importance=0.0021, rank=1
   2. Feature_12_t0: importance=0.0012, rank=2
   3. Feature_0_t0: importance=0.0012, rank=3
   4. Feature_1_t0: importance=0.0011, rank=4
   5. Feature_0_t3: importance=0.0011, rank=5

📊 UVV Results:
  Baseline MAPE: 19.66%
  Enhanced MAPE: 19.78%
  MAPE Improvement: -0.12% (-0.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 439/464: VBTX
============================================================
📊 Loading data for VBTX...
📊 Loading data for VBTX from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing VBTX: 'VBTX'

============================================================
TESTING TICKER 440/464: VCEL
============================================================
📊 Loading data for VCEL...
📊 Loading data for VCEL from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for VCEL...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for VCEL...

==================================================
Training Baseline VCEL (SVM)
==================================================
Training SVM model...

Baseline VCEL Performance:
MAE: 366306.4231
RMSE: 570262.1719
MAPE: 10.42%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 100
   • Highly important features (top 5%): 61

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_88_t0: importance=0.0013, rank=1
   2. Feature_94_t3: importance=0.0009, rank=2
   3. Feature_92_t2: importance=0.0009, rank=3
   4. Feature_67_t3: importance=0.0007, rank=4
   5. Feature_92_t3: importance=0.0005, rank=5

🔧 Applying universal feature engineering for VCEL...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for VCEL...

==================================================
Training Enhanced VCEL (SVM)
==================================================
Training SVM model...

Enhanced VCEL Performance:
MAE: 418822.9773
RMSE: 636340.4605
MAPE: 11.75%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 28
   • Highly important features (top 5%): 19

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t2: importance=0.0010, rank=1
   2. Feature_14_t3: importance=0.0009, rank=2
   3. Feature_2_t0: importance=0.0009, rank=3
   4. Feature_2_t1: importance=0.0008, rank=4
   5. Feature_0_t3: importance=0.0007, rank=5

📊 VCEL Results:
  Baseline MAPE: 10.42%
  Enhanced MAPE: 11.75%
  MAPE Improvement: -1.32% (-12.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 441/464: VCYT
============================================================
📊 Loading data for VCYT...
📊 Loading data for VCYT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing VCYT: 'VCYT'

============================================================
TESTING TICKER 442/464: VECO
============================================================
📊 Loading data for VECO...
📊 Loading data for VECO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for VECO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for VECO...

==================================================
Training Baseline VECO (SVM)
==================================================
Training SVM model...

Baseline VECO Performance:
MAE: 339967.9838
RMSE: 448871.9506
MAPE: 6.28%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 113
   • Highly important features (top 5%): 45

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0003, rank=1
   2. Feature_65_t1: importance=0.0003, rank=2
   3. Feature_76_t0: importance=0.0003, rank=3
   4. Feature_90_t2: importance=0.0002, rank=4
   5. Feature_65_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for VECO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for VECO...

==================================================
Training Enhanced VECO (SVM)
==================================================
Training SVM model...

Enhanced VECO Performance:
MAE: 378739.1541
RMSE: 454061.4880
MAPE: 7.22%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 28
   • Highly important features (top 5%): 15

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t1: importance=0.0011, rank=1
   2. Feature_1_t1: importance=0.0009, rank=2
   3. Feature_1_t0: importance=0.0008, rank=3
   4. Feature_0_t0: importance=0.0008, rank=4
   5. Feature_2_t3: importance=0.0007, rank=5

📊 VECO Results:
  Baseline MAPE: 6.28%
  Enhanced MAPE: 7.22%
  MAPE Improvement: -0.93% (-14.9%)
  Features: 97 -> 15

============================================================
TESTING TICKER 443/464: VIAV
============================================================
📊 Loading data for VIAV...
📊 Loading data for VIAV from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for VIAV...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for VIAV...

==================================================
Training Baseline VIAV (SVM)
==================================================
Training SVM model...

Baseline VIAV Performance:
MAE: 456121.5031
RMSE: 583851.5733
MAPE: 8.77%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 124
   • Highly important features (top 5%): 51

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_81_t0: importance=0.0003, rank=1
   2. Feature_66_t1: importance=0.0003, rank=2
   3. Feature_74_t3: importance=0.0003, rank=3
   4. Feature_66_t3: importance=0.0002, rank=4
   5. Feature_82_t0: importance=0.0002, rank=5

🔧 Applying universal feature engineering for VIAV...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for VIAV...

==================================================
Training Enhanced VIAV (SVM)
==================================================
Training SVM model...

Enhanced VIAV Performance:
MAE: 433903.9649
RMSE: 572170.1693
MAPE: 8.42%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 35
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t2: importance=0.0014, rank=1
   2. Feature_2_t2: importance=0.0013, rank=2
   3. Feature_0_t0: importance=0.0010, rank=3
   4. Feature_0_t3: importance=0.0006, rank=4
   5. Feature_1_t1: importance=0.0004, rank=5

📊 VIAV Results:
  Baseline MAPE: 8.77%
  Enhanced MAPE: 8.42%
  MAPE Improvement: +0.36% (+4.1%)
  Features: 97 -> 15

============================================================
TESTING TICKER 444/464: VICR
============================================================
📊 Loading data for VICR...
📊 Loading data for VICR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for VICR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for VICR...

==================================================
Training Baseline VICR (SVM)
==================================================
Training SVM model...

Baseline VICR Performance:
MAE: 102986.1399
RMSE: 126441.2794
MAPE: 6.21%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 200
   • Highly important features (top 5%): 47

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_67_t3: importance=0.0011, rank=1
   2. Feature_68_t3: importance=0.0005, rank=2
   3. Feature_63_t2: importance=0.0003, rank=3
   4. Feature_70_t3: importance=0.0003, rank=4
   5. Feature_63_t1: importance=0.0002, rank=5

🔧 Applying universal feature engineering for VICR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for VICR...

==================================================
Training Enhanced VICR (SVM)
==================================================
Training SVM model...

Enhanced VICR Performance:
MAE: 82819.7405
RMSE: 111227.8528
MAPE: 5.08%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 51
   • Highly important features (top 5%): 20

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t0: importance=0.0013, rank=1
   2. Feature_2_t1: importance=0.0013, rank=2
   3. Feature_1_t3: importance=0.0010, rank=3
   4. Feature_1_t0: importance=0.0007, rank=4
   5. Feature_2_t0: importance=0.0007, rank=5

📊 VICR Results:
  Baseline MAPE: 6.21%
  Enhanced MAPE: 5.08%
  MAPE Improvement: +1.13% (+18.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 445/464: VIRT
============================================================
📊 Loading data for VIRT...
📊 Loading data for VIRT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for VIRT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for VIRT...

==================================================
Training Baseline VIRT (SVM)
==================================================
Training SVM model...

Baseline VIRT Performance:
MAE: 310034.5658
RMSE: 484251.5164
MAPE: 12.25%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 338
   • Highly important features (top 5%): 212

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_84_t1: importance=0.0006, rank=1
   2. Feature_68_t3: importance=0.0005, rank=2
   3. Feature_65_t0: importance=0.0004, rank=3
   4. Feature_82_t0: importance=0.0004, rank=4
   5. Feature_63_t3: importance=0.0003, rank=5

🔧 Applying universal feature engineering for VIRT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for VIRT...

==================================================
Training Enhanced VIRT (SVM)
==================================================
Training SVM model...

Enhanced VIRT Performance:
MAE: 322374.5927
RMSE: 498097.9044
MAPE: 12.74%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 55
   • Highly important features (top 5%): 48

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_6_t3: importance=0.0028, rank=1
   2. Feature_1_t0: importance=0.0021, rank=2
   3. Feature_1_t3: importance=0.0020, rank=3
   4. Feature_1_t1: importance=0.0017, rank=4
   5. Feature_1_t2: importance=0.0016, rank=5

📊 VIRT Results:
  Baseline MAPE: 12.25%
  Enhanced MAPE: 12.74%
  MAPE Improvement: -0.49% (-4.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 446/464: VRTS
============================================================
📊 Loading data for VRTS...
📊 Loading data for VRTS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing VRTS: 'VRTS'

============================================================
TESTING TICKER 447/464: VSAT
============================================================
📊 Loading data for VSAT...
📊 Loading data for VSAT from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for VSAT...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for VSAT...

==================================================
Training Baseline VSAT (SVM)
==================================================
Training SVM model...

Baseline VSAT Performance:
MAE: 1231150.9953
RMSE: 1594505.6688
MAPE: 7.11%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 108
   • Highly important features (top 5%): 50

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_69_t3: importance=0.0002, rank=1
   2. Feature_63_t2: importance=0.0001, rank=2
   3. Feature_87_t0: importance=0.0001, rank=3
   4. Feature_0_t2: importance=0.0001, rank=4
   5. Feature_56_t0: importance=0.0001, rank=5

🔧 Applying universal feature engineering for VSAT...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for VSAT...

==================================================
Training Enhanced VSAT (SVM)
==================================================
Training SVM model...

Enhanced VSAT Performance:
MAE: 1247979.8480
RMSE: 1616249.8835
MAPE: 7.22%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 34
   • Highly important features (top 5%): 15

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t1: importance=0.0008, rank=1
   2. Feature_4_t2: importance=0.0003, rank=2
   3. Feature_3_t2: importance=0.0003, rank=3
   4. Feature_2_t1: importance=0.0003, rank=4
   5. Feature_5_t2: importance=0.0002, rank=5

📊 VSAT Results:
  Baseline MAPE: 7.11%
  Enhanced MAPE: 7.22%
  MAPE Improvement: -0.11% (-1.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 448/464: VSH
============================================================
📊 Loading data for VSH...
📊 Loading data for VSH from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for VSH...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for VSH...

==================================================
Training Baseline VSH (SVM)
==================================================
Training SVM model...

Baseline VSH Performance:
MAE: 773796.7836
RMSE: 1129449.6734
MAPE: 6.58%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 221
   • Highly important features (top 5%): 151

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_82_t3: importance=0.0001, rank=1
   2. Feature_1_t3: importance=0.0001, rank=2
   3. Feature_79_t2: importance=0.0001, rank=3
   4. Feature_80_t3: importance=0.0000, rank=4
   5. Feature_63_t3: importance=0.0000, rank=5

🔧 Applying universal feature engineering for VSH...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for VSH...

==================================================
Training Enhanced VSH (SVM)
==================================================
Training SVM model...

Enhanced VSH Performance:
MAE: 809248.5539
RMSE: 1124626.3706
MAPE: 6.82%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 28
   • Highly important features (top 5%): 24

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0003, rank=1
   2. Feature_1_t3: importance=0.0003, rank=2
   3. Feature_4_t0: importance=0.0002, rank=3
   4. Feature_1_t2: importance=0.0002, rank=4
   5. Feature_2_t1: importance=0.0002, rank=5

📊 VSH Results:
  Baseline MAPE: 6.58%
  Enhanced MAPE: 6.82%
  MAPE Improvement: -0.24% (-3.6%)
  Features: 97 -> 15

============================================================
TESTING TICKER 449/464: WABC
============================================================
📊 Loading data for WABC...
📊 Loading data for WABC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for WABC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for WABC...

==================================================
Training Baseline WABC (SVM)
==================================================
Training SVM model...

Baseline WABC Performance:
MAE: 34771.5893
RMSE: 43647.0745
MAPE: 11.98%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 307
   • Highly important features (top 5%): 140

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_72_t0: importance=0.0001, rank=1
   2. Feature_70_t0: importance=0.0001, rank=2
   3. Feature_93_t1: importance=0.0001, rank=3
   4. Feature_87_t0: importance=0.0001, rank=4
   5. Feature_96_t0: importance=0.0001, rank=5

🔧 Applying universal feature engineering for WABC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for WABC...

==================================================
Training Enhanced WABC (SVM)
==================================================
Training SVM model...

Enhanced WABC Performance:
MAE: 38450.1678
RMSE: 48211.9342
MAPE: 13.22%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 38
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0012, rank=1
   2. Feature_1_t0: importance=0.0009, rank=2
   3. Feature_1_t3: importance=0.0009, rank=3
   4. Feature_1_t1: importance=0.0008, rank=4
   5. Feature_6_t0: importance=0.0005, rank=5

📊 WABC Results:
  Baseline MAPE: 11.98%
  Enhanced MAPE: 13.22%
  MAPE Improvement: -1.24% (-10.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 450/464: WAFD
============================================================
📊 Loading data for WAFD...
📊 Loading data for WAFD from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for WAFD...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for WAFD...

==================================================
Training Baseline WAFD (SVM)
==================================================
Training SVM model...

Baseline WAFD Performance:
MAE: 227279.7874
RMSE: 296498.5272
MAPE: 12.59%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 236
   • Highly important features (top 5%): 123

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0006, rank=1
   2. Feature_88_t1: importance=0.0006, rank=2
   3. Feature_72_t0: importance=0.0005, rank=3
   4. Feature_73_t3: importance=0.0004, rank=4
   5. Feature_86_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for WAFD...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for WAFD...

==================================================
Training Enhanced WAFD (SVM)
==================================================
Training SVM model...

Enhanced WAFD Performance:
MAE: 219869.3830
RMSE: 302341.8895
MAPE: 12.40%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 38
   • Highly important features (top 5%): 34

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0044, rank=1
   2. Feature_2_t3: importance=0.0038, rank=2
   3. Feature_1_t3: importance=0.0020, rank=3
   4. Feature_14_t2: importance=0.0020, rank=4
   5. Feature_11_t2: importance=0.0012, rank=5

📊 WAFD Results:
  Baseline MAPE: 12.59%
  Enhanced MAPE: 12.40%
  MAPE Improvement: +0.19% (+1.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 451/464: WD
============================================================
📊 Loading data for WD...
📊 Loading data for WD from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for WD...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for WD...

==================================================
Training Baseline WD (SVM)
==================================================
Training SVM model...

Baseline WD Performance:
MAE: 96176.7289
RMSE: 165699.6297
MAPE: 8.30%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 341
   • Highly important features (top 5%): 213

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_2_t3: importance=0.0004, rank=1
   2. Feature_78_t3: importance=0.0004, rank=2
   3. Feature_95_t3: importance=0.0003, rank=3
   4. Feature_92_t1: importance=0.0003, rank=4
   5. Feature_94_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for WD...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for WD...

==================================================
Training Enhanced WD (SVM)
==================================================
Training SVM model...

Enhanced WD Performance:
MAE: 99055.9517
RMSE: 148620.1851
MAPE: 8.67%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 56
   • Highly important features (top 5%): 44

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0028, rank=1
   2. Feature_2_t3: importance=0.0018, rank=2
   3. Feature_10_t2: importance=0.0015, rank=3
   4. Feature_13_t2: importance=0.0012, rank=4
   5. Feature_9_t2: importance=0.0012, rank=5

📊 WD Results:
  Baseline MAPE: 8.30%
  Enhanced MAPE: 8.67%
  MAPE Improvement: -0.38% (-4.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 452/464: WDFC
============================================================
📊 Loading data for WDFC...
📊 Loading data for WDFC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for WDFC...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for WDFC...

==================================================
Training Baseline WDFC (SVM)
==================================================
Training SVM model...

Baseline WDFC Performance:
MAE: 39830.6402
RMSE: 55684.0997
MAPE: 3.50%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 263
   • Highly important features (top 5%): 178

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_67_t3: importance=0.0001, rank=1
   2. Feature_65_t3: importance=0.0000, rank=2
   3. Feature_93_t3: importance=0.0000, rank=3
   4. Feature_71_t1: importance=0.0000, rank=4
   5. Feature_72_t1: importance=0.0000, rank=5

🔧 Applying universal feature engineering for WDFC...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for WDFC...

==================================================
Training Enhanced WDFC (SVM)
==================================================
Training SVM model...

Enhanced WDFC Performance:
MAE: 45835.8560
RMSE: 60419.5890
MAPE: 3.94%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 25
   • Highly important features (top 5%): 14

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0003, rank=1
   2. Feature_2_t0: importance=0.0001, rank=2
   3. Feature_1_t0: importance=0.0001, rank=3
   4. Feature_1_t1: importance=0.0001, rank=4
   5. Feature_5_t3: importance=0.0000, rank=5

📊 WDFC Results:
  Baseline MAPE: 3.50%
  Enhanced MAPE: 3.94%
  MAPE Improvement: -0.45% (-12.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 453/464: WEN
============================================================
📊 Loading data for WEN...
📊 Loading data for WEN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for WEN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for WEN...

==================================================
Training Baseline WEN (SVM)
==================================================
Training SVM model...

Baseline WEN Performance:
MAE: 1648656.9810
RMSE: 2197511.0225
MAPE: 12.57%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 236
   • Highly important features (top 5%): 125

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t2: importance=0.0004, rank=1
   2. Feature_84_t1: importance=0.0004, rank=2
   3. Feature_0_t3: importance=0.0004, rank=3
   4. Feature_67_t2: importance=0.0003, rank=4
   5. Feature_95_t1: importance=0.0003, rank=5

🔧 Applying universal feature engineering for WEN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for WEN...

==================================================
Training Enhanced WEN (SVM)
==================================================
Training SVM model...

Enhanced WEN Performance:
MAE: 1665420.0811
RMSE: 2228175.9247
MAPE: 12.88%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 41
   • Highly important features (top 5%): 28

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0040, rank=1
   2. Feature_2_t2: importance=0.0021, rank=2
   3. Feature_1_t3: importance=0.0018, rank=3
   4. Feature_11_t0: importance=0.0008, rank=4
   5. Feature_8_t3: importance=0.0007, rank=5

📊 WEN Results:
  Baseline MAPE: 12.57%
  Enhanced MAPE: 12.88%
  MAPE Improvement: -0.31% (-2.5%)
  Features: 97 -> 15

============================================================
TESTING TICKER 454/464: WERN
============================================================
📊 Loading data for WERN...
📊 Loading data for WERN from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for WERN...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for WERN...

==================================================
Training Baseline WERN (SVM)
==================================================
Training SVM model...

Baseline WERN Performance:
MAE: 358221.3066
RMSE: 444247.2142
MAPE: 10.29%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 130
   • Highly important features (top 5%): 74

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t0: importance=0.0004, rank=1
   2. Feature_63_t3: importance=0.0003, rank=2
   3. Feature_79_t2: importance=0.0003, rank=3
   4. Feature_64_t3: importance=0.0002, rank=4
   5. Feature_70_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for WERN...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for WERN...

==================================================
Training Enhanced WERN (SVM)
==================================================
Training SVM model...

Enhanced WERN Performance:
MAE: 383899.9734
RMSE: 456908.5212
MAPE: 11.24%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 36
   • Highly important features (top 5%): 18

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0019, rank=1
   2. Feature_1_t1: importance=0.0016, rank=2
   3. Feature_1_t0: importance=0.0014, rank=3
   4. Feature_6_t2: importance=0.0006, rank=4
   5. Feature_0_t3: importance=0.0005, rank=5

📊 WERN Results:
  Baseline MAPE: 10.29%
  Enhanced MAPE: 11.24%
  MAPE Improvement: -0.95% (-9.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 455/464: WGO
============================================================
📊 Loading data for WGO...
📊 Loading data for WGO from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for WGO...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for WGO...

==================================================
Training Baseline WGO (SVM)
==================================================
Training SVM model...

Baseline WGO Performance:
MAE: 258968.2417
RMSE: 322589.3825
MAPE: 5.70%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 201
   • Highly important features (top 5%): 89

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_69_t3: importance=0.0002, rank=1
   2. Feature_94_t0: importance=0.0002, rank=2
   3. Feature_70_t3: importance=0.0002, rank=3
   4. Feature_71_t3: importance=0.0001, rank=4
   5. Feature_93_t0: importance=0.0001, rank=5

🔧 Applying universal feature engineering for WGO...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for WGO...

==================================================
Training Enhanced WGO (SVM)
==================================================
Training SVM model...

Enhanced WGO Performance:
MAE: 249954.5445
RMSE: 314644.2644
MAPE: 5.53%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 42
   • Highly important features (top 5%): 30

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0006, rank=1
   2. Feature_0_t2: importance=0.0006, rank=2
   3. Feature_1_t0: importance=0.0006, rank=3
   4. Feature_1_t3: importance=0.0005, rank=4
   5. Feature_1_t1: importance=0.0005, rank=5

📊 WGO Results:
  Baseline MAPE: 5.70%
  Enhanced MAPE: 5.53%
  MAPE Improvement: +0.17% (+3.0%)
  Features: 97 -> 15

============================================================
TESTING TICKER 456/464: WOR
============================================================
📊 Loading data for WOR...
📊 Loading data for WOR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for WOR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for WOR...

==================================================
Training Baseline WOR (SVM)
==================================================
Training SVM model...

Baseline WOR Performance:
MAE: 175241.5633
RMSE: 244375.3284
MAPE: 14.56%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 130
   • Highly important features (top 5%): 85

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_95_t0: importance=0.0016, rank=1
   2. Feature_96_t0: importance=0.0013, rank=2
   3. Feature_73_t3: importance=0.0008, rank=3
   4. Feature_69_t0: importance=0.0008, rank=4
   5. Feature_75_t3: importance=0.0007, rank=5

🔧 Applying universal feature engineering for WOR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for WOR...

==================================================
Training Enhanced WOR (SVM)
==================================================
Training SVM model...

Enhanced WOR Performance:
MAE: 163399.1684
RMSE: 236033.0022
MAPE: 13.78%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 33

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0080, rank=1
   2. Feature_2_t0: importance=0.0028, rank=2
   3. Feature_9_t3: importance=0.0018, rank=3
   4. Feature_2_t2: importance=0.0016, rank=4
   5. Feature_4_t1: importance=0.0015, rank=5

📊 WOR Results:
  Baseline MAPE: 14.56%
  Enhanced MAPE: 13.78%
  MAPE Improvement: +0.78% (+5.4%)
  Features: 97 -> 15

============================================================
TESTING TICKER 457/464: WRLD
============================================================
📊 Loading data for WRLD...
📊 Loading data for WRLD from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing WRLD: 'WRLD'

============================================================
TESTING TICKER 458/464: WSC
============================================================
📊 Loading data for WSC...
📊 Loading data for WSC from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
❌ Error testing WSC: 'WSC'

============================================================
TESTING TICKER 459/464: WSFS
============================================================
📊 Loading data for WSFS...
📊 Loading data for WSFS from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for WSFS...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for WSFS...

==================================================
Training Baseline WSFS (SVM)
==================================================
Training SVM model...

Baseline WSFS Performance:
MAE: 131914.5087
RMSE: 169770.9686
MAPE: 9.69%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 270
   • Highly important features (top 5%): 108

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t0: importance=0.0010, rank=1
   2. Feature_70_t3: importance=0.0008, rank=2
   3. Feature_63_t3: importance=0.0006, rank=3
   4. Feature_0_t3: importance=0.0006, rank=4
   5. Feature_68_t3: importance=0.0005, rank=5

🔧 Applying universal feature engineering for WSFS...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for WSFS...

==================================================
Training Enhanced WSFS (SVM)
==================================================
Training SVM model...

Enhanced WSFS Performance:
MAE: 146261.5341
RMSE: 183279.4289
MAPE: 10.86%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 60
   • Highly important features (top 5%): 57

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0039, rank=1
   2. Feature_2_t1: importance=0.0026, rank=2
   3. Feature_2_t0: importance=0.0024, rank=3
   4. Feature_2_t3: importance=0.0024, rank=4
   5. Feature_1_t2: importance=0.0024, rank=5

📊 WSFS Results:
  Baseline MAPE: 9.69%
  Enhanced MAPE: 10.86%
  MAPE Improvement: -1.18% (-12.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 460/464: WSR
============================================================
📊 Loading data for WSR...
📊 Loading data for WSR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for WSR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for WSR...

==================================================
Training Baseline WSR (SVM)
==================================================
Training SVM model...

Baseline WSR Performance:
MAE: 91765.7348
RMSE: 117957.5500
MAPE: 14.07%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 170
   • Highly important features (top 5%): 89

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_75_t0: importance=0.0013, rank=1
   2. Feature_76_t0: importance=0.0010, rank=2
   3. Feature_73_t2: importance=0.0009, rank=3
   4. Feature_0_t3: importance=0.0008, rank=4
   5. Feature_75_t1: importance=0.0008, rank=5

🔧 Applying universal feature engineering for WSR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for WSR...

==================================================
Training Enhanced WSR (SVM)
==================================================
Training SVM model...

Enhanced WSR Performance:
MAE: 115407.9943
RMSE: 145539.3663
MAPE: 20.44%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 34
   • Highly important features (top 5%): 14

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_0_t3: importance=0.0084, rank=1
   2. Feature_1_t2: importance=0.0066, rank=2
   3. Feature_1_t0: importance=0.0038, rank=3
   4. Feature_1_t1: importance=0.0037, rank=4
   5. Feature_2_t3: importance=0.0029, rank=5

📊 WSR Results:
  Baseline MAPE: 14.07%
  Enhanced MAPE: 20.44%
  MAPE Improvement: -6.37% (-45.3%)
  Features: 97 -> 15

============================================================
TESTING TICKER 461/464: WWW
============================================================
📊 Loading data for WWW...
📊 Loading data for WWW from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for WWW...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for WWW...

==================================================
Training Baseline WWW (SVM)
==================================================
Training SVM model...

Baseline WWW Performance:
MAE: 565346.9851
RMSE: 856391.0081
MAPE: 10.27%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 290
   • Highly important features (top 5%): 152

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_69_t3: importance=0.0007, rank=1
   2. Feature_67_t3: importance=0.0005, rank=2
   3. Feature_70_t3: importance=0.0003, rank=3
   4. Feature_64_t3: importance=0.0003, rank=4
   5. Feature_0_t3: importance=0.0002, rank=5

🔧 Applying universal feature engineering for WWW...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
⚠️ Some errors in feature engineering: 3 train, 0 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for WWW...

==================================================
Training Enhanced WWW (SVM)
==================================================
Training SVM model...
❌ Error testing WWW: X has 100 features, but StandardScaler is expecting 60 features as input.

============================================================
TESTING TICKER 462/464: XHR
============================================================
📊 Loading data for XHR...
📊 Loading data for XHR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for XHR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for XHR...

==================================================
Training Baseline XHR (SVM)
==================================================
Training SVM model...

Baseline XHR Performance:
MAE: 375703.9961
RMSE: 499168.4793
MAPE: 10.15%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 276
   • Highly important features (top 5%): 181

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_70_t3: importance=0.0018, rank=1
   2. Feature_69_t3: importance=0.0016, rank=2
   3. Feature_1_t3: importance=0.0011, rank=3
   4. Feature_69_t2: importance=0.0011, rank=4
   5. Feature_81_t3: importance=0.0009, rank=5

🔧 Applying universal feature engineering for XHR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for XHR...

==================================================
Training Enhanced XHR (SVM)
==================================================
Training SVM model...

Enhanced XHR Performance:
MAE: 319489.5267
RMSE: 409437.7838
MAPE: 8.61%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 48
   • Highly important features (top 5%): 35

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0082, rank=1
   2. Feature_2_t0: importance=0.0024, rank=2
   3. Feature_2_t2: importance=0.0024, rank=3
   4. Feature_8_t2: importance=0.0017, rank=4
   5. Feature_2_t1: importance=0.0016, rank=5

📊 XHR Results:
  Baseline MAPE: 10.15%
  Enhanced MAPE: 8.61%
  MAPE Improvement: +1.54% (+15.2%)
  Features: 97 -> 15

============================================================
TESTING TICKER 463/464: XNCR
============================================================
📊 Loading data for XNCR...
📊 Loading data for XNCR from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for XNCR...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for XNCR...

==================================================
Training Baseline XNCR (SVM)
==================================================
Training SVM model...

Baseline XNCR Performance:
MAE: 424852.1688
RMSE: 536074.9827
MAPE: 7.64%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 119
   • Highly important features (top 5%): 69

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_63_t3: importance=0.0002, rank=1
   2. Feature_72_t3: importance=0.0002, rank=2
   3. Feature_82_t3: importance=0.0001, rank=3
   4. Feature_67_t3: importance=0.0001, rank=4
   5. Feature_80_t3: importance=0.0001, rank=5

🔧 Applying universal feature engineering for XNCR...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for XNCR...

==================================================
Training Enhanced XNCR (SVM)
==================================================
Training SVM model...

Enhanced XNCR Performance:
MAE: 463942.1065
RMSE: 556145.7844
MAPE: 8.00%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 21
   • Highly important features (top 5%): 17

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t3: importance=0.0016, rank=1
   2. Feature_2_t0: importance=0.0002, rank=2
   3. Feature_8_t3: importance=0.0002, rank=3
   4. Feature_5_t1: importance=0.0002, rank=4
   5. Feature_6_t3: importance=0.0001, rank=5

📊 XNCR Results:
  Baseline MAPE: 7.64%
  Enhanced MAPE: 8.00%
  MAPE Improvement: -0.36% (-4.7%)
  Features: 97 -> 15

============================================================
TESTING TICKER 464/464: YELP
============================================================
📊 Loading data for YELP...
📊 Loading data for YELP from parquet file...
Loading parquet file: ../data/price_data_multiindex_20250904_113138.parquet
Parquet file loaded. Shape: (6499, 46544)
Date range: 1999-11-01 00:00:00 to 2025-09-03 00:00:00
SI dates range: 2017-12-29 00:00:00 to 2025-07-15 00:00:00
Number of SI observations: 182
Extracting OHLC data for YELP...
Retrieved price data for 1918 trading days
Price data date range: 2017-11-29 00:00:00 to 2025-07-18 00:00:00
Creating price features with 15 days lookback...
Price features shape: (182, 60)
Retrieved short volume data for 1916 days
Short volume data date range: 2017-12-01 00:00:00 to 2025-07-18 00:00:00
Creating short volume features with 15 days lookback...
Short volume features shape: (182, 30)
Combined features shape without short volume: (182, 97)
Training data shape: (106, 4, 97)
Validation data shape: (36, 4, 97)
Test data shape: (36, 4, 97)
✅ Data loaded: Train+Val=(142, 4, 97), Test=(36, 4, 97)

🎯 Training baseline model for YELP...

==================================================
Training Baseline YELP (SVM)
==================================================
Training SVM model...

Baseline YELP Performance:
MAE: 327976.2901
RMSE: 395743.4975
MAPE: 8.62%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 388
   • Important features (top 10%): 272
   • Highly important features (top 5%): 183

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_85_t2: importance=0.0004, rank=1
   2. Feature_87_t2: importance=0.0003, rank=2
   3. Feature_88_t2: importance=0.0003, rank=3
   4. Feature_75_t2: importance=0.0002, rank=4
   5. Feature_69_t2: importance=0.0002, rank=5

🔧 Applying universal feature engineering for YELP...
✅ Claude API client initialized successfully!
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (142, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
✅ Feature selection applied successfully on attempt 1
❌ Attempt 1 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (1/3)
✅ Feature selection applied successfully on attempt 2
❌ Attempt 2 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
🔄 Retrying... (2/3)
✅ Feature selection applied successfully on attempt 3
❌ Attempt 3 failed with error: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (36, 4) + inhomogeneous part.
⚠️ All 3 attempts failed, using fallback function
🆘 Using fallback feature selection...
⚠️ Some errors in feature engineering: 3 train, 3 test
Feature engineering: (142, 4, 97) -> (142, 4, 15)

🚀 Training enhanced model for YELP...

==================================================
Training Enhanced YELP (SVM)
==================================================
Training SVM model...

Enhanced YELP Performance:
MAE: 324408.7890
RMSE: 393905.5806
MAPE: 8.60%

📊 Calculating SVM feature importance...
📈 SVM Feature Importance Analysis:
   • Total features: 60
   • Important features (top 10%): 40
   • Highly important features (top 5%): 23

🔍 TOP 5 MOST IMPORTANT FEATURES:
   1. Feature_1_t2: importance=0.0028, rank=1
   2. Feature_2_t2: importance=0.0018, rank=2
   3. Feature_1_t1: importance=0.0014, rank=3
   4. Feature_2_t1: importance=0.0013, rank=4
   5. Feature_2_t3: importance=0.0011, rank=5

📊 YELP Results:
  Baseline MAPE: 8.62%
  Enhanced MAPE: 8.60%
  MAPE Improvement: +0.02% (+0.3%)
  Features: 97 -> 15

================================================================================
UNIVERSAL FEATURE ENGINEERING PERFORMANCE REPORT
================================================================================

📊 SUMMARY STATISTICS:
  Total tickers tested: 464
  Successful tests: 388
  Failed tests: 76
  Failed tickers: AAP, ACAD, ADMA, ADNT, AIN, ALGT, APLE, AXL, BANF, BFS, BLFS, BOX, BTU, CABO, CALM, CARG, CARS, CASH, CLB, CPRX, DVAX, DXC, EFC, EXPI, EYE, FBK, FDP, FUN, GOGO, HCC, HCI, IAC, IIPR, INSW, JBGS, JJSF, KAR, KREF, KRYS, LPG, MC, MKTX, MRTN, MXL, NPK, NWL, PAHC, PENN, PFBC, PLUS, POWL, PTGX, QDEL, QTWO, REX, SAFE, SKT, SKY, SMPL, SNDR, TDS, TGTX, TNDM, TR, TRNO, TRST, TRUP, UFPT, UHT, UNIT, VBTX, VCYT, VRTS, WRLD, WSC, WWW

🎯 MAPE IMPROVEMENT STATISTICS:
  Average MAPE improvement: -0.48%
  Median MAPE improvement: -0.37%
  Std deviation: 1.54%
  Min improvement: -8.32%
  Max improvement: 3.45%

📈 RELATIVE IMPROVEMENT STATISTICS:
  Average relative improvement: -5.7%
  Median relative improvement: -3.7%
  Std deviation: 17.3%

🏆 IMPROVEMENT DISTRIBUTION:
  Tickers with positive improvement: 143/388 (36.9%)
  Tickers with >0.5% improvement: 81/388 (20.9%)

📋 DETAILED RESULTS:
----------------------------------------------------------------------------------------------------
Ticker   Baseline MAPE Enhanced MAPE Improvement  Rel. Imp.  Features    
----------------------------------------------------------------------------------------------------
AAT      13.28        13.48         -0.20        -1.5       97->15
ABCB     12.17        12.49         -0.32        -2.7       97->15
ABG      4.76         5.76          -0.99        -20.9      97->15
ABM      14.65        15.00         -0.35        -2.4       97->15
ABR      7.40         4.72          2.68         36.2       97->15
ACHC     8.47         8.14          0.34         4.0        97->15
ACIW     5.82         6.35          -0.53        -9.1       97->15
ACLS     8.81         10.12         -1.31        -14.8      97->15
ADUS     10.70        11.60         -0.90        -8.4       97->15
AEIS     6.09         7.99          -1.91        -31.3      97->15
AEO      11.29        11.52         -0.23        -2.0       97->15
AGO      11.95        12.43         -0.48        -4.0       97->15
AGYS     11.66        11.63         0.04         0.3        97->15
AHH      16.91        18.18         -1.28        -7.5       97->15
AIR      13.60        16.28         -2.67        -19.7      97->15
AKR      20.18        22.11         -1.93        -9.6       97->15
AL       12.15        12.96         -0.81        -6.7       97->15
ALEX     13.93        12.09         1.83         13.2       97->15
ALG      8.39         7.61          0.79         9.4        97->15
ALKS     7.79         9.06          -1.26        -16.2      97->15
ALRM     6.94         7.22          -0.29        -4.1       97->15
AMN      10.74        12.45         -1.71        -15.9      97->15
AMPH     6.89         5.61          1.28         18.6       97->15
AMSF     16.89        16.18         0.71         4.2        97->15
AMWD     11.41        13.88         -2.47        -21.7      97->15
ANDE     13.70        12.75         0.95         6.9        97->15
ANGI     27.47        28.36         -0.89        -3.2       97->15
ANIP     12.83        14.84         -2.01        -15.7      97->15
AOSL     9.50         8.31          1.19         12.6       97->15
APAM     8.60         6.64          1.96         22.8       97->15
APOG     9.35         10.07         -0.72        -7.7       97->15
ARCB     8.23         10.13         -1.90        -23.1      97->15
ARI      8.68         8.44          0.23         2.7        97->15
AROC     9.53         10.19         -0.66        -6.9       97->15
ARR      17.72        19.25         -1.53        -8.6       97->15
ARWR     6.36         8.96          -2.59        -40.8      97->15
ASIX     11.77        13.76         -1.99        -16.9      97->15
ASTE     12.31        13.28         -0.96        -7.8       97->15
ATEN     16.60        16.22         0.38         2.3        97->15
ATGE     15.44        16.36         -0.92        -5.9       97->15
AVA      6.98         8.18          -1.20        -17.2      97->15
AWI      19.19        17.42         1.77         9.2        97->15
AWR      11.59        12.41         -0.83        -7.1       97->15
AZZ      13.16        12.11         1.05         8.0        97->15
BANC     8.71         11.47         -2.76        -31.6      97->15
BANR     7.72         9.66          -1.95        -25.2      97->15
BCC      11.88        11.32         0.56         4.7        97->15
BCPC     9.04         9.40          -0.36        -4.0       97->15
BDN      5.66         6.77          -1.11        -19.6      97->15
BHE      11.75        11.09         0.66         5.6        97->15
BJRI     6.57         6.84          -0.27        -4.0       97->15
BKE      7.87         8.66          -0.79        -10.1      97->15
BKU      7.77         10.17         -2.40        -30.9      97->15
BL       9.20         9.05          0.15         1.7        97->15
BLMN     13.88        13.66         0.22         1.6        97->15
BMI      4.92         4.71          0.21         4.3        97->15
BOH      3.86         4.28          -0.42        -11.0      97->15
BOOT     11.62        12.58         -0.95        -8.2       97->15
BRC      19.52        19.68         -0.16        -0.8       97->15
BWA      8.86         9.79          -0.93        -10.5      97->15
BXMT     8.70         8.23          0.46         5.3        97->15
CAKE     5.27         6.45          -1.18        -22.3      97->15
CAL      8.22         8.79          -0.57        -6.9       97->15
CALX     11.43        9.15          2.29         20.0       97->15
CATY     10.00        8.46          1.54         15.4       97->15
CBRL     11.60        12.03         -0.42        -3.6       97->15
CBU      5.84         6.94          -1.10        -18.9      97->15
CC       6.23         6.82          -0.59        -9.4       97->15
CCOI     8.71         9.01          -0.29        -3.4       97->15
CCS      9.94         10.69         -0.75        -7.5       97->15
CE       7.68         11.84         -4.16        -54.2      97->15
CENT     8.01         7.85          0.17         2.1        97->15
CENTA    11.54        12.00         -0.46        -4.0       97->15
CENX     9.27         8.16          1.11         12.0       97->15
CEVA     9.62         9.97          -0.34        -3.6       97->15
CFFN     5.87         7.99          -2.12        -36.2      97->15
CHCO     3.09         2.86          0.23         7.3        97->15
CHEF     6.45         4.67          1.78         27.6       97->15
CNK      5.85         7.73          -1.88        -32.1      97->15
CNMD     7.57         7.67          -0.10        -1.3       97->15
CNS      9.33         7.39          1.94         20.8       97->15
CNXN     13.66        13.74         -0.08        -0.6       97->15
COHU     10.99        10.22         0.77         7.0        97->15
COLL     3.94         7.27          -3.33        -84.3      97->15
CORT     5.07         5.26          -0.19        -3.8       97->15
CPF      17.72        17.41         0.31         1.8        97->15
CPK      12.39        14.84         -2.45        -19.8      97->15
CRI      10.85        10.59         0.27         2.4        97->15
CRK      7.30         8.13          -0.82        -11.3      97->15
CRVL     8.13         9.65          -1.52        -18.6      97->15
CSGS     8.48         7.74          0.74         8.8        97->15
CTRE     16.76        17.52         -0.76        -4.5       97->15
CTS      8.75         10.61         -1.86        -21.2      97->15
CUBI     11.37        12.60         -1.23        -10.8      97->15
CVBF     10.70        12.85         -2.15        -20.1      97->15
CVCO     12.77        11.68         1.09         8.5        97->15
CVI      9.64         12.04         -2.39        -24.8      97->15
CWT      15.54        16.95         -1.41        -9.1       97->15
CXW      12.56        10.24         2.33         18.5       97->15
CZR      9.14         9.94          -0.80        -8.7       97->15
DAN      7.59         10.95         -3.36        -44.2      97->15
DCOM     6.25         9.38          -3.13        -50.0      97->15
DEA      18.11        17.36         0.76         4.2        97->15
DEI      7.61         9.49          -1.88        -24.6      97->15
DFIN     11.45        10.08         1.37         12.0       97->15
DGII     5.83         5.08          0.75         12.8       97->15
DIOD     7.28         8.33          -1.05        -14.4      97->15
DLX      3.70         4.58          -0.89        -24.1      97->15
DNOW     16.30        15.04         1.25         7.7        97->15
DORM     11.44        11.81         -0.37        -3.3       97->15
DRH      7.99         12.93         -4.94        -61.8      97->15
DXPE     9.72         10.25         -0.53        -5.4       97->15
DY       10.92        11.61         -0.69        -6.3       97->15
EAT      7.16         8.05          -0.89        -12.4      97->15
ECPG     4.88         5.84          -0.96        -19.6      97->15
EGBN     10.69        9.25          1.44         13.5       97->15
EIG      15.07        15.32         -0.25        -1.7       97->15
ENPH     7.67         8.89          -1.22        -15.9      97->15
ENR      5.62         5.87          -0.26        -4.5       97->15
ENVA     5.39         6.15          -0.76        -14.1      97->15
EPC      6.07         9.21          -3.14        -51.8      97->15
ESE      14.10        18.29         -4.19        -29.7      97->15
ETSY     8.28         10.27         -1.99        -24.1      97->15
EVTC     11.31        7.87          3.45         30.5       97->15
EXTR     7.53         11.26         -3.73        -49.5      97->15
EZPW     6.87         7.50          -0.63        -9.1       97->15
FBNC     8.74         8.69          0.05         0.6        97->15
FBP      19.88        20.62         -0.74        -3.7       97->15
FCF      10.90        11.04         -0.14        -1.3       97->15
FCPT     10.49        10.94         -0.44        -4.2       97->15
FELE     10.86        12.60         -1.74        -16.0      97->15
FFBC     9.05         9.73          -0.68        -7.5       97->15
FHB      7.47         7.59          -0.12        -1.6       97->15
FIZZ     5.15         6.63          -1.48        -28.7      97->15
FMC      6.83         6.39          0.44         6.5        97->15
FORM     8.68         8.83          -0.15        -1.7       97->15
FOXF     9.32         9.26          0.06         0.7        97->15
FRPT     6.92         5.57          1.35         19.5       97->15
FSS      13.81        14.73         -0.92        -6.7       97->15
FUL      9.55         9.63          -0.07        -0.8       97->15
FULT     7.94         9.90          -1.96        -24.7      97->15
FWRD     14.02        11.04         2.99         21.3       97->15
GBX      5.25         5.98          -0.74        -14.1      97->15
GDEN     10.40        8.70          1.69         16.3       97->15
GEO      13.18        13.15         0.04         0.3        97->15
GES      8.10         7.86          0.24         3.0        97->15
GFF      10.67        9.71          0.96         9.0        97->15
GIII     5.98         5.55          0.43         7.2        97->15
GKOS     11.00        12.12         -1.12        -10.2      97->15
GNL      14.48        14.31         0.17         1.1        97->15
GNW      9.83         10.72         -0.89        -9.1       97->15
GOLF     7.94         7.16          0.78         9.9        97->15
GPI      3.80         3.81          -0.02        -0.5       97->15
GRBK     11.77        10.43         1.34         11.4       97->15
GTY      13.37        11.27         2.11         15.7       97->15
GVA      6.98         8.43          -1.45        -20.8      97->15
HAFC     14.99        14.70         0.29         1.9        97->15
HASI     5.00         5.48          -0.48        -9.6       97->15
HBI      5.74         7.41          -1.68        -29.2      97->15
HCSG     7.46         7.47          -0.01        -0.2       97->15
HELE     9.19         10.57         -1.39        -15.1      97->15
HFWA     10.08        10.67         -0.58        -5.8       97->15
HI       9.71         11.98         -2.26        -23.3      97->15
HIW      14.77        13.99         0.78         5.3        97->15
HL       11.80        12.27         -0.48        -4.0       97->15
HLIT     11.30        14.00         -2.70        -23.9      97->15
HLX      12.58        12.47         0.11         0.9        97->15
HMN      15.10        16.46         -1.36        -9.0       97->15
HNI      11.01        12.67         -1.66        -15.1      97->15
HOPE     12.89        13.57         -0.68        -5.3       97->15
HP       7.13         6.71          0.42         5.8        97->15
HSII     15.90        16.19         -0.29        -1.9       97->15
HSTM     11.35        12.71         -1.36        -12.0      97->15
HTH      11.51        10.82         0.69         6.0        97->15
HTLD     9.59         10.72         -1.13        -11.8      97->15
HUBG     23.65        25.86         -2.21        -9.3       97->15
HWKN     18.51        18.61         -0.10        -0.5       97->15
HZO      6.80         6.74          0.06         0.9        97->15
IART     10.76        9.86          0.90         8.4        97->15
IBP      8.20         11.14         -2.94        -35.9      97->15
ICHR     11.01        12.02         -1.02        -9.2       97->15
ICUI     9.37         9.90          -0.53        -5.7       97->15
IDCC     5.41         8.94          -3.53        -65.1      97->15
IIIN     13.11        13.59         -0.48        -3.7       97->15
INDB     13.04        14.38         -1.35        -10.3      97->15
INN      16.30        13.42         2.89         17.7       97->15
INVA     3.76         4.08          -0.32        -8.6       97->15
IOSP     16.68        16.32         0.37         2.2        97->15
IPAR     9.24         14.03         -4.79        -51.8      97->15
ITGR     7.29         7.74          -0.45        -6.2       97->15
ITRI     7.91         7.23          0.68         8.6        97->15
JBLU     12.15        8.92          3.23         26.6       97->15
JBSS     14.78        16.38         -1.61        -10.9      97->15
JOE      8.79         8.91          -0.11        -1.3       97->15
KAI      11.15        15.42         -4.28        -38.4      97->15
KALU     13.46        14.70         -1.24        -9.2       97->15
KFY      16.08        17.15         -1.07        -6.6       97->15
KLIC     6.53         8.25          -1.72        -26.4      97->15
KMT      8.75         10.09         -1.34        -15.3      97->15
KN       11.34        11.38         -0.04        -0.4       97->15
KOP      14.05        14.06         -0.01        -0.1       97->15
KSS      6.84         7.84          -1.00        -14.6      97->15
KW       10.88        7.58          3.29         30.3       97->15
KWR      5.01         5.57          -0.56        -11.1      97->15
LCII     7.46         6.44          1.03         13.8       97->15
LEG      14.24        15.34         -1.10        -7.7       97->15
LGIH     3.34         4.12          -0.78        -23.2      97->15
LGND     9.47         9.57          -0.09        -1.0       97->15
LKFN     3.96         3.22          0.74         18.6       97->15
LMAT     8.22         9.19          -0.97        -11.8      97->15
LNC      7.15         7.28          -0.13        -1.8       97->15
LNN      9.79         9.26          0.53         5.5        97->15
LQDT     9.86         15.31         -5.44        -55.2      97->15
LRN      7.93         9.20          -1.28        -16.1      97->15
LTC      6.80         8.23          -1.44        -21.2      97->15
LXP      18.93        16.53         2.41         12.7       97->15
LZB      9.11         8.78          0.34         3.7        97->15
MAC      5.40         5.37          0.03         0.6        97->15
MAN      9.66         9.54          0.12         1.2        97->15
MARA     7.59         7.75          -0.15        -2.0       97->15
MATW     9.41         9.12          0.29         3.1        97->15
MATX     15.66        15.12         0.54         3.4        97->15
MCRI     19.72        20.89         -1.17        -5.9       97->15
MCY      12.95        12.67         0.29         2.2        97->15
MD       13.06        13.53         -0.47        -3.6       97->15
MDU      10.42        10.97         -0.55        -5.3       97->15
MGEE     13.65        11.17         2.48         18.2       97->15
MGPI     7.49         7.27          0.22         3.0        97->15
MHO      9.80         8.84          0.96         9.8        97->15
MMI      11.53        9.35          2.18         18.9       97->15
MMSI     8.22         8.88          -0.66        -8.0       97->15
MNRO     6.93         7.00          -0.07        -1.0       97->15
MPW      5.74         3.75          1.99         34.7       97->15
MRCY     4.96         4.57          0.39         7.8        97->15
MSEX     10.02        10.74         -0.72        -7.2       97->15
MTH      13.01        11.91         1.10         8.4        97->15
MTRN     8.63         9.81          -1.19        -13.7      97->15
MTX      12.36        12.01         0.35         2.8        97->15
MWA      13.66        14.82         -1.16        -8.5       97->15
MYGN     10.49        11.83         -1.34        -12.7      97->15
MYRG     12.37        10.88         1.49         12.0       97->15
NAVI     5.32         4.92          0.39         7.4        97->15
NBHC     11.70        13.08         -1.38        -11.8      97->15
NBTB     10.16        9.34          0.82         8.0        97->15
NEO      11.10        12.90         -1.81        -16.3      97->15
NEOG     7.67         15.99         -8.32        -108.4     97->15
NGVT     6.11         7.21          -1.10        -18.0      97->15
NHC      11.40        12.31         -0.91        -8.0       97->15
NMIH     12.62        11.89         0.73         5.8        97->15
NOG      6.33         11.04         -4.71        -74.4      97->15
NPO      11.23        12.26         -1.03        -9.2       97->15
NSIT     9.91         9.34          0.57         5.8        97->15
NTCT     11.33        16.88         -5.56        -49.0      97->15
NWBI     7.54         7.18          0.37         4.8        97->15
NWN      17.20        18.06         -0.86        -5.0       97->15
NX       13.14        14.27         -1.13        -8.6       97->15
NXRT     13.92        14.02         -0.10        -0.7       97->15
OFG      23.64        27.65         -4.01        -17.0      97->15
OI       10.69        9.36          1.34         12.5       97->15
OII      7.00         7.04          -0.04        -0.6       97->15
OMCL     9.65         9.74          -0.09        -0.9       97->15
OSIS     8.65         9.42          -0.77        -8.9       97->15
OTTR     5.28         4.85          0.43         8.2        97->15
OUT      11.06        12.72         -1.66        -15.0      97->15
OXM      6.55         7.50          -0.95        -14.5      97->15
PARR     12.63        11.99         0.65         5.1        97->15
PATK     7.61         7.11          0.50         6.6        97->15
PBH      7.62         7.25          0.38         4.9        97->15
PBI      8.65         7.08          1.57         18.1       97->15
PCRX     7.83         7.48          0.35         4.5        97->15
PDFS     9.06         9.62          -0.55        -6.1       97->15
PEB      7.61         7.88          -0.27        -3.6       97->15
PFS      10.90        9.50          1.40         12.8       97->15
PI       7.21         7.04          0.17         2.4        97->15
PINC     9.71         10.19         -0.49        -5.0       97->15
PJT      9.25         7.75          1.50         16.2       97->15
PLAB     7.56         7.51          0.05         0.7        97->15
PLAY     12.09        11.94         0.15         1.2        97->15
PLXS     12.11        10.33         1.79         14.8       97->15
PMT      7.24         9.09          -1.85        -25.6      97->15
PRA      12.68        13.51         -0.82        -6.5       97->15
PRAA     12.39        11.94         0.45         3.7        97->15
PRGS     5.37         5.42          -0.05        -0.9       97->15
PRK      7.95         6.48          1.47         18.5       97->15
PRLB     11.22        9.41          1.81         16.2       97->15
PSMT     10.17        10.37         -0.20        -2.0       97->15
PTEN     12.12        13.91         -1.79        -14.8      97->15
PZZA     16.65        16.93         -0.28        -1.7       97->15
QNST     13.60        15.72         -2.12        -15.6      97->15
QRVO     11.61        11.71         -0.09        -0.8       97->15
RDN      9.64         10.02         -0.38        -3.9       97->15
RDNT     9.99         9.55          0.44         4.4        97->15
RES      9.95         8.80          1.14         11.5       97->15
RGR      11.12        10.18         0.94         8.5        97->15
RHI      8.28         8.77          -0.50        -6.0       97->15
RHP      12.42        12.87         -0.45        -3.6       97->15
RNST     10.75        12.12         -1.37        -12.7      97->15
ROCK     14.97        15.37         -0.39        -2.6       97->15
ROG      11.16        8.67          2.49         22.3       97->15
RUN      4.78         6.75          -1.97        -41.2      97->15
RUSHA    7.80         8.39          -0.59        -7.6       97->15
RWT      10.21        10.54         -0.33        -3.2       97->15
SABR     7.58         6.49          1.10         14.5       97->15
SAFT     9.74         10.34         -0.60        -6.1       97->15
SAH      5.00         4.83          0.16         3.3        97->15
SANM     10.30        9.90          0.40         3.9        97->15
SBCF     9.64         14.67         -5.03        -52.2      97->15
SBH      8.86         8.84          0.02         0.3        97->15
SBSI     6.62         6.19          0.44         6.6        97->15
SCHL     12.17        13.74         -1.57        -12.9      97->15
SCL      10.11        11.67         -1.56        -15.4      97->15
SCSC     11.52        11.29         0.23         2.0        97->15
SCVL     6.41         7.65          -1.24        -19.4      97->15
SEDG     7.54         9.29          -1.75        -23.2      97->15
SEE      9.63         10.26         -0.63        -6.5       97->15
SEM      8.60         10.31         -1.71        -19.9      97->15
SFBS     5.14         4.94          0.20         3.9        97->15
SFNC     7.78         9.89          -2.11        -27.1      97->15
SHAK     5.09         6.71          -1.62        -31.9      97->15
SHEN     8.26         7.25          1.00         12.1       97->15
SHO      10.56        11.32         -0.76        -7.2       97->15
SHOO     11.83        13.64         -1.81        -15.3      97->15
SIG      6.96         6.30          0.66         9.5        97->15
SKYW     12.03        10.33         1.70         14.1       97->15
SLG      5.00         5.41          -0.41        -8.1       97->15
SM       7.57         7.78          -0.21        -2.8       97->15
SMP      21.40        19.79         1.60         7.5        97->15
SMTC     11.96        12.65         -0.69        -5.8       97->15
SPSC     9.74         10.89         -1.15        -11.8      97->15
SPXC     9.73         10.14         -0.41        -4.2       97->15
SRPT     8.94         8.59          0.34         3.8        97->15
SSTK     7.08         5.51          1.57         22.2       97->15
STAA     8.64         7.86          0.77         9.0        97->15
STBA     6.17         5.28          0.88         14.3       97->15
STC      18.42        18.44         -0.02        -0.1       97->15
STRA     10.96        15.38         -4.42        -40.3      97->15
STRL     9.70         10.85         -1.14        -11.8      97->15
SUPN     6.01         6.93          -0.92        -15.2      97->15
SXC      15.80        16.75         -0.95        -6.0       97->15
SXI      10.23        17.18         -6.95        -68.0      97->15
SXT      10.68        11.46         -0.78        -7.3       97->15
TBBK     5.25         5.06          0.19         3.6        97->15
TDC      9.13         8.47          0.66         7.2        97->15
TDW      7.40         7.11          0.29         3.9        97->15
TFX      20.91        27.28         -6.37        -30.5      97->15
TGNA     11.06        10.96         0.11         1.0        97->15
THRM     10.51        10.06         0.45         4.3        97->15
THS      9.65         9.53          0.12         1.3        97->15
TILE     17.19        16.95         0.24         1.4        97->15
TMP      11.30        11.67         -0.37        -3.3       97->15
TNC      9.71         10.14         -0.44        -4.5       97->15
TPH      13.69        13.84         -0.15        -1.1       97->15
TRIP     11.24        12.15         -0.91        -8.1       97->15
TRMK     7.81         8.35          -0.54        -6.9       97->15
TRN      9.43         8.86          0.57         6.1        97->15
TTMI     14.03        13.70         0.33         2.3        97->15
TWI      9.77         8.62          1.15         11.8       97->15
TWO      12.41        12.91         -0.50        -4.0       97->15
UCTT     9.38         9.32          0.06         0.7        97->15
UE       12.18        12.95         -0.76        -6.3       97->15
UFCS     14.85        17.21         -2.36        -15.9      97->15
UNF      15.10        14.92         0.18         1.2        97->15
UNFI     6.88         7.25          -0.37        -5.3       97->15
URBN     13.19        14.66         -1.47        -11.2      97->15
USNA     9.72         9.80          -0.08        -0.8       97->15
USPH     7.68         8.97          -1.28        -16.7      97->15
UTL      15.10        15.40         -0.30        -2.0       97->15
UVV      19.66        19.78         -0.12        -0.6       97->15
VCEL     10.42        11.75         -1.32        -12.7      97->15
VECO     6.28         7.22          -0.93        -14.9      97->15
VIAV     8.77         8.42          0.36         4.1        97->15
VICR     6.21         5.08          1.13         18.2       97->15
VIRT     12.25        12.74         -0.49        -4.0       97->15
VSAT     7.11         7.22          -0.11        -1.5       97->15
VSH      6.58         6.82          -0.24        -3.6       97->15
WABC     11.98        13.22         -1.24        -10.4      97->15
WAFD     12.59        12.40         0.19         1.5        97->15
WD       8.30         8.67          -0.38        -4.5       97->15
WDFC     3.50         3.94          -0.45        -12.7      97->15
WEN      12.57        12.88         -0.31        -2.5       97->15
WERN     10.29        11.24         -0.95        -9.2       97->15
WGO      5.70         5.53          0.17         3.0        97->15
WOR      14.56        13.78         0.78         5.4        97->15
WSFS     9.69         10.86         -1.18        -12.2      97->15
WSR      14.07        20.44         -6.37        -45.3      97->15
XHR      10.15        8.61          1.54         15.2       97->15
XNCR     7.64         8.00          -0.36        -4.7       97->15
YELP     8.62         8.60          0.02         0.3        97->15
----------------------------------------------------------------------------------------------------

💾 Detailed report saved to: cache/universal_feature_engineering_validation_report.txt
💾 Validation results saved to: cache/universal_feature_engineering_validation_results.pkl

🎯 VALIDATION SUMMARY:
  Successfully tested: 388/464 tickers
  Average MAPE improvement: -0.48%
  Tickers with positive improvement: 143/388 (36.9%)
  Tickers with >0.5% improvement: 81/388 (20.9%)

🎉 Complete multi-ticker process completed successfully!
Processed 12 tickers for iterative feature engineering
Generated and validated universal feature engineering code on 464 tickers

✅ SVM Multi-ticker results:
  Processed 12 tickers for iterative engineering
  Generated universal feature engineering function
  Validated on 388 tickers

🎉 Examples completed!

To run the full pipeline:
  python code/main.py --config development --single-ticker AAPL
  python code/main.py --config production --tickers AAPL TSLA
  python code/main.py --config quick_test --max-tickers 3
